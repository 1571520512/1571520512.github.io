<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2023 _11 _08</title>
    <url>/2023/11/28/2023-11-08/</url>
    <content><![CDATA[<p>今天也是开心的一天</p>
<p>因为今天重新开始写日记了</p>
<p>这个东西忘记的有点多，重新会议一下</p>
<p>准备测试一下Hexo下划线的格式</p>
<p>下划线的格式，只能说有点奇怪</p>
<p>测试的格式走起来</p>
<hr>
<p>测试</p>
<hr>
<hr>
<hr>
<p>——</p>
<p>_</p>
<p>__</p>
<p>_</p>
<p>不停的的测试</p>
<p>这个B标题是真的麻烦</p>
<p>破折号，连在一起就会消失吗</p>
<p>这个是Bug还是特性a，我去</p>
<p>我想要解决一个问题</p>
<p>那就是2023_11_08</p>
<p>在这里我可以直接打出来，但是在Next的主题里面就不行，我觉得这可能是bug</p>
<p>但是如果加一个空格，就可以表示出来，甚至，- 符号也是可以的，但是就只有_不行</p>
]]></content>
      <categories>
        <category>-黄鹏宇</category>
      </categories>
  </entry>
  <entry>
    <title>Char,String类型类型大小写转换的函数</title>
    <url>/2020/10/08/C++%20%E9%87%8CChar-String%E7%B1%BB%E5%9E%8B%E7%B1%BB%E5%9E%8B%E5%A4%A7%E5%B0%8F%E5%86%99%E8%BD%AC%E6%8D%A2%E7%9A%84%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h2 id="Char转换"><a href="#Char转换" class="headerlink" title="Char转换"></a>Char转换</h2><p>可以使用tolower(char c)转换为小写，toupper(char c)转换为大写</p>
<p>例子如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> a = <span class="string">&#x27;a&#x27;</span>, b = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,<span class="built_in">tolower</span>(b));<span class="comment">//把字符转换为小写</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, <span class="built_in">toupper</span>(a)); <span class="comment">//把字符转换为大写 </span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="String转换"><a href="#String转换" class="headerlink" title="String转换"></a>String转换</h2><p>tolower 就是转换为小写</p>
<p>toupper就是转换为大写</p>
<p>例子如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s = <span class="string">&quot;ABCDEFGabcdefg&quot;</span>;</span><br><span class="line">    string result;</span><br><span class="line">    <span class="built_in">transform</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>(), s.<span class="built_in">begin</span>(),::tolower);</span><br><span class="line">    cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">transform</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>(), s.<span class="built_in">begin</span>(),::toupper);</span><br><span class="line">    cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>刷题小技巧</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>Char</tag>
        <tag>String</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言-翁恺-PTA-01-40课后练习题-01</title>
    <url>/2024/03/30/C%E8%AF%AD%E8%A8%80-%E7%BF%81%E6%81%BA-PTA-01-40%E8%AF%BE%E5%90%8E%E7%BB%83%E4%B9%A0%E9%A2%98-01/</url>
    <content><![CDATA[<p>  也是真的想吐槽，这个B练习题，网上一搜代码都是一样的，我是垃圾，不会写，所以上网抄别人的思路，不是，你们这些会写的，怎么思路都一摸一样啊。</p>
<p>PTA真的拉跨，试卷也是拉跨。吐槽完了，记录一下别人的思路，毕竟我是最菜的</p>
<h1 id="7-20-简单计算器（20-分）"><a href="#7-20-简单计算器（20-分）" class="headerlink" title="7-20 简单计算器（20 分）"></a>7-20 简单计算器（20 分）</h1><p>模拟简单运算器的工作。假设计算器只能进行加减乘除运算，运算数和结果都是整数，四种运算符的优先级相同，按从左到右的顺序计算。</p>
<h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h4><p>输入在一行中给出一个四则运算算式，没有空格，且至少有一个操作数。遇等号”=”说明输入结束。</p>
<h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h4><p>在一行中输出算式的运算结果，或者如果除法分母为0或有非法运算符，则输出错误信息“ERROR”。</p>
<h4 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1+2*10-10/2=</span><br></pre></td></tr></table></figure>
<h4 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure>
<h2 id="他人代码如下："><a href="#他人代码如下：" class="headerlink" title="他人代码如下："></a>他人代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n1, n2;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n1); <span class="comment">// 不管怎样先输入一个数</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;ch);</span><br><span class="line">        <span class="keyword">if</span>(ch==<span class="string">&#x27;=&#x27;</span>)&#123; </span><br><span class="line">        <span class="comment">// 如果输入的操作符为等号则直接输出而不必进行后续操作了</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, n1);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">// 否则继续输入第二个操作数</span></span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ch==<span class="string">&#x27;+&#x27;</span>)</span><br><span class="line">            n1 += n2;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">            n1 -= n2;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ch==<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">            n1 *= n2;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ch==<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(n2==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;ERROR\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                n1 /= n2;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;ERROR\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-27-兔子繁衍问题"><a href="#7-27-兔子繁衍问题" class="headerlink" title="7-27 兔子繁衍问题"></a><em>7-27 兔子繁衍问题</em></h1><p><strong>7-27 兔子繁衍问题</strong></p>
<p>分数 15</p>
<p>作者 徐镜春</p>
<p>单位 浙江大学</p>
<p>一对兔子，从出生后第3个月起每个月都生一对兔子。小兔子长到第3个月后每个月又生一对兔子。假如兔子都不死，请问第1个月出生的一对兔子，至少需要繁衍到第几个月时兔子总数才可以达到<em>N</em>对？</p>
<h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式:"></a>输入格式:</h4><p>输入在一行中给出一个不超过10000的正整数<em>N</em>。</p>
<h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式:"></a>输出格式:</h4><p>在一行中输出兔子总数达到<em>N</em>最少需要的月数。</p>
<h4 id="输入样例-1"><a href="#输入样例-1" class="headerlink" title="输入样例:"></a>输入样例:</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">30</span><br></pre></td></tr></table></figure>
<h4 id="输出样例-1"><a href="#输出样例-1" class="headerlink" title="输出样例:"></a>输出样例:</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>这个题目我也不会做，我也是有点抽象的，这个本质是一个<strong><em>斐波那契数列</em></strong></p>
<p>但是我没有发现，我也是一个纯纯的笨蛋了</p>
<h2 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">1</span>, temp, N, month = <span class="number">1</span>;<span class="comment">//b 代表累加的和（总兔子的只数），初始值为1</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (b &lt; N) &#123;</span><br><span class="line">        month++;</span><br><span class="line">        temp = a;<span class="comment">//a 表示新生的兔子对数</span></span><br><span class="line">        a = b;</span><br><span class="line">        b = b + temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, month);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-29-二分法求多项式单根"><a href="#7-29-二分法求多项式单根" class="headerlink" title="7-29 二分法求多项式单根"></a><strong>7-29 二分法求多项式单根</strong></h1><p>这题的一开始写的代码，运行超时了</p>
<p>这个是我写的代码，但是问题比较大，于是，学习一下，别人的代码</p>
<h2 id="错误代码"><a href="#错误代码" class="headerlink" title="错误代码"></a>错误代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">float</span> <span class="title function_">funct</span><span class="params">(<span class="type">int</span> a3,<span class="type">int</span> a2 ,<span class="type">int</span> a1 ,<span class="type">int</span> a,<span class="type">float</span> num)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a3 * num * num * num + a2 * num * num + a1 * num + a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> a3 = <span class="number">0</span>, a2 = <span class="number">0</span>, a1 = <span class="number">0</span>, a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">float</span> left = <span class="number">0</span>, right = <span class="number">0</span>,mid=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d %d&quot;</span>, &amp;a3, &amp;a2, &amp;a1, &amp;a);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f %f&quot;</span>, &amp;left, &amp;right);</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (funct(a3, a2, a1, a, mid) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%0.2f&quot;</span>, mid);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (funct(a3, a2, a1, a, left) * funct(a3, a2, a1, a, mid) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            left = mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>  right = mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="错误的点："><a href="#错误的点：" class="headerlink" title="错误的点："></a>错误的点：</h2><p>这题，我确实是哈皮，这题也只能找一些无限接近于0的点，所以是要人为设置极限的，但是我没有明白，所以就错的蛮多的</p>
<h2 id="改后的代码"><a href="#改后的代码" class="headerlink" title="改后的代码"></a>改后的代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//double a3 = 0, a2 = 0, a1 = 0, a = 0;</span></span><br><span class="line"><span class="type">double</span> <span class="title function_">funct</span><span class="params">(<span class="type">double</span> a3, <span class="type">double</span> a2, <span class="type">double</span> a1, <span class="type">double</span> a, <span class="type">double</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a3 * x * x * x + a2 * x * x + a1 * x + a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">double</span> left = <span class="number">0</span>, right = <span class="number">0</span>, mid = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> a3 = <span class="number">0</span>, a2 = <span class="number">0</span>, a1 = <span class="number">0</span>, a = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf %lf %lf %lf %lf&quot;</span>, &amp;a3, &amp;a2, &amp;a1, &amp;a, &amp;left, &amp;right);</span><br><span class="line">    <span class="keyword">while</span> (right - left &gt;= <span class="number">0.001</span> &amp;&amp; funct(a3,a2,a1,a,left) * funct(a3,a2,a1,a,right) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//right-left&gt;=0.001，就是我们人为设置的极限</span></span><br><span class="line">        <span class="keyword">if</span> (funct(a3,a2,a1,a,left) == <span class="number">0</span>) &#123;</span><br><span class="line">            mid = left;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (funct(a3,a2,a1,a,right) == <span class="number">0</span>) &#123;</span><br><span class="line">            mid = right;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mid = (left + right) / <span class="number">2.0</span>;</span><br><span class="line">        <span class="comment">//if (funct(a3,a2,a1,a,a3, a2, a1, a, mid) == 0) &#123;</span></span><br><span class="line">        <span class="comment">//    printf(&quot;%0.2f&quot;, mid);</span></span><br><span class="line">        <span class="comment">//    return 0;</span></span><br><span class="line">        <span class="comment">//&#125;</span></span><br><span class="line">        <span class="keyword">if</span> (funct(a3,a2,a1,a,left) * funct(a3,a2,a1,a,mid) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            left = mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>  right = mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>, mid);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="别人的代码好在哪里"><a href="#别人的代码好在哪里" class="headerlink" title="别人的代码好在哪里:"></a>别人的代码好在哪里:</h2><p>别人的代码，使用了一个全局变量，考虑到了这个人为设置极限的点：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">double</span> a3,a2,a1,a0;<span class="comment">//跨函数的变量弄成全局变量</span></span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="title function_">f</span><span class="params">(<span class="type">double</span> x)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a3*x*x*x+a2*x*x+a1*x+a0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">double</span> a,b,mid;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf %lf %lf&quot;</span>,&amp;a3,&amp;a2,&amp;a1,&amp;a0);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    <span class="keyword">while</span>(b-a&gt;=<span class="number">1e-4</span> &amp;&amp; f(a)*f(b)&lt;=<span class="number">0</span>)&#123;<span class="comment">//1e-4是10的（-4）次方，小于这个数是因为想到</span></span><br><span class="line">        <span class="keyword">if</span>(f(a)==<span class="number">0</span>)&#123;<span class="comment">//某个时间结束，而不是无限进行下去，不加会TLE</span></span><br><span class="line">            mid=a;<span class="comment">//mid代表是根</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f(b)==<span class="number">0</span>)&#123;</span><br><span class="line">            mid=b;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mid=(a+b)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(f(mid)==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(f(mid)*f(a)&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">                a=mid;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                b=mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>,mid);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-36-韩信点兵"><a href="#7-36-韩信点兵" class="headerlink" title="7-36 韩信点兵"></a><strong>7-36 韩信点兵</strong></h1><p>在中国数学史上，广泛流传着一个“韩信点兵”的故事：韩信是汉高祖刘邦手下的大将，他英勇善战，智谋超群，为汉朝建立了卓越的功劳。据说韩信的数学水平也非常高超，他在点兵的时候，为了知道有多少兵，同时又能保住军事机密，便让士兵排队报数：</p>
<ul>
<li>按从1至5报数，记下最末一个士兵报的数为1；</li>
<li>再按从1至6报数，记下最末一个士兵报的数为5；</li>
<li>再按从1至7报数，记下最末一个士兵报的数为4；</li>
<li>最后按从1至11报数，最末一个士兵报的数为10；</li>
</ul>
<p>请编写程序计算韩信至少有多少兵。</p>
<h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>本题无输入</p>
<h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出韩信至少拥有的士兵人数。</p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>这题是简单的，但是我的直觉告诉我，应该有更好的代码，这是我的暴力算法</p>
<h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>*<span class="number">6</span>*<span class="number">7</span>*<span class="number">11</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">5</span> == <span class="number">1</span> &amp;&amp; i % <span class="number">6</span> == <span class="number">5</span> &amp;&amp; i % <span class="number">7</span> == <span class="number">4</span> &amp;&amp; i % <span class="number">11</span> == <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>不过我简单的找了一下，不是LeetCode上，别人的好代码，没有显示出来</p>
<p>找到的，都是和我差不多的垃圾代码</p>
<h1 id="7-38-支票面额"><a href="#7-38-支票面额" class="headerlink" title="7-38 支票面额"></a><strong>7-38 支票面额</strong></h1><p>这题就是我不会的题目了，也是非常的讨厌的，这题就不会了，我也是一个纯纯的笨蛋</p>
<p>一个采购员去银行兑换一张<em>y</em>元<em>f</em>分的支票，结果出纳员错给了<em>f</em>元<em>y</em>分。采购员用去了<em>n</em>分之后才发觉有错，于是清点了余额尚有2<em>y</em>元2<em>f</em>分，问该支票面额是多少？</p>
<h3 id="输入格式：-1"><a href="#输入格式：-1" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出小于100的正整数<em>n</em>。</p>
<h3 id="输出格式：-1"><a href="#输出格式：-1" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中按格式<code>y.f</code>输出该支票的原始面额。如果无解，则输出<code>No Solution</code>。</p>
<h3 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">23</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">25.51</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">22</span><br></pre></td></tr></table></figure>
<h3 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">No Solution</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="错误原因："><a href="#错误原因：" class="headerlink" title="错误原因："></a>错误原因：</h2><p>这题我确实是应该错的，这题我没有一点点的思路，是真的一点点都没有，换算也不清楚，所以查看其它人的代码。</p>
<p>我真的是痴呆了，元和分的换算公式也能弄错，还有就是我考虑到了，兑换之前的和兑换之后的是两倍，但是我还是没有写出公式</p>
<p>大喊30遍，我是哈皮，题目看错了，我以为的是</p>
<p>采购员去银行兑换，出纳员给错了，然后出纳员用去了n元，余额也是出纳员的，这我怎么可能做的出来，这样有不等式的关系，其实就是可以做的，是我蠢猪了</p>
<p>然后就是这个是有公式的</p>
<script type="math/tex; mode=display">
100*f+y-n=200*y+2*f
\rightarrow</script><script type="math/tex; mode=display">
98*f-199*y=n</script><p>又因为f是分，所以</p>
<script type="math/tex; mode=display">
0<f<100</script><script type="math/tex; mode=display">
98*f-199*y=n</script><script type="math/tex; mode=display">
0<n<100</script><p>上面两个式子一结合等于</p>
<script type="math/tex; mode=display">
y<\frac{98*f}{199}</script><p>f的最大值，是100（无法取到），一算就是</p>
<script type="math/tex; mode=display">
0<=y<49</script><h2 id="综上所述，代码如下"><a href="#综上所述，代码如下" class="headerlink" title="综上所述，代码如下:"></a>综上所述，代码如下:</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> y = <span class="number">0</span>, f = <span class="number">0</span>, n = <span class="number">0</span>,flag=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> y = <span class="number">0</span>; y &lt; <span class="number">49</span>; y++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> f = <span class="number">0</span>; f &lt; <span class="number">100</span>; f++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">98</span> * f - <span class="number">199</span> * y == n) &#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d.%d&quot;</span>, y, f);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!flag)   <span class="built_in">printf</span>(<span class="string">&quot;No Solution&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-39-龟兔赛跑"><a href="#7-39-龟兔赛跑" class="headerlink" title="7-39 龟兔赛跑"></a><strong>7-39 龟兔赛跑</strong></h1><p>乌龟与兔子进行赛跑，跑场是一个矩型跑道，跑道边可以随地进行休息。乌龟每分钟可以前进3米，兔子每分钟前进9米；兔子嫌乌龟跑得慢，觉得肯定能跑赢乌龟，于是，每跑10分钟回头看一下乌龟，若发现自己超过乌龟，就在路边休息，每次休息30分钟，否则继续跑10分钟；而乌龟非常努力，一直跑，不休息。假定乌龟与兔子在同一起点同一时刻开始起跑，请问T分钟后乌龟和兔子谁跑得快？</p>
<h3 id="输入格式：-2"><a href="#输入格式：-2" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出比赛时间T（分钟）。</p>
<h3 id="输出格式：-2"><a href="#输出格式：-2" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出比赛的结果：乌龟赢输出<code>@_@</code>，兔子赢输出<code>^_^</code>，平局则输出<code>-_-</code>；后跟1空格，再输出胜利者跑完的距离。</p>
<h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">242</span><br></pre></td></tr></table></figure>
<h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@_@ 726</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<h2 id="错误原因，"><a href="#错误原因，" class="headerlink" title="错误原因，"></a>错误原因，</h2><p>这题我确实是一点思路都没有，这题，数学的问题，就感觉很头疼</p>
<p>这题的代码和思路，主要是Copy这个大佬的，地址如下，代码也如下：</p>
<p><a href="https://www.cnblogs.com/haimeng-lin/p/15427074.html">https://www.cnblogs.com/haimeng-lin/p/15427074.html</a></p>
<p>本题乌龟的路程很简单，计算兔子的路程关键就在怎么区分兔子跑步的时间。引入两个参数，run参数显示兔子状态，为1则在跑步，为0则在睡觉；参数sleeptime显示开始睡觉的时间。</p>
<p>当run = 1时，兔子路程计入；满足三个条件时开始睡觉：①时间为十的倍数；②兔子目前在跑步，也就是run = 1；③兔子路程大于乌龟路程。满足条件开始睡觉，记录睡觉时间，到时间后run改为1自动苏醒。</p>
<p>代码如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> turtle = <span class="number">0</span>, rabbit = <span class="number">0</span>, t = <span class="number">0</span>, run = <span class="number">0</span>, sleeptime = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//run代表兔子是否睡觉，兔子一开始不是睡觉的.sleeptime的意思是，一开始睡觉的时候</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        turtle += <span class="number">3</span>;        <span class="comment">//乌龟一定是在跑步的</span></span><br><span class="line">        <span class="keyword">if</span> (run == <span class="number">0</span>)       <span class="comment">//兔子不睡觉是0</span></span><br><span class="line">            rabbit += <span class="number">9</span>;</span><br><span class="line">        <span class="keyword">if</span> ((i % <span class="number">10</span> == <span class="number">0</span>) &amp;&amp; (rabbit &gt; turtle) &amp;&amp; (run == <span class="number">0</span>))   </span><br><span class="line">            <span class="comment">//如果兔子还在跑的状态，而且已经比乌龟快，正好在检查点上</span></span><br><span class="line">        &#123;</span><br><span class="line">            run = <span class="number">1</span>;    <span class="comment">//改变兔子的状态</span></span><br><span class="line">            sleeptime = i;  <span class="comment">//睡觉的时间，就等于i，目前的时间</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i == sleeptime + <span class="number">30</span>)    <span class="comment">//如果已经过了30分钟的话</span></span><br><span class="line">        &#123;</span><br><span class="line">            run = <span class="number">0</span>;                <span class="comment">//设置兔子醒过来继续跑</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (rabbit &gt; turtle)   <span class="built_in">printf</span>(<span class="string">&quot;^_^ %d&quot;</span>, rabbit);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (rabbit == turtle) <span class="built_in">printf</span>(<span class="string">&quot;-_- %d&quot;</span>, rabbit);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;@_@ %d&quot;</span>, turtle);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PTA</category>
        <category>C</category>
      </categories>
      <tags>
        <tag>PTA</tag>
        <tag>C</tag>
        <tag>中M24春C&amp;Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言-翁恺-PTA-121-160课后练习题-04</title>
    <url>/2024/04/09/C%E8%AF%AD%E8%A8%80-%E7%BF%81%E6%81%BA-PTA-121-160%E8%AF%BE%E5%90%8E%E7%BB%83%E4%B9%A0%E9%A2%98-04/</url>
    <content><![CDATA[<h1 id="7-137-Average"><a href="#7-137-Average" class="headerlink" title="7-137 Average"></a><strong>7-137 Average</strong></h1><p>You are going to read a serial of none-negative integers, which ends with a negative number that does not count as one of the data. Your program calculates the average of all the none-negative integers, and prints the average which rounds to two decimal places.</p>
<p>When there’s no valid data at all, your program prints out:</p>
<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"><span class="built_in">None</span></span><br></pre></td></tr></table></figure>
<h2 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h2><p>A serial of none-negative integers, ending with a negative number, which is not one of the valide data.</p>
<h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>A number rounds to two decimal places, which is the average of the serial.</p>
<p>The printf for this case is:</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line">printf(<span class="string">&quot;%.2f\n&quot;</span>, (<span class="built_in">double</span>)<span class="keyword">sum</span>/<span class="keyword">count</span>);</span><br></pre></td></tr></table></figure>
<h2 id="输入例子"><a href="#输入例子" class="headerlink" title="输入例子"></a>输入例子</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 2 3 4 5 6 -1</span><br></pre></td></tr></table></figure>
<h2 id="输出例子"><a href="#输出例子" class="headerlink" title="输出例子"></a>输出例子</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3.50</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<h2 id="错误原因"><a href="#错误原因" class="headerlink" title="错误原因"></a>错误原因</h2><p>这题失败的原因，就是纯纯的语言问题了，没别的好说的</p>
<p>You are going to read a serial of none-negative integers</p>
<p>猜测翻译 ：<strong>我们要读一串非负数的整数</strong></p>
<p>机器翻译：<strong>您将读取一个非负整数序列</strong></p>
<p>which ends with a negative number that does not count as one of the data. </p>
<p>猜测翻译：<strong>当读取负数的时候，这个将不再记录在数据之中</strong></p>
<p>机器翻译：</p>
<p><strong>以负数结尾，不作为数据之一。</strong></p>
<p>Your program calculates the average of all the none-negative integers</p>
<p>猜测翻译：<strong>你的程序要计算</strong>，<strong>这一串非数据的平均值</strong></p>
<p>机器翻译：<strong>你的程序计算所有非负整数的平均数</strong></p>
<p> and prints the average which rounds to two decimal places.</p>
<p>猜测翻译：这个我不太会</p>
<p>机器翻译： <strong>并打印出四舍五入到小数点后两位的平均值</strong>。</p>
<p>理解了题目之后，就非常非常非常好些了</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>, count = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">while</span> (n &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">		sum += n;</span><br><span class="line">		count++;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (sum == <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;None&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>, (<span class="type">double</span>)sum / count);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-139-手机话费"><a href="#7-139-手机话费" class="headerlink" title="7-139 手机话费"></a><strong>7-139 手机话费</strong></h1><p>小明的手机每天消费1元，每消费K元就可以获赠1元，一开始小明有M元，问最多可以用多少天？</p>
<h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>每个测试实例包括2个整数M，K（2&lt;=k&lt;=M&lt;=1000)。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>对于每个测试实例输出一个整数，表示M元可以用的天数。</p>
<h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 2</span><br></pre></td></tr></table></figure>
<h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<h2 id="错误原因-1"><a href="#错误原因-1" class="headerlink" title="错误原因"></a>错误原因</h2><p>这个思路有问题</p>
<p>抄一下别人的思路</p>
<p>正确代码如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> m,k,i=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;m,&amp;k);</span><br><span class="line">    <span class="keyword">while</span>(m&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        m--;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i%k==<span class="number">0</span>)m++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,i);</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-144-藏头诗"><a href="#7-144-藏头诗" class="headerlink" title="7-144 藏头诗"></a><strong>7-144 藏头诗</strong></h1><p>本题要求编写一个解密藏头诗的程序。</p>
<p><em>注：在 2022 年 7 月 14 日 16 点 50 分以后，该题数据修改为 UTF-8 编码。</em></p>
<h3 id="输入格式：-1"><a href="#输入格式：-1" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入为一首中文藏头诗，一共四句，每句一行。注意：一个汉字占三个字节。</p>
<h3 id="输出格式：-1"><a href="#输出格式：-1" class="headerlink" title="输出格式："></a>输出格式：</h3><p>取出每句的第一个汉字并连接在一起形成一个字符串并输出。同时在末尾输入一个换行符。</p>
<h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一叶轻舟向东流</span><br><span class="line">帆稍轻握杨柳手</span><br><span class="line">风纤碧波微起舞</span><br><span class="line">顺水任从雅客流</span><br></pre></td></tr></table></figure>
<h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一帆风顺</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<h2 id="错误原因-2"><a href="#错误原因-2" class="headerlink" title="错误原因"></a>错误原因</h2><p>不理解中文字符的占比，不理解如何输出输出</p>
<h2 id="正确代码"><a href="#正确代码" class="headerlink" title="正确代码"></a>正确代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> c[<span class="number">100</span>][<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, c);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c%c%c&quot;</span>, c[<span class="number">0</span>][<span class="number">0</span>], c[<span class="number">0</span>][<span class="number">1</span>], c[<span class="number">0</span>][<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C</category>
        <category>PTA</category>
      </categories>
      <tags>
        <tag>PTA</tag>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言-翁恺-PTA-161-207课后练习题-05</title>
    <url>/2024/04/10/C%E8%AF%AD%E8%A8%80-%E7%BF%81%E6%81%BA-PTA-161-207%E8%AF%BE%E5%90%8E%E7%BB%83%E4%B9%A0%E9%A2%98-05/</url>
    <content><![CDATA[<h1 id="7-161-帅到没朋友"><a href="#7-161-帅到没朋友" class="headerlink" title="7-161 帅到没朋友"></a><strong>7-161 帅到没朋友</strong></h1><p>当芸芸众生忙着在朋友圈中发照片的时候，总有一些人因为太帅而没有朋友。本题就要求你找出那些帅到没有朋友的人。</p>
<h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出一个正整数<code>N</code>（≤100），是已知朋友圈的个数；随后<code>N</code>行，每行首先给出一个正整数<code>K</code>（≤1000），为朋友圈中的人数，然后列出一个朋友圈内的所有人——为方便起见，每人对应一个ID号，为5位数字（从00000到99999），ID间以空格分隔；之后给出一个正整数<code>M</code>（≤10000），为待查询的人数；随后一行中列出<code>M</code>个待查询的ID，以空格分隔。</p>
<p>注意：没有朋友的人可以是根本没安装“朋友圈”，也可以是只有自己一个人在朋友圈的人。虽然有个别自恋狂会自己把自己反复加进朋友圈，但题目保证所有<code>K</code>超过1的朋友圈里都至少有2个不同的人。</p>
<h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>按输入的顺序输出那些帅到没朋友的人。ID间用1个空格分隔，行的首尾不得有多余空格。如果没有人太帅，则输出<code>No one is handsome</code>。</p>
<p>注意：同一个人可以被查询多次，但只输出一次。</p>
<h3 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">3 11111 22222 55555</span><br><span class="line">2 33333 44444</span><br><span class="line">4 55555 66666 99999 77777</span><br><span class="line">8</span><br><span class="line">55555 44444 10000 88888 22222 11111 23333 88888</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10000 88888 23333</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">11111</span> <span class="number">22222</span> <span class="number">55555</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">33333</span> <span class="number">44444</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">55555</span> <span class="number">66666</span> <span class="number">99999</span> <span class="number">77777</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">55555 </span><span class="number">44444</span> <span class="number">22222</span> <span class="number">11111</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">No</span> one <span class="keyword">is</span> handsome</span><br></pre></td></tr></table></figure>
<h2 id="错误原因："><a href="#错误原因：" class="headerlink" title="错误原因："></a>错误原因：</h2><p>我不清楚，我这个还真不晓得，我哪里错了</p>
<p>看了柳神的代码，才清楚，我错的多离谱，我这个都不晓得，</p>
<p><strong>虽然有个别自恋狂会自己把自己反复加进朋友圈，但题目保证所有<code>K</code>超过1的朋友圈里都至少有2个不同的人</strong></p>
<p>这句话的意思，就是K=1的时候，这个数字是没有用的，这个要注意</p>
<h2 id="错误代码在这里"><a href="#错误代码在这里" class="headerlink" title="错误代码在这里"></a>错误代码在这里</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> people[<span class="number">1000000</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000000</span>; ++i)   people[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= k; ++j) &#123;</span><br><span class="line">            <span class="type">int</span>  temp = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;temp);</span><br><span class="line">            people[temp] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> m = <span class="number">0</span>,flag=<span class="number">0</span>,judge=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="type">int</span> temp = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;temp);</span><br><span class="line">        <span class="keyword">if</span> (!people[temp]) &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag)    <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> flag = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%05d&quot;</span>, temp);</span><br><span class="line">            people[temp] = <span class="number">1</span>;</span><br><span class="line">            judge = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!judge)  <span class="built_in">printf</span>(<span class="string">&quot;No one is handsome&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="正确的代码："><a href="#正确的代码：" class="headerlink" title="正确的代码："></a>正确的代码：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> people[<span class="number">1000000</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000000</span>; ++i)   people[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= k; ++j) &#123;</span><br><span class="line">            <span class="type">int</span>  temp = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;temp);</span><br><span class="line">            people[temp] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> m = <span class="number">0</span>,flag=<span class="number">0</span>,judge=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="type">int</span> temp = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;temp);</span><br><span class="line">        <span class="keyword">if</span> (!people[temp]) &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag)    <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> flag = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%05d&quot;</span>, temp);</span><br><span class="line">            people[temp] = <span class="number">1</span>;</span><br><span class="line">            judge = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!judge)  <span class="built_in">printf</span>(<span class="string">&quot;No one is handsome&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-163-谷歌的招聘"><a href="#7-163-谷歌的招聘" class="headerlink" title="7-163 谷歌的招聘"></a><strong>7-163 谷歌的招聘</strong></h1><p>2004 年 7 月，谷歌在硅谷的 101 号公路边竖立了一块巨大的广告牌（如下图）用于招聘。内容超级简单，就是一个以 .com 结尾的网址，而前面的网址是一个 10 位素数，这个素数是自然常数 e 中最早出现的 10 位连续数字。能找出这个素数的人，就可以通过访问谷歌的这个网站进入招聘流程的下一步</p>
<p>自然常数 e 是一个著名的超越数，前面若干位写出来是这样的：e = 2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642<strong>7427466391</strong>932003059921… 其中粗体标出的 10 位数就是答案。</p>
<p>本题要求你编程解决一个更通用的问题：从任一给定的长度为 L 的数字中，找出最早出现的 K 位连续数字所组成的素数。</p>
<h3 id="输入格式：-1"><a href="#输入格式：-1" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第一行给出 2 个正整数，分别是 L（不超过 1000 的正整数，为数字长度）和 K（小于 10 的正整数）。接下来一行给出一个长度为 L 的正整数 N。</p>
<h3 id="输出格式：-1"><a href="#输出格式：-1" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出 N 中最早出现的 K 位连续数字所组成的素数。如果这样的素数不存在，则输出 <code>404</code>。注意，原始数字中的前导零也计算在位数之内。例如在 200236 中找 4 位素数，0023 算是解；但第一位 2 不能被当成 0002 输出，因为在原始数字中不存在这个 2 的前导零。</p>
<h3 id="输入样例-1："><a href="#输入样例-1：" class="headerlink" title="输入样例 1："></a>输入样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">20 5</span><br><span class="line">23654987725541023819</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-1："><a href="#输出样例-1：" class="headerlink" title="输出样例 1："></a>输出样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">49877</span><br></pre></td></tr></table></figure>
<h3 id="输入样例-2："><a href="#输入样例-2：" class="headerlink" title="输入样例 2："></a>输入样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10 3</span><br><span class="line">2468001680</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-2："><a href="#输出样例-2：" class="headerlink" title="输出样例 2："></a>输出样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">404</span><br></pre></td></tr></table></figure>
<p><strong>鸣谢用户 大冰 补充数据！</strong></p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>200 ms</p>
<p>内存限制</p>
<h2 id="错误原因"><a href="#错误原因" class="headerlink" title="错误原因"></a>错误原因</h2><p>我是傻逼，我</p>
<p>scanf(“%d %d”)    空格都能忘记掉，我确实是有点低能了</p>
<h3 id="正确代码"><a href="#正确代码" class="headerlink" title="正确代码"></a>正确代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">//1就代表是素数，0代表不是</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">prime</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;<span class="number">2</span> )    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i*i&lt;= n ; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n % i == <span class="number">0</span>)  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> temp = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> l = <span class="number">0</span>, k = <span class="number">0</span>, flag = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">1001</span>];</span><br><span class="line">    <span class="type">char</span> tc[<span class="number">1001</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d &quot;</span>, &amp;l, &amp;k);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i + k &lt;= l; ++i) &#123;</span><br><span class="line">        <span class="built_in">strncpy</span>(tc, str + i, k);</span><br><span class="line">        tc[k]=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (prime(atoi(tc))) &#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, tc);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;404&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-175-口罩发放"><a href="#7-175-口罩发放" class="headerlink" title="7-175 口罩发放"></a><strong>7-175 口罩发放</strong></h1><p>为了抗击来势汹汹的 COVID19 新型冠状病毒，全国各地均启动了各项措施控制疫情发展，其中一个重要的环节是口罩的发放。</p>
<p>某市出于给市民发放口罩的需要，推出了一款小程序让市民填写信息，方便工作的开展。小程序收集了各种信息，包括市民的姓名、身份证、身体情况、提交时间等，但因为数据量太大，需要根据一定规则进行筛选和处理，请你编写程序，按照给定规则输出口罩的寄送名单。</p>
<h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入第一行是两个正整数 <em>D</em> 和 <em>P</em>（1≤<em>D</em>,<em>P</em>≤30），表示有 <em>D</em> 天的数据，市民两次获得口罩的时间至少需要间隔 <em>P</em> 天。</p>
<p>接下来 <em>D</em> 块数据，每块给出一天的申请信息。第 <em>i</em> 块数据（<em>i</em>=1,⋯,<em>D</em>）的第一行是两个整数 <em>T**i</em> 和 <em>S**i</em>（1≤<em>T**i</em>,<em>S**i</em>≤1000），表示在第 <em>i</em> 天有 <em>T**i</em> 条申请，总共有 <em>S**i</em> 个口罩发放名额。随后 <em>T**i</em> 行，每行给出一条申请信息，格式如下：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">姓名 身份证号 身体情况 提交时间</span><br></pre></td></tr></table></figure>
<p>给定数据约束如下：</p>
<ul>
<li><code>姓名</code> 是一个长度不超过 10 的不包含空格的非空字符串；</li>
<li><code>身份证号</code> 是一个长度不超过 20 的非空字符串；</li>
<li><code>身体情况</code> 是 0 或者 1，0 表示自觉良好，1 表示有相关症状；</li>
<li><code>提交时间</code> 是 hh:mm，为24小时时间（由 <code>00:00</code> 到 <code>23:59</code>。例如 09:08。）。注意，给定的记录的提交时间不一定有序；</li>
<li><code>身份证号</code> 各不相同，同一个身份证号被认为是同一个人，数据保证同一个身份证号姓名是相同的。</li>
</ul>
<p>能发放口罩的记录要求如下：</p>
<ul>
<li><code>身份证号</code> 必须是 18 位的<strong>数字</strong>（可以包含前导0）；</li>
<li>同一个身份证号若在第 <em>i</em> 天申请成功，则接下来的 <em>P</em> 天不能再次申请。也就是说，若第 <em>i</em> 天申请成功，则等到第 <em>i</em>+<em>P</em>+1 天才能再次申请；</li>
<li>在上面两条都符合的情况下，按照提交时间的先后顺序发放，直至全部记录处理完毕或 <em>S**i</em> 个名额用完。如果提交时间相同，则按照在列表中出现的先后顺序决定。</li>
</ul>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>对于每一天的申请记录，每行输出一位得到口罩的人的姓名及身份证号，用一个空格隔开。顺序按照发放顺序确定。</p>
<p>在输出完发放记录后，你还需要输出有合法记录的、身体状况为 1 的申请人的姓名及身份证号，用空格隔开。顺序按照申请记录中出现的顺序确定，同一个人只需要输出一次。</p>
<h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 2</span><br><span class="line">5 3</span><br><span class="line">A 123456789012345670 1 13:58</span><br><span class="line">B 123456789012345671 0 13:58</span><br><span class="line">C 12345678901234567 0 13:22</span><br><span class="line">D 123456789012345672 0 03:24</span><br><span class="line">C 123456789012345673 0 13:59</span><br><span class="line">4 3</span><br><span class="line">A 123456789012345670 1 13:58</span><br><span class="line">E 123456789012345674 0 13:59</span><br><span class="line">C 123456789012345673 0 13:59</span><br><span class="line">F F 0 14:00</span><br><span class="line">1 3</span><br><span class="line">E 123456789012345674 1 13:58</span><br><span class="line">1 1</span><br><span class="line">A 123456789012345670 0 14:11</span><br></pre></td></tr></table></figure>
<h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D 123456789012345672</span><br><span class="line">A 123456789012345670</span><br><span class="line">B 123456789012345671</span><br><span class="line">E 123456789012345674</span><br><span class="line">C 123456789012345673</span><br><span class="line">A 123456789012345670</span><br><span class="line">A 123456789012345670</span><br><span class="line">E 123456789012345674</span><br></pre></td></tr></table></figure>
<h3 id="样例解释："><a href="#样例解释：" class="headerlink" title="样例解释："></a>样例解释：</h3><p>输出中，第一行到第三行是第一天的部分；第四、五行是第二天的部分；第三天没有符合要求的市民；第六行是第四天的部分。最后两行按照出现顺序输出了可能存在身体不适的人员。</p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<p>这题是我花钱买的，所以我非常的重视：故记录：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_PEOPLE 1010     <span class="comment">// 每天最多申请口罩的人数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_MAYBE 30010     <span class="comment">// 总共可能有症状的人的最大数量</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_NAME 11         <span class="comment">// 姓名的最大长度</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_ID 21           <span class="comment">// 身份证号的最大长度</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HASH_SIZE 10007     <span class="comment">// 哈希表的大小</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义存储每个申请人的信息的结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> name[MAX_NAME];  <span class="comment">// 申请人的姓名</span></span><br><span class="line">    <span class="type">char</span> id[MAX_ID];      <span class="comment">// 申请人的身份证号</span></span><br><span class="line">    <span class="type">int</span> st;               <span class="comment">// 身体状况 (0: 良好, 1: 有症状)</span></span><br><span class="line">    <span class="type">int</span> h;                <span class="comment">// 提交时间的小时部分</span></span><br><span class="line">    <span class="type">int</span> m;                <span class="comment">// 提交时间的分钟部分</span></span><br><span class="line">    <span class="type">int</span> no;               <span class="comment">// 申请人在当天的序号</span></span><br><span class="line">&#125; People;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义存储可能有症状的人的信息的结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> name[MAX_NAME];  <span class="comment">// 可能有症状的人的姓名</span></span><br><span class="line">    <span class="type">char</span> id[MAX_ID];      <span class="comment">// 可能有症状的人的身份证号</span></span><br><span class="line">&#125; Maybe;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义存储申请记录的结构体，用于哈希表</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Record</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> id[MAX_ID];      <span class="comment">// 申请人的身份证号</span></span><br><span class="line">    <span class="type">int</span> day;              <span class="comment">// 最后一次领取口罩的天数</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Record</span> *<span class="title">next</span>;</span>  <span class="comment">// 指向下一个记录的指针</span></span><br><span class="line">&#125; Record;</span><br><span class="line"></span><br><span class="line">People people[MAX_PEOPLE];      <span class="comment">// 存储每天申请人的信息</span></span><br><span class="line">Maybe maybe[MAX_MAYBE];         <span class="comment">// 存储所有可能有症状的人的信息</span></span><br><span class="line">Record *hash_table[HASH_SIZE];  <span class="comment">// 哈希表，用于快速查找申请记录</span></span><br><span class="line"><span class="type">int</span> idx = <span class="number">0</span>;                    <span class="comment">// 记录可能有症状的人的数量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 比较函数，用于qsort对申请人按时间和序号进行排序</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">compare_people</span><span class="params">(<span class="type">const</span> <span class="type">void</span> *a, <span class="type">const</span> <span class="type">void</span> *b)</span> &#123;</span><br><span class="line">    People *pa = (People *)a;</span><br><span class="line">    People *pb = (People *)b;</span><br><span class="line">    <span class="comment">// 先按小时排序</span></span><br><span class="line">    <span class="keyword">if</span> (pa-&gt;h != pb-&gt;h) <span class="keyword">return</span> pa-&gt;h - pb-&gt;h;</span><br><span class="line">    <span class="comment">// 小时相同则按分钟排序</span></span><br><span class="line">    <span class="keyword">if</span> (pa-&gt;m != pb-&gt;m) <span class="keyword">return</span> pa-&gt;m - pb-&gt;m;</span><br><span class="line">    <span class="comment">// 时间相同则按当天的序号排序</span></span><br><span class="line">    <span class="keyword">return</span> pa-&gt;no - pb-&gt;no;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查身份证号是否有效，必须为18位且全为数字</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">check</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *id)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strlen</span>(id) != <span class="number">18</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">18</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (id[i] &lt; <span class="string">&#x27;0&#x27;</span> || id[i] &gt; <span class="string">&#x27;9&#x27;</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将时间字符串转换为小时和分钟</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">convert</span><span class="params">(<span class="type">int</span> *h, <span class="type">int</span> *m, <span class="type">const</span> <span class="type">char</span> *str)</span> &#123;</span><br><span class="line">    <span class="built_in">sscanf</span>(str, <span class="string">&quot;%d:%d&quot;</span>, h, m);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 哈希函数，将字符串转换为哈希值</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">hash</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *str)</span> &#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> hash = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (*str) &#123;</span><br><span class="line">        hash = (hash * <span class="number">31</span>) + *str++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> hash % HASH_SIZE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在哈希表中查找记录</span></span><br><span class="line">Record* <span class="title function_">find_record</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *id)</span> &#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> index = hash(id);</span><br><span class="line">    Record *entry = hash_table[index];</span><br><span class="line">    <span class="keyword">while</span> (entry != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(entry-&gt;id, id) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> entry;</span><br><span class="line">        &#125;</span><br><span class="line">        entry = entry-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向哈希表中插入记录</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">insert_record</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *id, <span class="type">int</span> day)</span> &#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> index = hash(id);</span><br><span class="line">    Record *entry = (Record *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Record));</span><br><span class="line">    <span class="built_in">strcpy</span>(entry-&gt;id, id);</span><br><span class="line">    entry-&gt;day = day;</span><br><span class="line">    entry-&gt;next = hash_table[index];</span><br><span class="line">    hash_table[index] = entry;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 清空哈希表，释放内存</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">clear_records</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; HASH_SIZE; i++) &#123;</span><br><span class="line">        Record *entry = hash_table[i];</span><br><span class="line">        <span class="keyword">while</span> (entry != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            Record *temp = entry;</span><br><span class="line">            entry = entry-&gt;next;</span><br><span class="line">            <span class="built_in">free</span>(temp);</span><br><span class="line">        &#125;</span><br><span class="line">        hash_table[i] = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> d = <span class="number">0</span>, p = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 读取天数d和最少间隔天数p</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;d, &amp;p);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 处理每一天的数据</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= d; i++) &#123;</span><br><span class="line">        <span class="type">int</span> n = <span class="number">0</span>, cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 读取当天申请人数n和可发放口罩的数量cnt</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;cnt);</span><br><span class="line">        <span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取每个申请人的信息</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="type">char</span> name[MAX_NAME], id[MAX_ID], str[<span class="number">10</span>];</span><br><span class="line">            <span class="type">int</span> h = <span class="number">0</span>, m = <span class="number">0</span>, st = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">// 读取申请人的姓名、身份证号、身体状况和提交时间</span></span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s %s %d %s&quot;</span>, name, id, &amp;st, str);</span><br><span class="line">            <span class="comment">// 将时间字符串转换为小时和分钟</span></span><br><span class="line">            convert(&amp;h, &amp;m, str);</span><br><span class="line">            <span class="comment">// 检查身份证号是否有效</span></span><br><span class="line">            <span class="keyword">if</span> (check(id)) &#123;</span><br><span class="line">                <span class="comment">// 将有效申请人的信息存储到people数组中</span></span><br><span class="line">                <span class="built_in">strcpy</span>(people[k].name, name);</span><br><span class="line">                <span class="built_in">strcpy</span>(people[k].id, id);</span><br><span class="line">                people[k].st = st;</span><br><span class="line">                people[k].h = h;</span><br><span class="line">                people[k].m = m;</span><br><span class="line">                people[k].no = j;</span><br><span class="line">                k++;</span><br><span class="line">                <span class="comment">// 如果有症状，将信息存储到maybe数组中</span></span><br><span class="line">                <span class="keyword">if</span> (st) &#123;</span><br><span class="line">                    <span class="built_in">strcpy</span>(maybe[idx].name, name);</span><br><span class="line">                    <span class="built_in">strcpy</span>(maybe[idx].id, id);</span><br><span class="line">                    idx++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 按提交时间和顺序对申请人进行排序</span></span><br><span class="line">        qsort(people, k, <span class="keyword">sizeof</span>(People), compare_people);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发放口罩</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; k &amp;&amp; cnt &gt; <span class="number">0</span>; j++) &#123;</span><br><span class="line">            Record *record = find_record(people[j].id);</span><br><span class="line">            <span class="comment">// 检查是否符合发放条件</span></span><br><span class="line">            <span class="keyword">if</span> (record == <span class="literal">NULL</span> || i &gt;= record-&gt;day + p + <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="comment">// 打印领取口罩的人的姓名和身份证号</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%s %s\n&quot;</span>, people[j].name, people[j].id);</span><br><span class="line">                <span class="keyword">if</span> (record == <span class="literal">NULL</span>) &#123;</span><br><span class="line">                    insert_record(people[j].id, i);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    record-&gt;day = i;</span><br><span class="line">                &#125;</span><br><span class="line">                cnt--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出可能有症状的人的信息，去重</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; idx; j++) &#123;</span><br><span class="line">        Record *record = find_record(maybe[j].id);</span><br><span class="line">        <span class="keyword">if</span> (record == <span class="literal">NULL</span> || record-&gt;day != d + <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">// 打印可能有症状的人的姓名和身份证号</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s %s\n&quot;</span>, maybe[j].name, maybe[j].id);</span><br><span class="line">            <span class="keyword">if</span> (record == <span class="literal">NULL</span>) &#123;</span><br><span class="line">                insert_record(maybe[j].id, d + <span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                record-&gt;day = d + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 清空记录，释放内存</span></span><br><span class="line">    clear_records();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>这是我花了钱的，日了狗的</p>
<p><strong>7-186 前世档案</strong></p>
<p>分数 20</p>
<p>作者 陈越</p>
<p>单位 浙江大学</p>
<p><img src="http://image.camilleferros.top/前世档案.jpg" alt=""></p>
<p>网络世界中时常会遇到这类滑稽的算命小程序，实现原理很简单，随便设计几个问题，根据玩家对每个问题的回答选择一条判断树中的路径（如下图所示），结论就是路径终点对应的那个结点。</p>
<p><img src="http://image.camilleferros.top/20240608214753.png" alt=""></p>
<p>现在我们把结论从左到右顺序编号，编号从 1 开始。这里假设回答都是简单的“是”或“否”，又假设回答“是”对应向左的路径，回答“否”对应向右的路径。给定玩家的一系列回答，请你返回其得到的结论的编号。</p>
<h3 id="输入格式：-2"><a href="#输入格式：-2" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出两个正整数：<em>N</em>（≤30）为玩家做一次测试要回答的问题数量；<em>M</em>（≤100）为玩家人数。</p>
<p>随后 <em>M</em> 行，每行顺次给出玩家的 <em>N</em> 个回答。这里用 <code>y</code> 代表“是”，用 <code>n</code> 代表“否”。</p>
<h3 id="输出格式：-2"><a href="#输出格式：-2" class="headerlink" title="输出格式："></a>输出格式：</h3><p>对每个玩家，在一行中输出其对应的结论的编号。</p>
<h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 4</span><br><span class="line">yny</span><br><span class="line">nyy</span><br><span class="line">nyn</span><br><span class="line">yyn</span><br></pre></td></tr></table></figure>
<h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">2</span><br></pre></td></tr></table></figure>
<p>大佬的思路<br><a href="https://blog.csdn.net/dream_aleaf/article/details/127573572">地址</a></p>
<p>我要使用小黄鸭方法来分析这道题目。首先按照题目要求输入玩家做一次测试要回答的问题数量和玩家人数。然后针对每一个玩家输入其N个回答，显然的是，这些回答构成了一颗二叉树，题目要求输出其对应的结论的编号，也就是二叉树的叶子结点的编号（从左往右依次是1、2、3……）。以某玩家为例，假设他的回答是“yny”，那么可以理解为对应二进制代码010，转换为十进制数是2。由于叶子结点是从1开始编号，所以十进制数需要加1，最终结果是3。</p>
<h2 id="别人的正确的代码如下："><a href="#别人的正确的代码如下：" class="headerlink" title="别人的正确的代码如下："></a>别人的正确的代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// input</span></span><br><span class="line">    <span class="type">int</span> n, m; <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;m; i++)&#123;</span><br><span class="line">        <span class="comment">// 读走换行符</span></span><br><span class="line">        getchar();</span><br><span class="line">        <span class="comment">// input + process</span></span><br><span class="line">        <span class="comment">// 叶子结点从1开始编号</span></span><br><span class="line">        <span class="type">int</span> sum = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>; j&lt;n; j++)&#123;</span><br><span class="line">            <span class="type">char</span> ch = getchar();</span><br><span class="line">            <span class="keyword">if</span> (ch == <span class="string">&#x27;n&#x27;</span>)</span><br><span class="line">              sum += <span class="built_in">pow</span>(<span class="number">2</span>, n<span class="number">-1</span>-j); <span class="comment">// 计数</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// output</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C</category>
        <category>PTA</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>PTA</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言-翁恺-PTA-41-80课后练习题-02</title>
    <url>/2024/04/02/C%E8%AF%AD%E8%A8%80-%E7%BF%81%E6%81%BA-PTA-41-80%E8%AF%BE%E5%90%8E%E7%BB%83%E4%B9%A0%E9%A2%98-02/</url>
    <content><![CDATA[<p>  第二个40题，还是</p>
<h1 id="7-42-整除光棍"><a href="#7-42-整除光棍" class="headerlink" title="7-42 整除光棍"></a><strong>7-42 整除光棍</strong></h1><p>这里所谓的“光棍”，并不是指单身汪啦~ 说的是全部由1组成的数字，比如1、11、111、1111等。传说任何一个光棍都能被一个不以5结尾的奇数整除。比如，111111就可以被13整除。 现在，你的程序要读入一个整数<code>x</code>，这个整数一定是奇数并且不以5结尾。然后，经过计算，输出两个数字：第一个数字<code>s</code>，表示<code>x</code>乘以<code>s</code>是一个光棍，第二个数字<code>n</code>是这个光棍的位数。这样的解当然不是唯一的,题目要求你输出最小的解。</p>
<p>提示：一个显然的办法是逐渐增加光棍的位数，直到可以整除<code>x</code>为止。但难点在于，<code>s</code>可能是个非常大的数 —— 比如，程序输入31，那么就输出3584229390681和15，因为31乘以3584229390681的结果是111111111111111，一共15个1。</p>
<h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个不以5结尾的正奇数<code>x</code>（&lt;1000）。</p>
<h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出相应的最小的<code>s</code>和<code>n</code>，其间以1个空格分隔。</p>
<h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">31</span><br></pre></td></tr></table></figure>
<h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3584229390681 15</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<h2 id="错误原因"><a href="#错误原因" class="headerlink" title="错误原因"></a>错误原因</h2><p>7-42这题也是一点思路都没有，这种是我最讨厌的题，没有思路，就不太会写。</p>
<p>这题数学题，我确实是笨蛋，一点点思路都没有</p>
<p>好吧，但是实际做起来，比我想象中的简单，也只要通过遍历即可，</p>
<p>11，111，1111，这样加上去，代码如下：</p>
<h2 id="别人的代码"><a href="#别人的代码" class="headerlink" title="别人的代码"></a>别人的代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> x, y = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);    <span class="comment">//读取X</span></span><br><span class="line">    <span class="type">int</span> s = <span class="number">1</span>;         <span class="comment">//用来表示光棍数</span></span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;         <span class="comment">//记录位数</span></span><br><span class="line">    <span class="keyword">while</span> (s &lt; x) &#123;</span><br><span class="line">        s = s * <span class="number">10</span> + <span class="number">1</span>;  <span class="comment">// 先找出大于x的最小光棍数</span></span><br><span class="line">        n++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        y = s % x;  <span class="comment">// 储存余数</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, s / x);</span><br><span class="line">        s = y * <span class="number">10</span> + <span class="number">1</span>;  <span class="comment">// 更新光棍数</span></span><br><span class="line">        n++;</span><br><span class="line">    &#125; <span class="keyword">while</span> (y != <span class="number">0</span>);  <span class="comment">// 如果余数为0，说明找到了光棍数字，直接结束循环</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, n);  <span class="comment">// 输出位数</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-43-Shuffling-Machine"><a href="#7-43-Shuffling-Machine" class="headerlink" title="7-43 Shuffling Machine"></a><strong>7-43 Shuffling Machine</strong></h1><p>看这个B题目，和看天书一样，我真的服我自己，英语学的别太烂</p>
<p>下面是原来的题目，我会通过翻译软件翻译一下</p>
<p>Shuffling is a procedure used to randomize a deck of playing cards. Because standard shuffling techniques are seen as weak, and in order to avoid “inside jobs” where employees collaborate with gamblers by performing inadequate shuffles, many casinos employ <strong>automatic shuffling machines</strong>. Your task is to simulate a shuffling machine.</p>
<p>The machine shuffles a deck of 54 cards according to a given random order and repeats for a given number of times. It is assumed that the initial status of a card deck is in the following order:</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">S1</span></span>, S2, ..., S13, </span><br><span class="line"><span class="function"><span class="title">H1</span></span>, H2, ..., H13, </span><br><span class="line"><span class="function"><span class="title">C1</span></span>, C2, ..., C13, </span><br><span class="line"><span class="function"><span class="title">D1</span></span>, D2, ..., D13, </span><br><span class="line">J1, J2</span><br></pre></td></tr></table></figure>
<p>where “S” stands for “Spade”, “H” for “Heart”, “C” for “Club”, “D” for “Diamond”, and “J” for “Joker”. A given order is a permutation of distinct integers in [1, 54]. If the number at the <em>i</em>-th position is <em>j</em>, it means to move the card from position <em>i</em> to position <em>j</em>. For example, suppose we only have 5 cards: S3, H5, C1, D13 and J2. Given a shuffling order {4, 2, 5, 3, 1}, the result will be: J2, H5, D13, S3, C1. If we are to repeat the shuffling again, the result will be: C1, H5, S3, J2, D13.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line contains a positive integer <em>K</em> (≤20) which is the number of repeat times. Then the next line contains the given order. All the numbers in a line are separated by a space.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, print the shuffling results in one line. All the cards are separated by a space, and there must be no extra space at the end of the line.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">36 52 37 38 3 39 40 53 54 41 11 12 13 42 43 44 2 4 23 24 25 26 27 6 7 8 48 49 50 51 9 10 14 15 16 5 17 18 19 1 20 21 22 28 29 30 31 32 33 34 35 45 46 47</span><br></pre></td></tr></table></figure>
<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">S7 C11 C10 C12 S1 H7 H8 H9 D8 D9 S11 S12 S13 D10 D11 D12 S3 S4 S6 S10 H1 H2 C13 D2 D3 D4 H6 H3 D13 J1 J2 C1 C2 C3 C4 D1 S5 H5 H11 H12 C6 C7 C8 C9 S2 S8 S9 H10 D5 D6 D7 H4 H13 C5</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<h3 id="错误原因-1"><a href="#错误原因-1" class="headerlink" title="错误原因"></a>错误原因</h3><p>不会看题，题目看不懂</p>
<p>Shuffling Machine</p>
<p><strong>洗牌机</strong></p>
<p>Shuffling is a procedure used to randomize a deck of playing cards.洗牌是将一副扑克牌随机化的过程。</p>
<p>Because standard shuffling techniques are seen as weak,</p>
<p>因为标准的洗牌技术被认为很薄弱、</p>
<p>and in order to avoid “inside jobs” where employees collaborate with gamblers by performing inadequate shuffles</p>
<p>以及为了避免员工通过不适当的洗牌与赌徒合作的 “内部工作”</p>
<p>many casinos employ automatic shuffling machines. Your task is to simulate a shuffling machine.</p>
<p>许多赌场都使用自动洗牌机。您的任务就是模拟洗牌机。</p>
<p>The machine shuffles a deck of 54 cards according to a given random order and repeats for a given number of times. It is assumed that the initial status of a card deck is in the following order:</p>
<p>该机器按照给定的随机顺序洗一副 54 张牌，并重复给定的次数。假设一副牌的初始状态按以下顺序排列：</p>
<p>where “S” stands for “Spade”, “H” for “Heart”, “C” for “Club”, “D” for “Diamond”, and “J” for “Joker”. A given order is a permutation of distinct integers in [1, 54]. If the number at the <em>i</em>-th position is <em>j</em>, it means to move the card from position <em>i</em> to position <em>j</em>. For example, suppose we only have 5 cards: S3, H5, C1, D13 and J2. Given a shuffling order {4, 2, 5, 3, 1}, the result will be: J2, H5, D13, S3, C1. If we are to repeat the shuffling again, the result will be: C1, H5, S3, J2, D13.</p>
<p>其中 “S “代表 “黑桃”，”H “代表 “红心”，”C “代表 “梅花”，”D “代表 “方块”，”J “代表 “小丑”。给定的顺序是[1, 54]中不同整数的排列。例如，假设我们只有 5 张牌： S3、H5、C1、D13 和 J2。给定一个洗牌顺序{4，2，5，3，1}，结果将是 J2、H5、D13、S3、C1。如果我们再重复一次洗牌，结果将是 C1、H5、S3、J2、D13。</p>
<p>这里很恶心的这个B翻译软件，有一句话，没有翻译出来</p>
<p>If the number at the i-th position is j, it means to move the card from position i to position j. </p>
<p>如果第 i 个位置的数字是 j，则表示将牌从第 i 个位置移动到第 j 个位置。这一句话，可以不翻译的是吧，B翻译软件</p>
<p>做反而是好做的</p>
<h2 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下:"></a>代码如下:</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> card[<span class="number">55</span>] = &#123; <span class="number">0</span> &#125;, pcard[<span class="number">55</span>] = &#123; <span class="number">0</span> &#125;, random[<span class="number">55</span>] = &#123; <span class="number">0</span> &#125;,k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">55</span>; ++i)   card[i] = i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">54</span>; ++i)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;random[i]);</span><br><span class="line">    <span class="keyword">while</span> (k) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">54</span>; ++i) &#123;</span><br><span class="line">            pcard[random[i]] = card[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">54</span>; ++i)</span><br><span class="line">            card[i] = pcard[i];</span><br><span class="line">        k--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">54</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (card[i] &gt;= <span class="number">1</span> &amp;&amp; card[i] &lt;= <span class="number">13</span>) <span class="built_in">printf</span>(<span class="string">&quot;S%d&quot;</span>, card[i]);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (card[i] &gt; <span class="number">13</span> &amp;&amp; card[i] &lt;= <span class="number">26</span>)   <span class="built_in">printf</span>(<span class="string">&quot;H%d&quot;</span>, card[i] - <span class="number">13</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (card[i] &gt; <span class="number">26</span> &amp;&amp; card[i] &lt;= <span class="number">39</span>)  <span class="built_in">printf</span>(<span class="string">&quot;C%d&quot;</span>, card[i] - <span class="number">26</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (card[i] &gt; <span class="number">39</span> &amp;&amp; card[i] &lt;= <span class="number">52</span>)  <span class="built_in">printf</span>(<span class="string">&quot;D%d&quot;</span>, card[i] - <span class="number">39</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;J%d&quot;</span>, card[i] - <span class="number">52</span>);</span><br><span class="line">        <span class="keyword">if</span> (i!=<span class="number">54</span>)    <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-49-Have-Fun-with-Numbers"><a href="#7-49-Have-Fun-with-Numbers" class="headerlink" title="7-49 Have Fun with Numbers"></a><strong>7-49 Have Fun with Numbers</strong></h1><p>Notice that the number 123456789 is a 9-digit number consisting exactly the numbers from 1 to 9, with no duplication. Double it we will obtain 246913578, which happens to be another 9-digit number consisting exactly the numbers from 1 to 9, only in a different permutation. Check to see the result if we double it again!</p>
<p>Now you are suppose to check if there are more numbers with this property. That is, double a given number with <em>k</em> digits, you are to tell if the resulting number consists of only a permutation of the digits in the original number.</p>
<h3 id="Input-Specification-1"><a href="#Input-Specification-1" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input contains one test case. Each case contains one positive integer with no more than 20 digits.</p>
<h3 id="Output-Specification-1"><a href="#Output-Specification-1" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, first print in a line “Yes” if doubling the input number gives a number that consists of only a permutation of the digits in the original number, or “No” if not. Then in the next line, print the doubled number.</p>
<h3 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1234567899</span><br></pre></td></tr></table></figure>
<h3 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Yes</span><br><span class="line">2469135798</span><br></pre></td></tr></table></figure>
<p>这题也是，题目看不太懂，但是比43题要好的多的多得多</p>
<h2 id="逐句翻译"><a href="#逐句翻译" class="headerlink" title="逐句翻译"></a>逐句翻译</h2><p>Notice that the number 123456789 is a 9-digit number consisting exactly the numbers from 1 to 9, with no duplication</p>
<p>请注意，数字 123456789 是一个 9 位数，正好由 1 到 9 的数字组成，没有重复的数字</p>
<p>Double it we will obtain 246913578, which happens to be another 9-digit number consisting exactly the numbers from 1 to 9, only in a different permutation</p>
<p>将它加倍，我们将得到 246913578，这恰好是另一个 9 位数，完全由 1 到 9 的数字组成，只是排列方式不同而已</p>
<p>Check to see the result if we double it again!</p>
<p>现在，您需要检查是否有更多数字具有此属性</p>
<p>也就是说，将一个有 k 位数字的给定数字加倍，你要知道得到的数字是否只由原始数字中的数字排列而成。</p>
<h3 id="错误原因-2"><a href="#错误原因-2" class="headerlink" title="错误原因"></a>错误原因</h3><p>一直在解决那个运算大小的问题，这个我一直不清楚</p>
<h3 id="错误代码"><a href="#错误代码" class="headerlink" title="错误代码"></a>错误代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> a[<span class="number">11</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">void</span> <span class="title function_">adda</span><span class="params">(<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">while</span> (x) &#123;</span><br><span class="line">        a[x % <span class="number">10</span>] = <span class="number">1</span>;</span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; ++i)  a[i] = <span class="number">0</span>;    <span class="comment">//初始化</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> x = <span class="number">0</span>, flag = <span class="number">1</span>, t = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;x);</span><br><span class="line">    adda(x);</span><br><span class="line">    t = x * <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] == <span class="number">0</span>) flag = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Yes\n%lld&quot;</span>, t);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (t) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[t % <span class="number">10</span>] == <span class="number">0</span>) &#123;</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            a[t % <span class="number">10</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        t /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] == <span class="number">1</span>) flag = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag)    <span class="built_in">printf</span>(<span class="string">&quot;Yes\n%lld&quot;</span>, x * <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;No\n%lld&quot;</span>, x * <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>正确代码如下：</p>
<p>思路如下：</p>
<p><strong>分析：使用char数组存储这个数，没个数的数位乘以2 + 进位，同时设立book来标记数位出现的情况。只有最后book的每个元素都是0的时候才说明这两个数字是相等的一个排列结果～</strong></p>
<p>代码地址</p>
<h3 id="正确代码"><a href="#正确代码" class="headerlink" title="正确代码"></a>正确代码</h3><p><a href="https://blog.csdn.net/liuchuo/article/details/52155928?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522171204890216800215051717%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&amp;request_id=171204890216800215051717&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-1-52155928-null-null.nonecase&amp;utm_term=Have%20Fun%20with%20Numbers&amp;spm=1018.2226.3001.4450">https://blog.csdn.net/liuchuo/article/details/52155928?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522171204890216800215051717%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&amp;request_id=171204890216800215051717&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-1-52155928-null-null.nonecase&amp;utm_term=Have%20Fun%20with%20Numbers&amp;spm=1018.2226.3001.4450</a></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> book[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> num[<span class="number">22</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, num);</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">0</span>, len = <span class="built_in">strlen</span>(num);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = len - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="type">int</span> temp = num[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        book[temp]++;</span><br><span class="line">        temp = temp * <span class="number">2</span> + flag;</span><br><span class="line">        flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (temp &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">            temp = temp - <span class="number">10</span>;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        num[i] = (temp + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        book[temp]--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> flag1 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (book[i] != <span class="number">0</span>)</span><br><span class="line">            flag1 = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, (flag == <span class="number">1</span> || flag1 == <span class="number">1</span>) ? <span class="string">&quot;No\n&quot;</span> : <span class="string">&quot;Yes\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (flag == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-50-输出华氏-摄氏温度转换表"><a href="#7-50-输出华氏-摄氏温度转换表" class="headerlink" title="7-50 输出华氏-摄氏温度转换表"></a><strong>7-50 输出华氏-摄氏温度转换表</strong></h1><p>题目如下：</p>
<p>输入2个正整数<code>lower</code>和<code>upper</code>（<code>lower</code>≤<code>upper</code>≤100），请输出一张取值范围为[<code>lower</code>，<code>upper</code>]、且每次增加2华氏度的华氏-摄氏温度转换表。</p>
<p>温度转换的计算公式：<em>C</em>=5×(<em>F</em>−32)/9，其中：<em>C</em>表示摄氏温度，<em>F</em>表示华氏温度。</p>
<h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>在一行中输入2个整数，分别表示<code>lower</code>和<code>upper</code>的值，中间用空格分开。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>第一行输出：”fahr celsius”</p>
<p>接着每行输出一个华氏温度fahr（整型）与一个摄氏温度celsius（占据6个字符宽度，靠右对齐，保留1位小数）。</p>
<p>若输入的范围不合法，则输出”Invalid.”。</p>
<h3 id="输入样例1"><a href="#输入样例1" class="headerlink" title="输入样例1:"></a>输入样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">32 35</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1"><a href="#输出样例1" class="headerlink" title="输出样例1:"></a>输出样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fahr celsius</span><br><span class="line">32   0.0</span><br><span class="line">34   1.1</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2"><a href="#输入样例2" class="headerlink" title="输入样例2:"></a>输入样例2:</h3><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">40 </span><span class="number">30</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例2"><a href="#输出样例2" class="headerlink" title="输出样例2:"></a>输出样例2:</h3><figure class="highlight erlang"><table><tr><td class="code"><pre><span class="line">Invalid.</span><br></pre></td></tr></table></figure>
<h2 id="错误原因-3"><a href="#错误原因-3" class="headerlink" title="错误原因"></a>错误原因</h2><p>温度是可以有负的，铁铁，我确实是傻逼了</p>
<p>正确代码</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> lower = <span class="number">0</span>, upper = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;lower, &amp;upper);</span><br><span class="line">	<span class="keyword">if</span> ( lower&gt;upper) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Invalid.\n&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;fahr celsius\n&quot;</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = lower; i &lt;= upper; i += <span class="number">2</span>) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d%6.1f\n&quot;</span>, i, <span class="number">5</span> * (i - <span class="number">32</span>) / <span class="number">9.0</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-56-求给定精度的简单交错序列部分和"><a href="#7-56-求给定精度的简单交错序列部分和" class="headerlink" title="7-56 求给定精度的简单交错序列部分和"></a><strong>7-56 求给定精度的简单交错序列部分和</strong></h1><p>本题要求编写程序，计算序列部分和 1 - 1/4 + 1/7 - 1/10 + … 直到最后一项的绝对值不大于给定精度eps。</p>
<h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出一个正实数eps。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后六位。题目保证计算结果不超过双精度范围。</p>
<h3 id="输入样例1-1"><a href="#输入样例1-1" class="headerlink" title="输入样例1:"></a>输入样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4E-2</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1-1"><a href="#输出样例1-1" class="headerlink" title="输出样例1:"></a>输出样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sum = 0.854457</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2-1"><a href="#输入样例2-1" class="headerlink" title="输入样例2:"></a>输入样例2:</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">0</span>.<span class="number">02</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例2-1"><a href="#输出样例2-1" class="headerlink" title="输出样例2:"></a>输出样例2:</h3><figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">sum</span> <span class="operator">=</span> <span class="number">0.826310</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p> 这题我是写出来了，但是我写的非常的糟糕，非常的糟糕</p>
<p>代码真的是又臭又长，也是真的抽象</p>
<h2 id="我自己写的代码，正确但是臭"><a href="#我自己写的代码，正确但是臭" class="headerlink" title="我自己写的代码，正确但是臭"></a>我自己写的代码，正确但是臭</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">//#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="type">double</span> <span class="title function_">Mi</span><span class="params">(<span class="type">int</span> d)</span> &#123;</span><br><span class="line">	<span class="type">double</span> sum = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; d; ++i) &#123;</span><br><span class="line">		sum *= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (d &lt; <span class="number">0</span>) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; -d; ++i) &#123;</span><br><span class="line">			sum *= <span class="number">0.1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> <span class="title function_">chartodbl</span><span class="params">(<span class="type">char</span>* a)</span> &#123;</span><br><span class="line">	<span class="type">int</span> dit = <span class="built_in">strlen</span>(a),sum=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a); i++) &#123;</span><br><span class="line">		sum += (a[i] - <span class="string">&#x27;0&#x27;</span>) * Mi(dit);</span><br><span class="line">		dit--;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> <span class="title function_">strtodbl</span><span class="params">(<span class="type">char</span> *a)</span> &#123;</span><br><span class="line">	<span class="type">int</span> dit = <span class="number">0</span>,flag=<span class="number">0</span>;	<span class="comment">//0表示在E之前的数字</span></span><br><span class="line">	<span class="type">char</span> num[<span class="number">50</span>] = &#123; <span class="string">&#x27; &#x27;</span> &#125;, mi[<span class="number">50</span>] = &#123;<span class="string">&#x27; &#x27;</span>&#125;;</span><br><span class="line">	<span class="type">int</span> index = <span class="number">0</span>,num2=<span class="number">0</span>;</span><br><span class="line">	<span class="type">double</span> num1 = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a); i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">			<span class="keyword">if</span> (a[i] &gt; <span class="string">&#x27;0&#x27;</span> &amp;&amp; a[i] &lt; <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">				num[i] = a[i];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (a[i] == <span class="string">&#x27;E&#x27;</span>) &#123;</span><br><span class="line">			flag = <span class="number">1</span>;</span><br><span class="line">			num1 = chartodbl(num);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">			<span class="keyword">if</span> (a[i] &gt; <span class="string">&#x27;0&#x27;</span> &amp;&amp; a[i] &lt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">				mi[index] = a[i];</span><br><span class="line">				index++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	num2 = chartodbl(mi);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;=num2; ++i) &#123;</span><br><span class="line">		num1 *= <span class="number">0.1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> num1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用来判断是不是科学计数法</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">judge</span><span class="params">(<span class="type">char</span>* a)</span> &#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a); ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (a[i] == <span class="string">&#x27;E&#x27;</span>)	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> <span class="title function_">nor</span><span class="params">(<span class="type">char</span>* a)</span> &#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a); ++i) &#123;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">double</span> sum=<span class="number">0</span>, n = <span class="number">0</span>, t = <span class="number">1</span>,i=<span class="number">1</span>;</span><br><span class="line">	<span class="type">char</span> str[<span class="number">100</span>] = &#123; <span class="string">&#x27; &#x27;</span> &#125;;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line">	<span class="keyword">if</span> (!judge(str)) &#123;</span><br><span class="line">		n = strtodbl(str);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		n = atof(str);</span><br><span class="line">	<span class="keyword">if</span> (n &gt;= <span class="number">1</span>)	sum = <span class="number">1</span>;</span><br><span class="line">	<span class="comment">//printf(&quot;%lf\n&quot;, n);</span></span><br><span class="line">	<span class="keyword">while</span> (t - n &gt;<span class="number">0</span>) &#123;</span><br><span class="line">		t = <span class="number">1.0</span> / (<span class="number">3</span> * i - <span class="number">2</span>);</span><br><span class="line">		<span class="keyword">if</span> ((<span class="type">int</span>)i % <span class="number">2</span> == <span class="number">0</span>)	t *= <span class="number">-1</span>;</span><br><span class="line">		<span class="comment">//printf(&quot;i is %lf   t is %lf\n&quot;, i, t);</span></span><br><span class="line">		sum += t;</span><br><span class="line">		i++;</span><br><span class="line">		<span class="keyword">if</span> (t &lt; <span class="number">0</span>)	t = -t;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//printf(&quot;t is %.8lf\n&quot;, t);</span></span><br><span class="line">	<span class="comment">//t = 1.0 / (3 * i - 2);</span></span><br><span class="line">	<span class="comment">//if ((int)i % 2 == 0)	t *= -1;</span></span><br><span class="line">	<span class="comment">//sum += t;</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;sum = %.6lf&quot;</span>, sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>找找柳神的代码，怎么样。</p>
<p>我是傻逼，这个是可以读取科学计数法的，我真的是日了狗了</p>
<p>我是傻逼，scanf是可以读取double类型下的科学计数法的</p>
<p>还有就是float和double，能用double，就用double，因为这两个float可能会损失精度</p>
<h2 id="别人的代码-1"><a href="#别人的代码-1" class="headerlink" title="别人的代码"></a>别人的代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> eps;</span><br><span class="line">    <span class="type">double</span> flag, denominator, item, sum;</span><br><span class="line">    scanf_s(<span class="string">&quot;%lf&quot;</span>, &amp;eps);</span><br><span class="line">    flag = <span class="number">1</span>;</span><br><span class="line">    denominator = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        item的初值比eps大</span></span><br><span class="line"><span class="comment">        可以保证进入循环程序</span></span><br><span class="line"><span class="comment">        可以满足eps比1大的情况下，sum能加到第一项</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    item = eps + <span class="number">1</span>;</span><br><span class="line">    sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">fabs</span>(item) &gt; eps)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/*不满足while判断表达式后的第一项，此时的item为下一项*/</span></span><br><span class="line">        item = flag / denominator;</span><br><span class="line">        sum = sum + item;</span><br><span class="line">        flag = -flag;</span><br><span class="line">        denominator = denominator + <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum = %.6f\n&quot;</span>, sum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-59-打印菱形图案"><a href="#7-59-打印菱形图案" class="headerlink" title="7-59 打印菱形图案"></a><strong>7-59 打印菱形图案</strong></h1><p>本题要求编写程序，打印一个高度为<em>n</em>的、由“*”组成的正菱形图案。</p>
<h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出一个正的奇数<em>n</em>。</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>输出由<em>n</em>行星号“*”组成的菱形，如样例所示。每个星号后跟一个空格。</p>
<h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure>
<h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">      * </span><br><span class="line">    * * * </span><br><span class="line">  * * * * * </span><br><span class="line">* * * * * * * </span><br><span class="line">  * * * * * </span><br><span class="line">    * * * </span><br><span class="line">      * </span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<h2 id="错误原因-4"><a href="#错误原因-4" class="headerlink" title="错误原因"></a>错误原因</h2><p>也没有什么错误原因，就是不会写，我也是有点低能的</p>
<p>我真是傻逼了，不管怎么样，先输出5个空格在说呗，为什么要管呢</p>
<p>然后在输出一个*</p>
<h2 id="正确代码-1"><a href="#正确代码-1" class="headerlink" title="正确代码"></a>正确代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n / <span class="number">2</span> + <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n + <span class="number">1</span> - <span class="number">2</span> * i; j++)        <span class="comment">//  不管怎么样，先输出5个空格</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= <span class="number">2</span> * i - <span class="number">1</span>; j++)            <span class="comment">// 然后在输出对应的*</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;* &quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n / <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= <span class="number">2</span> * i; j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">2</span> * (n / <span class="number">2</span>) - <span class="number">1</span> - <span class="number">2</span> * (i - <span class="number">1</span>); j &gt;= <span class="number">1</span>; j--)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;* &quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-79-N个数求和"><a href="#7-79-N个数求和" class="headerlink" title="7-79 N个数求和"></a><strong>7-79 N个数求和</strong></h1><p>本题的要求很简单，就是求<code>N</code>个数字的和。麻烦的是，这些数字是以有理数<code>分子/分母</code>的形式给出的，你输出的和也必须是有理数的形式。</p>
<h3 id="输入格式：-1"><a href="#输入格式：-1" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出一个正整数<code>N</code>（≤100）。随后一行按格式<code>a1/b1 a2/b2 ...</code>给出<code>N</code>个有理数。题目保证所有分子和分母都在长整型范围内。另外，负数的符号一定出现在分子前面。</p>
<h3 id="输出格式：-1"><a href="#输出格式：-1" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出上述数字和的最简形式 —— 即将结果写成<code>整数部分 分数部分</code>，其中分数部分写成<code>分子/分母</code>，要求分子小于分母，且它们没有公因子。如果结果的整数部分为0，则只输出分数部分。</p>
<h3 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">2/5 4/15 1/30 -2/60 8/3</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 1/3</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">2</span></span><br><span class="line"><span class="attribute">4</span>/<span class="number">3</span> <span class="number">2</span>/<span class="number">3</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>
<h3 id="输入样例3："><a href="#输入样例3：" class="headerlink" title="输入样例3："></a>输入样例3：</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">3</span></span><br><span class="line"><span class="attribute">1</span>/<span class="number">3</span> -<span class="number">1</span>/<span class="number">6</span> <span class="number">1</span>/<span class="number">8</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例3："><a href="#输出样例3：" class="headerlink" title="输出样例3："></a>输出样例3：</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">7</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>错误原因，已经超时了</p>
<h2 id="错误代码-1"><a href="#错误代码-1" class="headerlink" title="错误代码"></a>错误代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//求最大公约数</span></span><br><span class="line"><span class="type">long</span> <span class="title function_">lcd</span><span class="params">(<span class="type">long</span> a, <span class="type">long</span> b)</span> &#123;</span><br><span class="line">    <span class="type">long</span> m = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b) m = a;</span><br><span class="line">    <span class="keyword">else</span> m = b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">long</span> i = m; i &lt;= a * b; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i % a == <span class="number">0</span> &amp;&amp; i % b == <span class="number">0</span>)   <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">long</span> <span class="title function_">gcd</span><span class="params">(<span class="type">long</span> a, <span class="type">long</span> b)</span> &#123;</span><br><span class="line">    <span class="type">long</span> m = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (b &lt; <span class="number">0</span>) b = -b;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; b) m = a;</span><br><span class="line">    <span class="keyword">else</span> m = b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = m; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a % i == <span class="number">0</span> &amp;&amp; b % i == <span class="number">0</span>)  <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">long</span> *n,<span class="type">long</span> *a, <span class="type">long</span> *b, <span class="type">long</span> *a1, <span class="type">long</span> *b1)</span> &#123;</span><br><span class="line">    <span class="type">long</span> blcd = lcd(*b, *b1);</span><br><span class="line">    <span class="type">long</span> alcd = (blcd / *b) * (*a) + (blcd / *b1) * (*a1)+(*n)*blcd;</span><br><span class="line">    <span class="type">long</span> tgcd = gcd(blcd, alcd);</span><br><span class="line">    *a = alcd / tgcd;</span><br><span class="line">    *b = blcd / tgcd;</span><br><span class="line">    *n = *a / (*b);</span><br><span class="line">    *a = *a - (*n) * (*b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">put</span><span class="params">(<span class="type">long</span> num, <span class="type">long</span> a, <span class="type">long</span> b)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (a != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (num != <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%ld %ld/%ld&quot;</span>, num, a, b);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%ld/%ld&quot;</span>, a, b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%ld&quot;</span>, num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">long</span> a[<span class="number">101</span>] = &#123; <span class="number">0</span> &#125;, b[<span class="number">101</span>] = &#123; <span class="number">0</span> &#125;,num=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%ld/%ld&quot;</span>, &amp;a[<span class="number">1</span>], &amp;b[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%ld/%ld&quot;</span>, &amp;a[i],&amp;b[i]);</span><br><span class="line">        add(&amp;num,&amp;a[<span class="number">1</span>], &amp;b[<span class="number">1</span>], &amp;a[i], &amp;b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    put(num,a[<span class="number">1</span>], b[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="自己写的正确代码"><a href="#自己写的正确代码" class="headerlink" title="自己写的正确代码"></a>自己写的正确代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//求最大公倍数数</span></span><br><span class="line"><span class="type">long</span> <span class="title function_">lcd</span><span class="params">(<span class="type">long</span> a, <span class="type">long</span> b)</span> &#123;</span><br><span class="line">    <span class="type">long</span> m = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b) m = a;</span><br><span class="line">    <span class="keyword">else</span> m = b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">long</span> i = m; i &lt;= a * b; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i % a == <span class="number">0</span> &amp;&amp; i % b == <span class="number">0</span>)   <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//最小公约数</span></span><br><span class="line"><span class="type">long</span> <span class="title function_">gcd</span><span class="params">(<span class="type">long</span> a, <span class="type">long</span> b)</span> &#123;</span><br><span class="line">    <span class="type">long</span> m = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; <span class="number">0</span>)  a = -a;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; b) m = a;</span><br><span class="line">    <span class="keyword">else</span> m = b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">long</span> i = m; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a % i == <span class="number">0</span> &amp;&amp; b % i == <span class="number">0</span>)  <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//化简</span></span><br><span class="line"><span class="type">long</span> <span class="title function_">gcdmyself</span><span class="params">(<span class="type">long</span>* a, <span class="type">long</span>* b)</span> &#123;</span><br><span class="line">    <span class="type">long</span> mlcd = gcd(*a, *b);</span><br><span class="line">    <span class="comment">//printf(&quot;mcld is %ld\n&quot;, mlcd);</span></span><br><span class="line">    *a = *a / mlcd;</span><br><span class="line">    *b = *b / mlcd;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//相加的函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">long</span>* n, <span class="type">long</span>* a, <span class="type">long</span>* b, <span class="type">long</span>* a1, <span class="type">long</span>* b1)</span> &#123;</span><br><span class="line">    <span class="type">long</span> blcd = lcd(*b, *b1);</span><br><span class="line">    <span class="type">long</span> alcd = (blcd / *b) * (*a) + (blcd / *b1) * (*a1) + (*n) * blcd;</span><br><span class="line">    <span class="type">long</span> tgcd = gcd(alcd,blcd);</span><br><span class="line">    <span class="keyword">if</span> (alcd != <span class="number">0</span>) &#123;</span><br><span class="line">        *a = alcd / tgcd;</span><br><span class="line">        *b = blcd / tgcd;</span><br><span class="line">        *n = *a / (*b);</span><br><span class="line">        *a = *a - (*n) * (*b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        *n = <span class="number">0</span>;</span><br><span class="line">        *a = <span class="number">0</span>;</span><br><span class="line">        *b = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">put</span><span class="params">(<span class="type">long</span> num, <span class="type">long</span> a, <span class="type">long</span> b)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="number">0</span> &amp;&amp; num == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (num != <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%ld %ld/%ld&quot;</span>, num, a, b);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%ld/%ld&quot;</span>, a, b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%ld&quot;</span>, num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">long</span> a[<span class="number">101</span>] = &#123; <span class="number">0</span> &#125;, b[<span class="number">101</span>] = &#123; <span class="number">0</span> &#125;, num = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%ld/%ld&quot;</span>, &amp;a[<span class="number">1</span>], &amp;b[<span class="number">1</span>]);</span><br><span class="line">    gcdmyself(&amp;a[<span class="number">1</span>], &amp;b[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%ld/%ld&quot;</span>, &amp;a[i], &amp;b[i]);</span><br><span class="line">        gcdmyself(&amp;a[i], &amp;b[i]);    </span><br><span class="line">        add(&amp;num, &amp;a[<span class="number">1</span>], &amp;b[<span class="number">1</span>], &amp;a[i], &amp;b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    put(num, a[<span class="number">1</span>], b[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>柳神的好代码</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="title function_">gcd</span><span class="params">(<span class="type">long</span> <span class="type">long</span> a, <span class="type">long</span> <span class="type">long</span> b)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> b == <span class="number">0</span> ? a : gcd(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> n, a, b, suma = <span class="number">0</span>, sumb = <span class="number">1</span>, gcdvalue;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld/%lld&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        gcdvalue = (suma == <span class="number">0</span> || sumb == <span class="number">0</span>) ? <span class="number">1</span> : gcd(<span class="built_in">abs</span>(suma), <span class="built_in">abs</span>(sumb));</span><br><span class="line">        sumb = sumb / gcdvalue;</span><br><span class="line">        suma = suma / gcdvalue;</span><br><span class="line">        gcdvalue = (a == <span class="number">0</span> || b == <span class="number">0</span>) ? <span class="number">1</span> : gcd(<span class="built_in">abs</span>(a), <span class="built_in">abs</span>(b));</span><br><span class="line">        a = a / gcdvalue;</span><br><span class="line">        b = b / gcdvalue;</span><br><span class="line">        suma = a * sumb + suma * b;</span><br><span class="line">        sumb = b * sumb;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> integer = suma / sumb;</span><br><span class="line">    suma = suma - (sumb * integer);</span><br><span class="line">    gcdvalue = (suma == <span class="number">0</span> || sumb == <span class="number">0</span>) ? <span class="number">1</span> : gcd(<span class="built_in">abs</span>(suma), <span class="built_in">abs</span>(sumb));</span><br><span class="line">    suma = suma / gcdvalue;</span><br><span class="line">    sumb = sumb / gcdvalue;</span><br><span class="line">    <span class="keyword">if</span> (integer != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, integer);</span><br><span class="line">        <span class="keyword">if</span> (suma != <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (suma != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld/%lld&quot;</span>, suma, sumb);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (integer == <span class="number">0</span> &amp;&amp; suma == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PTA</category>
        <category>C</category>
      </categories>
      <tags>
        <tag>PTA</tag>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言-翁恺-PTA-81-120课后练习题-03</title>
    <url>/2024/04/05/C%E8%AF%AD%E8%A8%80-%E7%BF%81%E6%81%BA-PTA-81-120%E8%AF%BE%E5%90%8E%E7%BB%83%E4%B9%A0%E9%A2%98-03/</url>
    <content><![CDATA[<h1 id="7-84-连续因子"><a href="#7-84-连续因子" class="headerlink" title="7-84 连续因子"></a><strong>7-84 连续因子</strong></h1><p>80-以后的题目感觉都不是很好做</p>
<p>一个正整数 <em>N</em> 的因子中可能存在若干连续的数字。例如 630 可以分解为 3×5×6×7，其中 5、6、7 就是 3 个连续的数字。给定任一正整数 <em>N</em>，要求编写程序求出最长连续因子的个数，并输出最小的连续因子序列。</p>
<h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个正整数 <em>N</em>（1&lt;<em>N</em>&lt;231）。</p>
<h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>首先在第 1 行输出最长连续因子的个数；然后在第 2 行中按 <code>因子1*因子2*……*因子k</code> 的格式输出最小的连续因子序列，其中因子按递增顺序输出，1 不算在内。</p>
<h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">630</span><br></pre></td></tr></table></figure>
<h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">5*6*7</span><br></pre></td></tr></table></figure>
<p><strong>鸣谢用户 漏穿雪 补充数据！</strong></p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<h2 id="错误代码"><a href="#错误代码" class="headerlink" title="错误代码"></a>错误代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">long</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>,beg=<span class="number">0</span>,sum=<span class="number">0</span>,sumt=<span class="number">0</span>,begt=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> num[<span class="number">1000</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n / <span class="number">2</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n % i == <span class="number">0</span>) &#123;</span><br><span class="line">            num[t++] = i;</span><br><span class="line">            <span class="comment">//printf(&quot;%d &quot;, i);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//printf(&quot;\nt is %d\nt[22] is %d\n&quot;, t,num[t-1]);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;t; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (num[i] == num[i - <span class="number">1</span>]+<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == t - <span class="number">1</span>) &#123;</span><br><span class="line">                sumt = i - begt+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (sumt &gt; sum) &#123;</span><br><span class="line">                    beg = begt;</span><br><span class="line">                    sum = sumt;</span><br><span class="line">                &#125;</span><br><span class="line">                begt = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            sumt = i - begt;</span><br><span class="line">            <span class="keyword">if</span> (sumt &gt; sum) &#123;</span><br><span class="line">                beg = begt;</span><br><span class="line">                sum = sumt;</span><br><span class="line">            &#125;</span><br><span class="line">            begt = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = beg; i &lt; beg + sum; ++i) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, num[i]);</span><br><span class="line">        <span class="keyword">if</span> (i != beg + sum - <span class="number">1</span>)    <span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="柳神的代码"><a href="#柳神的代码" class="headerlink" title="柳神的代码"></a>柳神的代码</h2><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p><strong>不用算连续因子最多不会超过12个，也不需要三重循环，两重循环即可，直接去计算当前部分乘积能不能整除N<br>**</strong>分析：1、如果只有一个因子，那么这个数只能为1或者质数。因此我们主要去计算两个及以上因数的情况。<br>2、在有两个及以上的数连乘中，因数的最大上限为sqrt(N) + 1<br>3、因此思路就是，不断构造连乘，看连乘的积是否是N的因数，如果是，则看这部分连乘的数的个数是否比已记录的多。<br>4、用变量first记录连乘的第一个数字，这里我把它赋初值为0，如果在寻找N的因数过程中，first没有改变，那么就表明N是1或者是一个质数～**</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="type">int</span> num, temp;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>, &amp;num);</span><br><span class="line">    <span class="type">int</span> first = <span class="number">0</span>, len = <span class="number">0</span>, maxn = <span class="built_in">sqrt</span>(num) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= maxn; i++) &#123;</span><br><span class="line">        <span class="type">int</span> j;</span><br><span class="line">        temp = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (j = i; j &lt;= maxn; j++) &#123;</span><br><span class="line">            temp *= j;</span><br><span class="line">            <span class="keyword">if</span> (num % temp != <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (j - i &gt; len) &#123;</span><br><span class="line">            len = j - i;</span><br><span class="line">            first = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (first == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1\n%ld&quot;</span>, num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, len);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, first + i);</span><br><span class="line">            <span class="keyword">if</span> (i != len - <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="7-93-水仙花数"><a href="#7-93-水仙花数" class="headerlink" title="7-93 水仙花数"></a><strong>7-93 水仙花数</strong></h2><p>水仙花数是指一个<em>N</em>位正整数（<em>N</em>≥3），它的每个位上的数字的<em>N</em>次幂之和等于它本身。例如：153=13+53+33。 本题要求编写程序,计算所有<em>N</em>位水仙花数。</p>
<h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出一个正整数<em>N</em>（3≤<em>N</em>≤7）。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>按递增顺序输出所有<em>N</em>位水仙花数，每个数字占一行。</p>
<h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>
<h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">153</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">407</span><br></pre></td></tr></table></figure>
<h2 id="错误原因"><a href="#错误原因" class="headerlink" title="错误原因"></a>错误原因</h2><p>运行超市，无法通过最后一个检测</p>
<p>抽象的点来了，Pow函数的效率还不如自己写的，自己写一个幂函数即可</p>
<h2 id="错误代码-1"><a href="#错误代码-1" class="headerlink" title="错误代码"></a>错误代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">judge</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> mi)</span> &#123;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>, t = n;</span><br><span class="line">	<span class="keyword">while</span> (n) &#123;</span><br><span class="line">		sum += <span class="built_in">pow</span>(n % <span class="number">10</span>, mi);</span><br><span class="line">		<span class="keyword">if</span> (sum &gt; t)	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		n /= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (t == sum)	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="built_in">pow</span>(<span class="number">10</span>, n - <span class="number">1</span>); i &lt; <span class="built_in">pow</span>(<span class="number">10</span>, n); ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (judge(i,n))	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//if (judge(153))	printf(&quot;153\n&quot;);</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>正确代码：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">mypow</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= b; ++i) &#123;</span><br><span class="line">		sum *= a;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">judge</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> mi)</span> &#123;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>, t = n;</span><br><span class="line">	<span class="keyword">while</span> (n) &#123;</span><br><span class="line">		sum += mypow(n % <span class="number">10</span>, mi);</span><br><span class="line">		<span class="keyword">if</span> (sum &gt; t)	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		n /= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (t == sum)	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = mypow(<span class="number">10</span>, n - <span class="number">1</span>); i &lt; mypow(<span class="number">10</span>, n); ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (judge(i,n))	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//if (judge(153))	printf(&quot;153\n&quot;);</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-110-求符合给定条件的整数集"><a href="#7-110-求符合给定条件的整数集" class="headerlink" title="7-110 求符合给定条件的整数集"></a><strong>7-110 求符合给定条件的整数集</strong></h1><p>给定不超过6的正整数A，考虑从A开始的连续4个数字。请输出所有由它们组成的无重复数字的3位数。</p>
<h3 id="输入格式：-1"><a href="#输入格式：-1" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出A。</p>
<h3 id="输出格式：-1"><a href="#输出格式：-1" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出满足条件的的3位数，要求从小到大，每行6个整数。整数间以空格分隔，但行末不能有多余空格。</p>
<h3 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">234 235 243 245 253 254</span><br><span class="line">324 325 342 345 352 354</span><br><span class="line">423 425 432 435 452 453</span><br><span class="line">523 524 532 534 542 543</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<h2 id="错误原因-1"><a href="#错误原因-1" class="headerlink" title="错误原因"></a>错误原因</h2><p>没啥好的思路，不太会写</p>
<p>柳神没有写这题，所以我找了一个代码量少的，暴力算法</p>
<h2 id="正确代码"><a href="#正确代码" class="headerlink" title="正确代码"></a>正确代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i, j, k;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (i = n; i &lt;= n + <span class="number">3</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = n; j &lt;= n + <span class="number">3</span>; j++)</span><br><span class="line">			<span class="keyword">for</span> (k = n; k &lt;= n + <span class="number">3</span>; k++)</span><br><span class="line">				<span class="keyword">if</span> (i != j &amp;&amp; j != k &amp;&amp; i != k)</span><br><span class="line">				&#123;</span><br><span class="line">					count++;</span><br><span class="line">					<span class="keyword">if</span> (count % <span class="number">6</span> == <span class="number">0</span>)</span><br><span class="line">						<span class="built_in">printf</span>(<span class="string">&quot;%d%d%d\n&quot;</span>, i, j, k);</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						<span class="built_in">printf</span>(<span class="string">&quot;%d%d%d &quot;</span>, i, j, k);</span><br><span class="line">				&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-117-整数的分类处理"><a href="#7-117-整数的分类处理" class="headerlink" title="7-117 整数的分类处理"></a><strong>7-117 整数的分类处理</strong></h1><p>这题我看不懂题目的意思，什么叫</p>
<p>存在整数 K 使之可以表示为 3K+1 的整数的个数、</p>
<p>还有什么叫做</p>
<p>存在整数 K 使之可以表示为 3K+2 的所有整数的平均值（精确到小数点后 1 位）</p>
<p>给定 N 个正整数，要求你从中得到下列三种计算结果：</p>
<ul>
<li>A1 = 能被 3 整除的最大整数</li>
<li>A2 = 存在整数 K 使之可以表示为 3K+1 的整数的个数</li>
<li>A3 = 存在整数 K 使之可以表示为 3K+2 的所有整数的平均值（精确到小数点后 1 位）</li>
</ul>
<h3 id="输入格式：-2"><a href="#输入格式：-2" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入首先在第一行给出一个正整数 N，随后一行给出 N 个正整数。所有数字都不超过 100，同行数字以空格分隔。</p>
<h3 id="输出格式：-2"><a href="#输出格式：-2" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中顺序输出 A1、A2、A3的值，其间以 1 个空格分隔。如果某个数字不存在，则对应输出<code>NONE</code>。</p>
<h3 id="输入样例-1："><a href="#输入样例-1：" class="headerlink" title="输入样例 1："></a>输入样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">5 8 7 6 9 1 3 10</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-1："><a href="#输出样例-1：" class="headerlink" title="输出样例 1："></a>输出样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9 3 6.5</span><br></pre></td></tr></table></figure>
<h3 id="输入样例-2："><a href="#输入样例-2：" class="headerlink" title="输入样例 2："></a>输入样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">15 18 7 6 9 1 3 10</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-2："><a href="#输出样例-2：" class="headerlink" title="输出样例 2："></a>输出样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">18 3 NONE</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<h2 id="错误原因-2"><a href="#错误原因-2" class="headerlink" title="错误原因"></a>错误原因</h2><p>看不懂题目</p>
<p>后来看了别人的代码才看懂了题目</p>
<p>中译中如下：</p>
<ul>
<li><p>A2 = 存在整数 K 使之可以表示为 3K+1 的整数的个数</p>
<p>这个的意思，就是算，这个数列中除以3取余为1的个数</p>
</li>
</ul>
<ul>
<li><p>A3 = 存在整数 K 使之可以表示为 3K+2 的所有整数的平均值（精确到小数点后 1 位）</p>
<p>这个的意思，就是算，这个数列中除以3取余为2 的所有数的平均值</p>
</li>
</ul>
<h2 id="正确代码如下："><a href="#正确代码如下：" class="headerlink" title="正确代码如下："></a>正确代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;	</span><br><span class="line">	<span class="type">double</span> a3 = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>, a1 = INT_MIN, a2 = <span class="number">0</span>,p=<span class="number">0</span>,t=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p);</span><br><span class="line">		<span class="keyword">if</span> (p % <span class="number">3</span> == <span class="number">0</span> &amp;&amp; p &gt; a1)	a1 = p;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (p % <span class="number">3</span> == <span class="number">1</span>)	a2++;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(p%<span class="number">3</span>==<span class="number">2</span>)&#123;</span><br><span class="line">			a3 += p;</span><br><span class="line">			t++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(t!=<span class="number">0</span>)	a3 = a3 * <span class="number">1.0</span> / t;</span><br><span class="line">	<span class="comment">//printf(&quot;t is %d\na3 is %lf\n&quot;, t,a3);</span></span><br><span class="line">	<span class="keyword">if</span> (a1 == INT_MIN)<span class="built_in">printf</span>(<span class="string">&quot;NONE &quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a1);</span><br><span class="line">	<span class="keyword">if</span> (a2 == <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;NONE &quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a2);</span><br><span class="line">	<span class="keyword">if</span> (a3 == <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;NONE&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%.01lf&quot;</span>, a3);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PTA</category>
      </categories>
      <tags>
        <tag>PTA</tag>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>程序设计入门——C语言</title>
    <url>/2020/10/08/C%E8%AF%AD%E8%A8%80%E7%BD%91%E8%AF%BE%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="程序设计入门——C语言"><a href="#程序设计入门——C语言" class="headerlink" title="程序设计入门——C语言"></a>程序设计入门——C语言</h1><p>第一周 程序设计与C语言</p>
<p> 程序的执行</p>
<p>解释：借助一个程序，那个程序能试图理解你的程序，然后按照你的要求执行</p>
<p>编译：借助一个程序，就像一个翻译，把你的程序翻译成计算机真正能懂的语言———机器语言——写的程序，然后，这个机器语言写的程序就能执行了</p>
<p>一：语言本无编译/解释之分</p>
<p>二：常用的执行方式而已</p>
<p>三：解释语言有特殊的计算能力</p>
<p>四：编译型语言有确定的运算性能</p>
<p>现代的编程语言在语法上差异很小，几乎都是C-Like语言</p>
<p>语言的能力/适用领域主要是由</p>
<p>库</p>
<p>传统所决定的</p>
<h1 id="C语言的发展"><a href="#C语言的发展" class="headerlink" title="C语言的发展"></a>C语言的发展</h1><p>1989年ANSI发布了一个标准-ANSI-C</p>
<p>1990年ISO接受了ANSI的标准-C89</p>
<p>C的标桩在1995年和1999年两次更新-C95和C99</p>
<h1 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h1><p>一个表达式是一系列运算符和算子的组合，用来计算一个值</p>
<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h2 id="运算符-1"><a href="#运算符-1" class="headerlink" title="运算符"></a>运算符</h2><p>（operator)是指进行运算的动作，比如加法运算符”+”，减肥运算符“-”</p>
<h2 id="算子"><a href="#算子" class="headerlink" title="算子"></a>算子</h2><p>算子，是指参与运算的值，这个值可能是常数，也可能是变量，还可能是一个方法的返回值</p>
<p>举例：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">a=b+c</span><br></pre></td></tr></table></figure>
<p>这里面的a,b,c,就是算子，=号和+号就是运算符</p>
<p>这个运算符也是有一个优先级的</p>
<p>下面有一张，运算符的优先级</p>
<p>我也会写一下相对应的代码公式</p>
<p>C语言常见运算符优先级</p>
<p>这里a都等于2，b都等于3</p>
<p>测试代码如下：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>优先级</th>
<th>运算符</th>
<th>运算</th>
<th>结合关系</th>
<th>举例</th>
<th>结果</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>+</td>
<td>单目不变</td>
<td>自右向左</td>
<td>a*+b</td>
<td>6</td>
</tr>
<tr>
<td>-9</td>
<td>-</td>
<td>单目取负</td>
<td>自右向左</td>
<td>a*-b</td>
<td>-6</td>
</tr>
<tr>
<td>2</td>
<td>*</td>
<td>乘</td>
<td>自左向右</td>
<td>a*b</td>
<td>6</td>
</tr>
<tr>
<td>2</td>
<td>/</td>
<td>除</td>
<td>自左向右</td>
<td>a/b</td>
<td>0</td>
</tr>
<tr>
<td>2</td>
<td>%</td>
<td>取余</td>
<td>自左向右</td>
<td>a%b</td>
<td>2</td>
</tr>
<tr>
<td>3</td>
<td>+</td>
<td>加</td>
<td>自左向右</td>
<td>a+b</td>
<td>5</td>
</tr>
<tr>
<td>3</td>
<td>-</td>
<td>减</td>
<td>自左向右</td>
<td>a-b</td>
<td>-1</td>
</tr>
<tr>
<td>4</td>
<td>=</td>
<td>赋值</td>
<td>自右向左</td>
<td>a=b</td>
<td>3</td>
</tr>
</tbody>
</table>
</div>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">2</span>, b = <span class="number">3</span>;</span><br><span class="line">	<span class="type">int</span> c = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;a * +b =%d\n&quot;</span>, a * +b);<span class="comment">//a*+b=a*(+b)=a*b</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;a * -b =%d\n&quot;</span>, a * -b);<span class="comment">//a*-b=a*(-b)</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;a * b =%d\n&quot;</span>, a * b);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;a / b =%d\n&quot;</span>, a / b);	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;a % b =%d\n&quot;</span>, a % b);	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot; a + b =%d\n&quot;</span>, a + b);	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;a - b =%d\n&quot;</span>, a - b);	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;a=b =%d\n&quot;</span>, a=b);	<span class="comment">//a=b,a=3</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>赋值也是一个运算符，这个和其他的语言不同</p>
<h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><p>赋值也是运算，也有结果</p>
<p>a=6的结果是a被赋予的值，也就是6</p>
<p>a=b=6-&gt;a=(b=6)</p>
<h1 id="Switch"><a href="#Switch" class="headerlink" title="Switch"></a>Switch</h1><p>Switch里面的Case</p>
<p>有一个很重要的点，Case只是在一开始的时候，起到一个判断的作用，然后就会一直默认的执行下去，所以break是Switch的一个非常好用的小伙伴</p>
<p>举一个例子：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;i);</span><br><span class="line">    <span class="keyword">switch</span> (i) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;我是case1\n&quot;</span>);</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;我是case2\n&quot;</span>);</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;我是case3\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果你输入1的画</p>
<p>就是输出</p>
<figure class="highlight ceylon"><table><tr><td class="code"><pre><span class="line">我是<span class="keyword">case</span><span class="number">1</span></span><br><span class="line">我是<span class="keyword">case</span><span class="number">2</span></span><br><span class="line">我是<span class="keyword">case</span><span class="number">3</span></span><br></pre></td></tr></table></figure>
<p>所以就要加一个Break，然后代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;i);</span><br><span class="line">    <span class="keyword">switch</span> (i) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;我是case1\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;我是case2\n&quot;</span>);</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;我是case3\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>结果如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line">我是case1</span><br></pre></td></tr></table></figure>
<p>一句话总结就是，Switch是没有自己跳出的，Switch，只能进行第一次的跳转，然后就是默认语句执行。如果没有加Break的话，就会这样</p>
<p>还有Goto语句，就是跳出代码的，这个一般不适用，所以不继续说</p>
<h1 id="Goto"><a href="#Goto" class="headerlink" title="Goto"></a>Goto</h1><p>数组</p>
<p>是一种容器，特点是：</p>
<p>1 其中所有的元素都具有相同的数据类型</p>
<p>2 一旦创建，不能改变大小</p>
<p>3 数组中的元素在内存中是连续一次排列的</p>
<p>数组的下标是从0开始编写</p>
<h1 id="不要复用代码，代码复用是质量不好的表现"><a href="#不要复用代码，代码复用是质量不好的表现" class="headerlink" title="不要复用代码，代码复用是质量不好的表现"></a>不要复用代码，代码复用是质量不好的表现</h1><p>C语言的函数最好不要有太多可以返回值的地方</p>
]]></content>
      <categories>
        <category>C</category>
        <category>Mooc</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2024/06/25/%E4%B8%ADM24%E6%98%A5C&amp;Java%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h1 id="7-1-重要的话说三遍"><a href="#7-1-重要的话说三遍" class="headerlink" title="7-1 重要的话说三遍"></a><strong>7-1 重要的话说三遍</strong></h1><p>分数 5</p>
<p>作者 陈越</p>
<p>单位 浙江大学</p>
<p>这道超级简单的题目没有任何输入。</p>
<p>你只需要把这句很重要的话 —— “I’m gonna WIN!”——连续输出三遍就可以了。</p>
<p>注意每遍占一行，除了每行的回车不能有任何多余字符。</p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<h2 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;I&#x27;m gonna WIN!\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;I&#x27;m gonna WIN!\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;I&#x27;m gonna WIN!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-2-I-Love-GPLT"><a href="#7-2-I-Love-GPLT" class="headerlink" title="7-2 I Love GPLT"></a><strong>7-2 I Love GPLT</strong></h1><p>这道超级简单的题目没有任何输入。</p>
<p>你只需要把这句很重要的话 —— <code>I Love GPLT</code> ——竖着输出就可以了。</p>
<p>所谓“竖着输出”，是指每个字符占一行（包括空格），即每行只能有1个字符和回车。</p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<h2 id="代码如下：-1"><a href="#代码如下：-1" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">char</span> a[<span class="number">50</span>]=&#123;<span class="string">&quot;I Love GPLT&quot;</span>&#125;;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(a[i]!=<span class="string">&#x27;\0&#x27;</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,a[i]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-3-输出带框文字"><a href="#7-3-输出带框文字" class="headerlink" title="7-3 输出带框文字"></a><strong>7-3 输出带框文字</strong></h1><p>本题要求编写程序，输出指定的带框文字。</p>
<p>输入格式：</p>
<p>本题无输入</p>
<p>输出格式：</p>
<p>按照下列格式输出带框文字。</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">************</span><br><span class="line">  Welcome</span><br><span class="line">************</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>6</p>
<h2 id="代码如下：-2"><a href="#代码如下：-2" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">char</span> a[<span class="number">50</span>]=&#123;<span class="string">&quot;************&quot;</span>&#125;;</span><br><span class="line">    <span class="type">char</span> b[<span class="number">50</span>]=&#123;<span class="string">&quot;Welcome&quot;</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n  %s\n%s&quot;</span>,a,b,a);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-4-输出菱形图案"><a href="#7-4-输出菱形图案" class="headerlink" title="7-4 输出菱形图案"></a><strong>7-4 输出菱形图案</strong></h1><p>本题要求编写程序，输出指定的由“A”组成的菱形图案。</p>
<p>输入格式：</p>
<p>本题无输入</p>
<p>输出格式：</p>
<p>按照下列格式输出由“A”组成的菱形图案。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">  <span class="selector-tag">A</span></span><br><span class="line"><span class="selector-tag">A</span>   <span class="selector-tag">A</span></span><br><span class="line">  <span class="selector-tag">A</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-3"><a href="#代码如下：-3" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  A\nA   A\n  A&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-5-输出倒三角图案"><a href="#7-5-输出倒三角图案" class="headerlink" title="7-5 输出倒三角图案"></a><strong>7-5 输出倒三角图案</strong></h1><p>本题要求编写程序，输出指定的由“*”组成的倒三角图案。</p>
<p>输入格式:</p>
<p>本题目没有输入。</p>
<p>输出格式:</p>
<p>按照下列格式输出由“*”组成的倒三角图案。</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="comment">* * * *</span></span><br><span class="line"><span class="comment"> * * *</span></span><br><span class="line"><span class="comment">  * *</span></span><br><span class="line"><span class="comment">   *</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<h2 id="代码如下：-4"><a href="#代码如下：-4" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;* * * *\n * * *\n  * *\n   *&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-6-厘米换算英尺英寸"><a href="#7-6-厘米换算英尺英寸" class="headerlink" title="7-6 厘米换算英尺英寸"></a><strong>7-6 厘米换算英尺英寸</strong></h1><p>如果已知英制长度的英尺<em>f<strong>oo</strong>t</em>和英寸<em>in<strong>c</strong>h</em>的值，那么对应的米是(<em>f<strong>oo</strong>t</em>+<em>in<strong>c</strong>h</em>/12)×0.3048。现在，如果用户输入的是厘米数，那么对应英制长度的英尺和英寸是多少呢？别忘了1英尺等于12英寸。</p>
<p>输入格式：</p>
<p>输入在一行中给出1个正整数，单位是厘米。</p>
<p>输出格式：</p>
<p>在一行中输出这个厘米数对应英制长度的英尺和英寸的整数值，中间用空格分开。英寸的值应小于12。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">170</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 6</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-5"><a href="#代码如下：-5" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> height=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;height);</span><br><span class="line">    <span class="type">float</span> m_height=height/<span class="number">100.0</span>;</span><br><span class="line">    <span class="type">float</span>  foot=m_height/<span class="number">0.3048</span>;</span><br><span class="line">    <span class="type">int</span> p_foot=foot,inch=(foot-p_foot)*<span class="number">12</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>,p_foot,inch);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-7-计算摄氏温度"><a href="#7-7-计算摄氏温度" class="headerlink" title="7-7 计算摄氏温度"></a><strong>7-7 计算摄氏温度</strong></h1><p>给定一个华氏温度<em>F</em>，本题要求编写程序，计算对应的摄氏温度<em>C</em>。计算公式：<em>C</em>=5×(<em>F</em>−32)/9。题目保证输入与输出均在整型范围内。</p>
<p>输入格式:</p>
<p>输入在一行中给出一个华氏温度。</p>
<p>输出格式:</p>
<p>在一行中按照格式“Celsius = C”输出对应的摄氏温度C的整数值。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">150</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Celsius = 65</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-6"><a href="#代码如下：-6" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> F=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;F);</span><br><span class="line">    <span class="type">float</span> C=<span class="number">5.0</span>*(F<span class="number">-32</span>)/<span class="number">9.0</span>;</span><br><span class="line">    <span class="type">int</span> True_C=C;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Celsius = %d&quot;</span>,True_C);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-8-是不是太胖了"><a href="#7-8-是不是太胖了" class="headerlink" title="7-8 是不是太胖了"></a><strong>7-8 是不是太胖了</strong></h1><p>据说一个人的标准体重应该是其身高（单位：厘米）减去100、再乘以0.9所得到的公斤数。已知市斤的数值是公斤数值的两倍。现给定某人身高，请你计算其标准体重应该是多少？（顺便也悄悄给自己算一下吧……）</p>
<p>输入格式：</p>
<p>输入第一行给出一个正整数<code>H</code>（100 &lt; H ≤ 300），为某人身高。</p>
<p>输出格式：</p>
<p>在一行中输出对应的标准体重，单位为市斤，保留小数点后1位。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">169</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">124.2</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-7"><a href="#代码如下：-7" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> height=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;height);</span><br><span class="line">    <span class="type">float</span> result=(height<span class="number">-100</span>)*<span class="number">0.9</span>*<span class="number">2.0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,result);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-9-求整数均值"><a href="#7-9-求整数均值" class="headerlink" title="7-9 求整数均值"></a><strong>7-9 求整数均值</strong></h1><p>本题要求编写程序，计算4个整数的和与平均值。题目保证输入与输出均在整型范围内。</p>
<p>输入格式:</p>
<p>输入在一行中给出4个整数，其间以空格分隔。</p>
<p>输出格式:</p>
<p>在一行中按照格式“Sum = 和; Average = 平均值”顺序输出和与平均值，其中平均值精确到小数点后一位。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 2 3 4</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Sum = 10; Average = 2.5</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-8"><a href="#代码如下：-8" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">0</span>,b=<span class="number">0</span>,c=<span class="number">0</span>,d=<span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">float</span> average=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d %d&quot;</span>,&amp;a,&amp;b,&amp;c,&amp;d);</span><br><span class="line">    sum=a+b+c+d;</span><br><span class="line">    average=sum/<span class="number">4.0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Sum = %d; Average = %.1lf&quot;</span>,sum,average);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-10-算术入门之加减乘除"><a href="#7-10-算术入门之加减乘除" class="headerlink" title="7-10 算术入门之加减乘除"></a><strong>7-10 算术入门之加减乘除</strong></h1><p>对于输入的两个整数，按照要求输出其和差积商。</p>
<p>输入格式:</p>
<p>在一行内输入两个不超过100的非负整数a和b，中间以一个空格间隔，且保证b不为0。</p>
<p>输出格式:</p>
<p>共四行，格式是：</p>
<figure class="highlight inform7"><table><tr><td class="code"><pre><span class="line"><span class="comment">[a]</span> + <span class="comment">[b]</span> = <span class="comment">[a+b]</span></span><br><span class="line"><span class="comment">[a]</span> - <span class="comment">[b]</span> = <span class="comment">[a-b]</span></span><br><span class="line"><span class="comment">[a]</span> * <span class="comment">[b]</span> = <span class="comment">[a*b]</span></span><br><span class="line"><span class="comment">[a]</span> / <span class="comment">[b]</span> = <span class="comment">[a/b]</span></span><br></pre></td></tr></table></figure>
<p>其中，带有方括号的内容（如<code>[a]</code>、<code>[b]</code>、<code>[a+b]</code>等）表示相应整数或运算结果的值，在输出时要用实际的值代替。</p>
<p>并且：如果a能够被b整除，那么a/b应输出为整数格式，否则a/b输出为带两位小数的格式。</p>
<p><strong>提示：</strong>注意表达式中的空格。</p>
<p>输入样例1:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6 3</span><br></pre></td></tr></table></figure>
<p>输出样例1:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6 + 3 = 9</span><br><span class="line">6 - 3 = 3</span><br><span class="line">6 * 3 = 18</span><br><span class="line">6 / 3 = 2</span><br></pre></td></tr></table></figure>
<p>输入样例2:</p>
<figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">8 </span><span class="number">6</span></span><br></pre></td></tr></table></figure>
<p>输出样例2:</p>
<figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">8 </span>+ <span class="number">6</span> = <span class="number">14</span></span><br><span class="line"><span class="symbol">8 </span>- <span class="number">6</span> = <span class="number">2</span></span><br><span class="line"><span class="symbol">8 </span>* <span class="number">6</span> = <span class="number">48</span></span><br><span class="line"><span class="symbol">8 </span>/ <span class="number">6</span> = <span class="number">1.33</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-9"><a href="#代码如下：-9" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">0</span>,b=<span class="number">0</span>;</span><br><span class="line">    <span class="type">float</span> c=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d + %d = %d\n%d - %d = %d\n%d * %d = %d\n&quot;</span>,a,b,a+b,a,b,a-b,a,b,a*b);</span><br><span class="line">    <span class="keyword">if</span>(a%b==<span class="number">0</span>)  <span class="built_in">printf</span>(<span class="string">&quot;%d / %d = %d&quot;</span>,a,b,a/b);</span><br><span class="line">    <span class="keyword">else</span>    <span class="built_in">printf</span>(<span class="string">&quot;%d / %d = %.2lf&quot;</span>,a,b,a*<span class="number">1.0</span>/b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-11-计算平均分"><a href="#7-11-计算平均分" class="headerlink" title="7-11 计算平均分"></a><strong>7-11 计算平均分</strong></h1><p>已知某位学生的数学、英语和计算机课程的成绩分别是87分、72分和93分，求该生3门课程的平均成绩（结果按整型输出）。</p>
<p>输入格式：</p>
<p>本题无输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
<p>输出格式：</p>
<p>按照下列格式输出结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">math = 87, eng = 72, comp = 93, average = 计算所得的平均成绩</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-10"><a href="#代码如下：-10" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;math = 87, eng = 72, comp = 93, average = %d&quot;</span>,(<span class="number">87</span>+<span class="number">72</span>+<span class="number">93</span>)/<span class="number">3</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-12-日期格式化"><a href="#7-12-日期格式化" class="headerlink" title="7-12 日期格式化"></a><strong>7-12 日期格式化</strong></h1><p>世界上不同国家有不同的写日期的习惯。比如美国人习惯写成“月-日-年”，而中国人习惯写成“年-月-日”。下面请你写个程序，自动把读入的美国格式的日期改写成中国习惯的日期。</p>
<p>输入格式：</p>
<p>输入在一行中按照“mm-dd-yyyy”的格式给出月、日、年。题目保证给出的日期是1900年元旦至今合法的日期。</p>
<p>输出格式：</p>
<p>在一行中按照“yyyy-mm-dd”的格式给出年、月、日。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">03-15-2017</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2017-03-15</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-11"><a href="#代码如下：-11" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> mm=<span class="number">0</span>,dd=<span class="number">0</span>,yyyy=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d-%d-%d&quot;</span>,&amp;mm,&amp;dd,&amp;yyyy);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d-%02d-%02d&quot;</span>,yyyy,mm,dd);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-13-后天"><a href="#7-13-后天" class="headerlink" title="7-13 后天"></a><strong>7-13 后天</strong></h1><p>如果今天是星期三，后天就是星期五；如果今天是星期六，后天就是星期一。我们用数字1到7对应星期一到星期日。给定某一天，请你输出那天的“后天”是星期几。</p>
<p>输入格式：</p>
<p>输入第一行给出一个正整数<code>D</code>（1 ≤ <code>D</code> ≤ 7），代表星期里的某一天。</p>
<p>输出格式：</p>
<p>在一行中输出<code>D</code>天的后天是星期几。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-12"><a href="#代码如下：-12" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> m=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m);</span><br><span class="line">    <span class="keyword">if</span>((m+<span class="number">2</span>)%<span class="number">7</span>==<span class="number">0</span>)  <span class="built_in">printf</span>(<span class="string">&quot;7&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span>    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,(m+<span class="number">2</span>)%<span class="number">7</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-14-然后是几点"><a href="#7-14-然后是几点" class="headerlink" title="7-14 然后是几点"></a><strong>7-14 然后是几点</strong></h1><p>有时候人们用四位数字表示一个时间，比如 <code>1106</code> 表示 11 点零 6 分。现在，你的程序要根据起始时间和流逝的时间计算出终止时间。</p>
<p>读入两个数字，第一个数字以这样的四位数字表示当前时间，第二个数字表示分钟数，计算当前时间经过那么多分钟后是几点，结果也表示为四位数字。当小时为个位数时，没有前导的零，例如 5 点 30 分表示为 <code>530</code>；0 点 30 分表示为 <code>030</code>。注意，第二个数字表示的分钟数可能超过 60，也可能是负数。</p>
<p>输入格式：</p>
<p>输入在一行中给出 2 个整数，分别是四位数字表示的起始时间、以及流逝的分钟数，其间以空格分隔。注意：在起始时间中，当小时为个位数时，没有前导的零，即 5 点 30 分表示为 <code>530</code>；0 点 30 分表示为 <code>030</code>。流逝的分钟数可能超过 60，也可能是负数。</p>
<p>输出格式：</p>
<p>输出不多于四位数字表示的终止时间，当小时为个位数时，没有前导的零。题目保证起始时间和终止时间在同一天内。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1120 110</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1310</span><br></pre></td></tr></table></figure>
<p><strong>鸣谢燕山大学穆运峰老师、用户任钰补充数据！</strong></p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-13"><a href="#代码如下：-13" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> hh = <span class="number">0</span>, mm = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> beg = <span class="number">0</span>, end = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;beg, &amp;end);</span><br><span class="line">    <span class="type">int</span> index_h = <span class="number">1</span>, index_m = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">            mm = mm + (beg % <span class="number">10</span>) * index_m;</span><br><span class="line">            index_m *= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            hh = hh + (beg % <span class="number">10</span>) * index_h;</span><br><span class="line">            index_h *= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        beg /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mm + end &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="built_in">abs</span> = -(mm + end);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">abs</span> % <span class="number">60</span> == <span class="number">0</span>)  hh = hh - <span class="built_in">abs</span> / <span class="number">60</span>;</span><br><span class="line">        <span class="keyword">else</span> hh = hh - <span class="built_in">abs</span> / <span class="number">60</span> - <span class="number">1</span>;</span><br><span class="line">        mm = <span class="number">60</span> - <span class="built_in">abs</span> % <span class="number">60</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (mm + end &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="built_in">abs</span> = (mm + end);</span><br><span class="line">        hh = hh + <span class="built_in">abs</span> / <span class="number">60</span>;</span><br><span class="line">        mm = <span class="built_in">abs</span> % <span class="number">60</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        mm = mm + end;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%03d&quot;</span>, mm + hh * <span class="number">100</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-15-BCD解密"><a href="#7-15-BCD解密" class="headerlink" title="7-15 BCD解密"></a><strong>7-15 BCD解密</strong></h1><p>BCD数是用一个字节来表达两位十进制的数，每四个比特表示一位。所以如果一个BCD数的十六进制是0x12，它表达的就是十进制的12。但是小明没学过BCD，把所有的BCD数都当作二进制数转换成十进制输出了。于是BCD的0x12被输出成了十进制的18了！</p>
<p>现在，你的程序要读入这个错误的十进制数，然后输出正确的十进制数。提示：你可以把18转换回0x12，然后再转换回12。</p>
<p>输入格式：</p>
<p>输入在一行中给出一个[0, 153]范围内的正整数，保证能转换回有效的BCD数，也就是说这个整数转换成十六进制时不会出现A-F的数字。</p>
<p>输出格式：</p>
<p>输出对应的十进制数。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">18</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-14"><a href="#代码如下：-14" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> result = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;result);</span><br><span class="line">	<span class="type">int</span> p = <span class="number">0</span>,index=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span> (result) &#123;</span><br><span class="line">		<span class="type">int</span> t = result % <span class="number">16</span> * index;</span><br><span class="line">		p += t;</span><br><span class="line">		index *= <span class="number">10</span>;</span><br><span class="line">		result /= <span class="number">16</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, p);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-16-计算符号函数的值"><a href="#7-16-计算符号函数的值" class="headerlink" title="7-16 计算符号函数的值"></a><strong>7-16 计算符号函数的值</strong></h1><p>对于任一整数<em>n</em>，符号函数<em>s<strong>i</strong>g**n</em>(<em>n</em>)的定义如下：</p>
<p>记录</p>
<p><img src="http://image.camilleferros.top/Image7_16.jpg" alt=""></p>
<p>请编写程序计算该函数对任一输入整数的值。</p>
<p>输入格式:</p>
<p>输入在一行中给出整数n。</p>
<p>输出格式:</p>
<p>在一行中按照格式“sign(n) = 函数值”输出该整数n对应的函数值。</p>
<p>输入样例1:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure>
<p>输出样例1:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sign(10) = 1</span><br></pre></td></tr></table></figure>
<p>输入样例2:</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure>
<p>输出样例2:</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">sign</span><span class="params">(<span class="number">0</span>)</span></span> = <span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>输入样例3:</p>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">-98</span></span><br></pre></td></tr></table></figure>
<p>输出样例3:</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">sign</span><span class="params">(-<span class="number">98</span>)</span></span> = -<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-15"><a href="#代码如下：-15" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> p = <span class="number">0</span>,t=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p);</span><br><span class="line">	t = p;</span><br><span class="line">	<span class="keyword">if</span> (p &lt; <span class="number">0</span>)	p = <span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (p &gt; <span class="number">0</span>)	p = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span> p = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;sign(%d) = %d&quot;</span>,t,p);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-17-成绩转换"><a href="#7-17-成绩转换" class="headerlink" title="7-17 成绩转换"></a><strong>7-17 成绩转换</strong></h1><p>本题要求编写程序将一个百分制成绩转换为五分制成绩。转换规则：</p>
<ul>
<li>大于等于90分为A；</li>
<li>小于90且大于等于80为B；</li>
<li>小于80且大于等于70为C；</li>
<li>小于70且大于等于60为D；</li>
<li>小于60为E。</li>
</ul>
<p>输入格式:</p>
<p>输入在一行中给出一个整数的百分制成绩。</p>
<p>输出格式:</p>
<p>在一行中输出对应的五分制成绩。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">90</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-16"><a href="#代码如下：-16" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> p = <span class="number">0</span>,t=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p);</span><br><span class="line">	<span class="keyword">if</span> (p &gt;= <span class="number">90</span>)	<span class="built_in">printf</span>(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (p &lt; <span class="number">90</span> &amp;&amp; p &gt;= <span class="number">80</span>)	<span class="built_in">printf</span>(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (p &lt; <span class="number">80</span> &amp;&amp; p&gt;=<span class="number">70</span>)	<span class="built_in">printf</span>(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (p &lt; <span class="number">70</span> &amp;&amp; p&gt;=<span class="number">60</span>)	<span class="built_in">printf</span>(<span class="string">&quot;D&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;E&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-18-出租车计价"><a href="#7-18-出租车计价" class="headerlink" title="7-18 出租车计价"></a><strong>7-18 出租车计价</strong></h1><p>本题要求根据某城市普通出租车收费标准编写程序进行车费计算。具体标准如下：</p>
<ul>
<li>起步里程为3公里，起步费10元；</li>
<li>超起步里程后10公里内，每公里2元；</li>
<li>超过10公里以上的部分加收50%的回空补贴费，即每公里3元；</li>
<li>营运过程中，因路阻及乘客要求临时停车的，按每5分钟2元计收（不足5分钟则不收费）。</li>
</ul>
<p>输入格式:</p>
<p>输入在一行中给出输入行驶里程（单位为公里，精确到小数点后1位）与等待时间（整数，单位为分钟），其间以空格分隔。</p>
<p>输出格式:</p>
<p>在一行中输出乘客应支付的车费（单位为元），结果四舍五入，保留到元。</p>
<p>输入样例1:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2.6 2</span><br></pre></td></tr></table></figure>
<p>输出样例1:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure>
<p>输入样例2:</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">5</span>.<span class="number">1</span> <span class="number">4</span></span><br></pre></td></tr></table></figure>
<p>输出样例2:</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">14</span><br></pre></td></tr></table></figure>
<p>输入样例3:</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">12</span>.<span class="number">5</span> <span class="number">9</span></span><br></pre></td></tr></table></figure>
<p>输出样例3:</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">34</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-17"><a href="#代码如下：-17" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">float</span> road = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> mm = <span class="number">0</span>, pirce = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%f %d&quot;</span>, &amp;road, &amp;mm);</span><br><span class="line">	<span class="keyword">if</span> (mm &gt;= <span class="number">5</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span> (mm % <span class="number">5</span> == <span class="number">0</span>)	pirce = mm / <span class="number">5</span> * <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">else</span>	pirce = mm / <span class="number">5</span> * <span class="number">2</span> + <span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	pirce += <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">if</span> (road &gt; <span class="number">3</span> &amp;&amp; road &lt;= <span class="number">10</span>) &#123;</span><br><span class="line">		road -= <span class="number">3</span>;</span><br><span class="line">		road = (<span class="type">int</span>)road;</span><br><span class="line">		pirce = pirce + road * <span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (road &gt; <span class="number">10</span>) &#123;</span><br><span class="line">		road -= <span class="number">10</span>;</span><br><span class="line">		pirce += <span class="number">14</span>;</span><br><span class="line">		road = (<span class="type">int</span>)road;</span><br><span class="line">		pirce = pirce + road * <span class="number">3</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, pirce);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-19-计算天数"><a href="#7-19-计算天数" class="headerlink" title="7-19 计算天数"></a><strong>7-19 计算天数</strong></h1><p>本题要求编写程序计算某年某月某日是该年中的第几天。</p>
<p>输入格式:</p>
<p>输入在一行中按照格式“yyyy/mm/dd”（即“年/月/日”）给出日期。注意：闰年的判别条件是该年年份能被4整除但不能被100整除、或者能被400整除。闰年的2月有29天。</p>
<p>输出格式:</p>
<p>在一行输出日期是该年中的第几天。</p>
<p>输入样例1:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2009/03/02</span><br></pre></td></tr></table></figure>
<p>输出样例1:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">61</span><br></pre></td></tr></table></figure>
<p>输入样例2:</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">2000</span>/<span class="number">03</span>/<span class="number">02</span></span><br></pre></td></tr></table></figure>
<p>输出样例2:</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">62</span><br></pre></td></tr></table></figure>
<p><strong>鸣谢湖北汽车工业学院袁科老师、用户潘明智补充数据！</strong></p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-18"><a href="#代码如下：-18" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> mm[] = &#123; <span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span> &#125;;</span><br><span class="line">	<span class="type">int</span> y = <span class="number">0</span>, m = <span class="number">0</span>, d = <span class="number">0</span>,res=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d/%d/%d&quot;</span>, &amp;y, &amp;m, &amp;d);</span><br><span class="line">	<span class="keyword">if</span> ((y % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; y % <span class="number">100</span> != <span class="number">0</span>) || y % <span class="number">400</span> == <span class="number">0</span>)	mm[<span class="number">1</span>] = <span class="number">29</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;m - <span class="number">1</span>; i++) &#123;</span><br><span class="line">		res += mm[i];</span><br><span class="line">	&#125;</span><br><span class="line">	res += d;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, res);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-20-简单计算器"><a href="#7-20-简单计算器" class="headerlink" title="7-20 简单计算器"></a><strong>7-20 简单计算器</strong></h1><p>模拟简单运算器的工作。假设计算器只能进行加减乘除运算，运算数和结果都是整数，四种运算符的优先级相同，按从左到右的顺序计算。</p>
<p>输入格式:</p>
<p>输入在一行中给出一个四则运算算式，没有空格，且至少有一个操作数。遇等号”=”说明输入结束。</p>
<p>输出格式:</p>
<p>在一行中输出算式的运算结果，或者如果除法分母为0或有非法运算符，则输出错误信息“ERROR”。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1+2*10-10/2=</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<h2 id="代码如下：-19"><a href="#代码如下：-19" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n1, n2;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n1); <span class="comment">// 不管怎样先输入一个数</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;ch);</span><br><span class="line">        <span class="keyword">if</span>(ch==<span class="string">&#x27;=&#x27;</span>)&#123; </span><br><span class="line">        <span class="comment">// 如果输入的操作符为等号则直接输出而不必进行后续操作了</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, n1);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">// 否则继续输入第二个操作数</span></span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ch==<span class="string">&#x27;+&#x27;</span>)</span><br><span class="line">            n1 += n2;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">            n1 -= n2;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ch==<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">            n1 *= n2;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ch==<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(n2==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;ERROR\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                n1 /= n2;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;ERROR\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-21-超速判断"><a href="#7-21-超速判断" class="headerlink" title="7-21 超速判断"></a><strong>7-21 超速判断</strong></h1><p>模拟交通警察的雷达测速仪。输入汽车速度，如果速度超出60 mph，则显示“Speeding”，否则显示“OK”。</p>
<p>输入格式：</p>
<p>输入在一行中给出1个不超过500的非负整数，即雷达测到的车速。</p>
<p>输出格式：</p>
<p>在一行中输出测速仪显示结果，格式为：<code>Speed: V - S</code>，其中<code>V</code>是车速，<code>S</code>或者是<code>Speeding</code>、或者是<code>OK</code>。</p>
<p>输入样例1：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">40</span><br></pre></td></tr></table></figure>
<p>输出样例1：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Speed: 40 - OK</span><br></pre></td></tr></table></figure>
<p>输入样例2：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">75</span><br></pre></td></tr></table></figure>
<p>输出样例2：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Speed</span>: <span class="number">75</span> - Speeding</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-20"><a href="#代码如下：-20" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> speed = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;speed);</span><br><span class="line">	<span class="keyword">if</span> (speed &gt; <span class="number">60</span>)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Speed: %d - Speeding&quot;</span>, speed);</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Speed: %d - OK&quot;</span>, speed);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-22-用天平找小球"><a href="#7-22-用天平找小球" class="headerlink" title="7-22 用天平找小球"></a><strong>7-22 用天平找小球</strong></h1><p>三个球A、B、C，大小形状相同且其中有一个球与其他球重量不同。要求找出这个不一样的球。</p>
<p>输入格式：</p>
<p>输入在一行中给出3个正整数，顺序对应球A、B、C的重量。</p>
<p>输出格式：</p>
<p>在一行中输出唯一的那个不一样的球。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 1 2</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-21"><a href="#代码如下：-21" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>, c = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">	<span class="keyword">if</span> (a == b)	<span class="built_in">printf</span>(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (a == c)	<span class="built_in">printf</span>(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-23-分段计算居民水费"><a href="#7-23-分段计算居民水费" class="headerlink" title="7-23 分段计算居民水费"></a><strong>7-23 分段计算居民水费</strong></h1><p>为鼓励居民节约用水，自来水公司采取按用水量阶梯式计价的办法，居民应交水费<em>y</em>（元）与月用水量<em>x</em>（吨）相关：当<em>x</em>不超过15吨时，<em>y</em>=4<em>x</em>/3；超过后，<em>y</em>=2.5<em>x</em>−17.5。请编写程序实现水费的计算。</p>
<p>输入格式：</p>
<p>输入在一行中给出非负实数<em>x</em>。</p>
<p>输出格式：</p>
<p>在一行输出应交的水费，精确到小数点后2位。</p>
<p>输入样例1：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure>
<p>输出样例1：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">16.00</span><br></pre></td></tr></table></figure>
<p>输入样例2：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">16</span><br></pre></td></tr></table></figure>
<p>输出样例2：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">22</span>.<span class="number">50</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<h2 id="代码如下：-22"><a href="#代码如下：-22" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//当x不超过15吨时，y=4x/3；超过后，y=2.5x−17.5</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">	<span class="type">float</span> y = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">	<span class="keyword">if</span> (x &lt;= <span class="number">15</span>)	y = <span class="number">4</span> * x / <span class="number">3.0</span>;</span><br><span class="line">	<span class="keyword">else</span>  y = x * <span class="number">2.5</span> - <span class="number">17.5</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>, y);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-24-猜数字游戏"><a href="#7-24-猜数字游戏" class="headerlink" title="7-24 猜数字游戏"></a><strong>7-24 猜数字游戏</strong></h1><p>猜数字游戏是令游戏机随机产生一个100以内的正整数，用户输入一个数对其进行猜测，需要你编写程序自动对其与随机产生的被猜数进行比较，并提示大了（“Too big”），还是小了（“Too small”），相等表示猜到了。如果猜到，则结束程序。程序还要求统计猜的次数，如果1次猜出该数，提示“Bingo!”；如果3次以内猜到该数，则提示“Lucky You!”；如果超过3次但是在N（&gt;3）次以内（包括第N次）猜到该数，则提示“Good Guess!”；如果超过N次都没有猜到，则提示“Game Over”，并结束程序。如果在到达N次之前，用户输入了一个负数，也输出“Game Over”，并结束程序。</p>
<p>输入格式:</p>
<p>输入第一行中给出两个不超过100的正整数，分别是游戏机产生的随机数、以及猜测的最大次数N。最后每行给出一个用户的输入，直到出现负数为止。</p>
<p>输出格式:</p>
<p>在一行中输出每次猜测相应的结果，直到输出猜对的结果或“Game Over”则结束。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">58 4</span><br><span class="line">70</span><br><span class="line">50</span><br><span class="line">56</span><br><span class="line">58</span><br><span class="line">60</span><br><span class="line">-2</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Too big</span><br><span class="line">Too small</span><br><span class="line">Too small</span><br><span class="line">Good Guess!</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-23"><a href="#代码如下：-23" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">/*Too big</span></span><br><span class="line"><span class="comment">Too small</span></span><br><span class="line"><span class="comment">Too small</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> num = <span class="number">0</span>, frequency = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> gres = <span class="number">0</span>, gresfre = <span class="number">0</span>, flag = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;num, &amp;frequency);</span><br><span class="line">	<span class="keyword">while</span> (gresfre&lt;=frequency) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;gres);</span><br><span class="line">		gresfre++;</span><br><span class="line">		<span class="keyword">if</span> (gres &lt; <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Game Over&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (gres == num) &#123;</span><br><span class="line">			flag = <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (gres &lt; num)	<span class="built_in">printf</span>(<span class="string">&quot;Too small\n&quot;</span>);</span><br><span class="line">		<span class="keyword">else</span>  <span class="built_in">printf</span>(<span class="string">&quot;Too big\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (gresfre &gt; frequency) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Game Over&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (gres == <span class="number">1</span>)	<span class="built_in">printf</span>(<span class="string">&quot;Bingo!&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (gresfre &lt;= <span class="number">3</span>)	<span class="built_in">printf</span>(<span class="string">&quot;Lucky You!&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (flag == <span class="number">1</span>)	<span class="built_in">printf</span>(<span class="string">&quot;Good Guess!&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;Game Over&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-25-求奇数和"><a href="#7-25-求奇数和" class="headerlink" title="7-25 求奇数和"></a><strong>7-25 求奇数和</strong></h1><p>本题要求计算给定的一系列正整数中奇数的和。</p>
<h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出一系列正整数，其间以空格分隔。当读到零或负整数时，表示输入结束，该数字不要处理。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中输出正整数序列中奇数的和。</p>
<h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8 7 4 3 70 5 6 101 -1</span><br></pre></td></tr></table></figure>
<h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">116</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-24"><a href="#代码如下：-24" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> res = <span class="number">0</span>, a = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line">	<span class="keyword">while</span> (a &gt; <span class="number">0</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span> (a % <span class="number">2</span> != <span class="number">0</span>)	res +=a;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, res);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-26-最大公约数和最小公倍数"><a href="#7-26-最大公约数和最小公倍数" class="headerlink" title="7-26 最大公约数和最小公倍数"></a><strong>7-26 最大公约数和最小公倍数</strong></h1><p>本题要求两个给定正整数的最大公约数和最小公倍数。</p>
<h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出两个正整数M和N（≤1000）。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中顺序输出M和N的最大公约数和最小公倍数，两数字间以1空格分隔。</p>
<h3 id="输入样例-1"><a href="#输入样例-1" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">511 292</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-1"><a href="#输出样例-1" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">73 2044</span><br></pre></td></tr></table></figure>
<p><strong>鸣谢安阳师范学院段晓云老师和软件工程五班李富龙同学补充测试数据！</strong></p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-25"><a href="#代码如下：-25" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> M = <span class="number">0</span>, N = <span class="number">0</span>, gcd = <span class="number">0</span>, lcm = <span class="number">0</span>;</span><br><span class="line">	<span class="comment">//gcd是最大公约数，lcm是最小公倍数</span></span><br><span class="line">	<span class="comment">//greatest common measure   lowest common multiple</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;M, &amp;N);</span><br><span class="line">	<span class="keyword">if</span> (M &gt; N) &#123;</span><br><span class="line">		gcd = N;</span><br><span class="line">		lcm = M;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		gcd = M;</span><br><span class="line">		lcm = N;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = gcd; i &gt;= <span class="number">1</span>; --i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (M % i == <span class="number">0</span> &amp;&amp; N % i == <span class="number">0</span>) &#123;</span><br><span class="line">			gcd = i;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = lcm; i &lt;= M * N; ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (i % M == <span class="number">0</span> &amp;&amp; i % N == <span class="number">0</span>) &#123;</span><br><span class="line">			lcm = i;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, gcd, lcm);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-27-兔子繁衍问题"><a href="#7-27-兔子繁衍问题" class="headerlink" title="7-27 兔子繁衍问题"></a><strong>7-27 兔子繁衍问题</strong></h1><p>一对兔子，从出生后第3个月起每个月都生一对兔子。小兔子长到第3个月后每个月又生一对兔子。假如兔子都不死，请问第1个月出生的一对兔子，至少需要繁衍到第几个月时兔子总数才可以达到<em>N</em>对？</p>
<p>输入格式:</p>
<p>输入在一行中给出一个不超过10000的正整数<em>N</em>。</p>
<p>输出格式:</p>
<p>在一行中输出兔子总数达到<em>N</em>最少需要的月数。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">30</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-26"><a href="#代码如下：-26" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">1</span>, temp, N, month = <span class="number">1</span>;<span class="comment">//b 代表累加的和（总兔子的只数），初始值为1</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (b &lt; N) &#123;</span><br><span class="line">        month++;</span><br><span class="line">        temp = a;<span class="comment">//a 表示新生的兔子对数</span></span><br><span class="line">        a = b;</span><br><span class="line">        b = b + temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, month);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-28-求整数的位数及各位数字之和"><a href="#7-28-求整数的位数及各位数字之和" class="headerlink" title="7-28 求整数的位数及各位数字之和"></a><strong>7-28 求整数的位数及各位数字之和</strong></h1><p>对于给定的正整数N，求它的位数及其各位数字之和。</p>
<p>输入格式：</p>
<p>输入在一行中给出一个不超过109的正整数N。</p>
<p>输出格式：</p>
<p>在一行中输出N的位数及其各位数字之和，中间用一个空格隔开。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">321</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 6</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-27"><a href="#代码如下：-27" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> bit = <span class="number">0</span>, bitsum = <span class="number">0</span>, num = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line">    <span class="keyword">while</span> (num) &#123;</span><br><span class="line">        bitsum += num % <span class="number">10</span>;</span><br><span class="line">        num /= <span class="number">10</span>;</span><br><span class="line">        bit++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, bit, bitsum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-29-二分法求多项式单根"><a href="#7-29-二分法求多项式单根" class="headerlink" title="7-29 二分法求多项式单根"></a><strong>7-29 二分法求多项式单根</strong></h1><p>二分法求函数根的原理为：如果连续函数<em>f</em>(<em>x</em>)在区间[<em>a</em>,<em>b</em>]的两个端点取值异号，即<em>f</em>(<em>a</em>)<em>f</em>(<em>b</em>)&lt;0，则它在这个区间内至少存在1个根<em>r</em>，即<em>f</em>(<em>r</em>)=0。</p>
<p>二分法的步骤为：</p>
<ul>
<li>检查区间长度，如果小于给定阈值，则停止，输出区间中点(<em>a</em>+<em>b</em>)/2；否则</li>
<li>如果<em>f</em>(<em>a</em>)<em>f</em>(<em>b</em>)&lt;0，则计算中点的值<em>f</em>((<em>a</em>+<em>b</em>)/2)；</li>
<li>如果<em>f</em>((<em>a</em>+<em>b</em>)/2)正好为0，则(<em>a</em>+<em>b</em>)/2就是要求的根；否则</li>
<li>如果<em>f</em>((<em>a</em>+<em>b</em>)/2)与<em>f</em>(<em>a</em>)同号，则说明根在区间[(<em>a</em>+<em>b</em>)/2,<em>b</em>]，令<em>a</em>=(<em>a</em>+<em>b</em>)/2，重复循环；</li>
<li>如果<em>f</em>((<em>a</em>+<em>b</em>)/2)与<em>f</em>(<em>b</em>)同号，则说明根在区间[<em>a</em>,(<em>a</em>+<em>b</em>)/2]，令<em>b</em>=(<em>a</em>+<em>b</em>)/2，重复循环。</li>
</ul>
<p>本题目要求编写程序，计算给定3阶多项式<em>f</em>(<em>x</em>)=<em>a</em>3<em>x</em>3+<em>a</em>2<em>x</em>2+<em>a</em>1<em>x</em>+<em>a</em>0在给定区间[<em>a</em>,<em>b</em>]内的根。</p>
<p>输入格式：</p>
<p>输入在第1行中顺序给出多项式的4个系数<em>a</em>3、<em>a</em>2、<em>a</em>1、<em>a</em>0，在第2行中顺序给出区间端点<em>a</em>和<em>b</em>。题目保证多项式在给定区间内存在唯一单根。</p>
<p>输出格式：</p>
<p>在一行中输出该多项式在该区间内的根，精确到小数点后2位。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 -1 -3 1</span><br><span class="line">-0.5 0.5</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0.33</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-28"><a href="#代码如下：-28" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//double a3 = 0, a2 = 0, a1 = 0, a = 0;</span></span><br><span class="line"><span class="type">double</span> <span class="title function_">funct</span><span class="params">(<span class="type">double</span> a3, <span class="type">double</span> a2, <span class="type">double</span> a1, <span class="type">double</span> a, <span class="type">double</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a3 * x * x * x + a2 * x * x + a1 * x + a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">double</span> left = <span class="number">0</span>, right = <span class="number">0</span>, mid = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> a3 = <span class="number">0</span>, a2 = <span class="number">0</span>, a1 = <span class="number">0</span>, a = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf %lf %lf %lf %lf&quot;</span>, &amp;a3, &amp;a2, &amp;a1, &amp;a, &amp;left, &amp;right);</span><br><span class="line">    <span class="keyword">while</span> (right - left &gt;= <span class="number">0.001</span> &amp;&amp; funct(a3,a2,a1,a,left) * funct(a3,a2,a1,a,right) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//right-left&gt;=0.001，就是我们人为设置的极限</span></span><br><span class="line">        <span class="keyword">if</span> (funct(a3,a2,a1,a,left) == <span class="number">0</span>) &#123;</span><br><span class="line">            mid = left;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (funct(a3,a2,a1,a,right) == <span class="number">0</span>) &#123;</span><br><span class="line">            mid = right;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mid = (left + right) / <span class="number">2.0</span>;</span><br><span class="line">        <span class="comment">//if (funct(a3,a2,a1,a,a3, a2, a1, a, mid) == 0) &#123;</span></span><br><span class="line">        <span class="comment">//    printf(&quot;%0.2f&quot;, mid);</span></span><br><span class="line">        <span class="comment">//    return 0;</span></span><br><span class="line">        <span class="comment">//&#125;</span></span><br><span class="line">        <span class="keyword">if</span> (funct(a3,a2,a1,a,left) * funct(a3,a2,a1,a,mid) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            left = mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>  right = mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>, mid);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-30-念数字"><a href="#7-30-念数字" class="headerlink" title="7-30 念数字"></a><strong>7-30 念数字</strong></h1><p>输入一个整数，输出每个数字对应的拼音。当整数为负数时，先输出<code>fu</code>字。十个数字对应的拼音如下：</p>
<figure class="highlight ldif"><table><tr><td class="code"><pre><span class="line"><span class="attribute">0</span>: ling</span><br><span class="line"><span class="attribute">1</span>: yi</span><br><span class="line"><span class="attribute">2</span>: er</span><br><span class="line"><span class="attribute">3</span>: san</span><br><span class="line"><span class="attribute">4</span>: si</span><br><span class="line"><span class="attribute">5</span>: wu</span><br><span class="line"><span class="attribute">6</span>: liu</span><br><span class="line"><span class="attribute">7</span>: qi</span><br><span class="line"><span class="attribute">8</span>: ba</span><br><span class="line"><span class="attribute">9</span>: jiu</span><br></pre></td></tr></table></figure>
<p>输入格式：</p>
<p>输入在一行中给出一个整数，如：<code>1234</code>。</p>
<p><strong>提示：整数包括负数、零和正数。</strong></p>
<p>输出格式：</p>
<p>在一行中输出这个整数对应的拼音，每个数字的拼音之间用空格分开，行末没有最后的空格。如<br><code>yi er san si</code>。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-600</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fu liu ling ling</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-29"><a href="#代码如下：-29" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">dit</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line">    <span class="type">int</span> ditnum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (num) &#123;</span><br><span class="line">        num /= <span class="number">10</span>;</span><br><span class="line">        ditnum++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ditnum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">Mi</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num<span class="number">-1</span>; ++i) &#123;</span><br><span class="line">        res *= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>, ditnum = <span class="number">0</span>,flag=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line">    <span class="keyword">if</span> (num &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;fu &quot;</span>);</span><br><span class="line">        num = -num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (num == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ling&quot;</span>);</span><br><span class="line">        <span class="comment">//return 0;       //这个return ，是为了和1230这种情况冲突，所以提前就结束了</span></span><br><span class="line">    &#125;</span><br><span class="line">    ditnum = dit(num);</span><br><span class="line">    <span class="keyword">while</span> (ditnum) &#123;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">0</span>) flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">0</span>)  res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            res = num / Mi(ditnum);</span><br><span class="line">        <span class="keyword">switch</span> (res) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;yi&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;er&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;san&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;si&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;wu&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;liu&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;qi&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;ba&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;jiu&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;ling&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        num = num - res * Mi(ditnum);</span><br><span class="line">        ditnum--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-31-掉入陷阱的数字"><a href="#7-31-掉入陷阱的数字" class="headerlink" title="7-31 掉入陷阱的数字"></a><strong>7-31 掉入陷阱的数字</strong></h1><p>对任意一个自然数<em>N</em>0，先将其各位数字相加求和，再将其和乘以3后加上1，变成一个新自然数<em>N</em>1；然后对<em>N</em>1重复这种操作，可以产生新自然数<em>N</em>2；……多次重复这种操作，运算结果最终会得到一个固定不变的数<em>N**k</em>，就像掉入一个数字“陷阱”。</p>
<p>本题要求对输入的自然数，给出其掉入“陷阱”的过程。</p>
<p>输入格式:</p>
<p>在一行内给出一个自然数<em>N</em>0（<em>N</em>0&lt;30000）。</p>
<p>输出格式:</p>
<p>对于输入的<em>N</em>0，逐行输出其掉入陷阱的步骤。第<em>i</em>行描述<em>N</em>掉入陷阱的第<em>i</em>步，格式为： <em>i</em>:<em>N**i</em> （<em>i</em>≥1）。当某一步得到的自然数结果<em>N**k</em>(<em>k</em>≥1)与上一步<em>N**k</em>−1相同时，停止输出。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1:16</span><br><span class="line">2:22</span><br><span class="line">3:13</span><br><span class="line">4:13</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-30"><a href="#代码如下：-30" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">digsum</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (x) &#123;</span><br><span class="line">        sum += x % <span class="number">10</span>;</span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> x = <span class="number">0</span>, time = <span class="number">1</span>, next = <span class="number">13</span>;  <span class="comment">//设置成默认的13是为了方便一步到位的情况</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    <span class="keyword">while</span> (digsum(x) * <span class="number">3</span> + <span class="number">1</span> != x) &#123;</span><br><span class="line">        next = digsum(x) * <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d:%d\n&quot;</span>, time, next);</span><br><span class="line">        time++;</span><br><span class="line">        x = digsum(x) * <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d:%d\n&quot;</span>, time, next);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-32-求交错序列前N项和"><a href="#7-32-求交错序列前N项和" class="headerlink" title="7-32 求交错序列前N项和"></a><strong>7-32 求交错序列前N项和</strong></h1><p>本题要求编写程序，计算交错序列 1-2/3+3/5-4/7+5/9-6/11+… 的前N项之和。</p>
<p>输入格式:</p>
<p>输入在一行中给出一个正整数N。</p>
<p>输出格式:</p>
<p>在一行中输出部分和的值，结果保留三位小数。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0.917</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-31"><a href="#代码如下：-31" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">float</span> <span class="title function_">Judge</span><span class="params">(<span class="type">int</span>  i)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">1</span>)  <span class="keyword">return</span> <span class="number">-1.0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1.0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="type">float</span> sum = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">float</span> i = <span class="number">1</span>; i &lt; n; ++i) </span><br><span class="line">        sum+= Judge(i) * ((<span class="number">1</span>+i) / (<span class="number">2</span>*i+<span class="number">1</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%0.3f&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-33-统计素数并求和"><a href="#7-33-统计素数并求和" class="headerlink" title="7-33 统计素数并求和"></a><strong>7-33 统计素数并求和</strong></h1><p>本题要求统计给定整数<em>M</em>和<em>N</em>区间内素数的个数并对它们求和。</p>
<p>输入格式:</p>
<p>输入在一行中给出两个正整数<em>M</em>和<em>N</em>（1≤<em>M</em>≤<em>N</em>≤500）。</p>
<p>输出格式:</p>
<p>在一行中顺序输出<em>M</em>和<em>N</em>区间内素数的个数以及它们的和，数字间以空格分隔。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10 31</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7 143</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-32"><a href="#代码如下：-32" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isPrime</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> (num == <span class="number">1</span>)	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;=num / <span class="number">2</span>; ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (num % i == <span class="number">0</span>)	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> m = <span class="number">0</span>, n = <span class="number">0</span>,times=<span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = m; i &lt;=n; ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (isPrime(i) == <span class="number">1</span>) &#123;</span><br><span class="line">			times++;</span><br><span class="line">			sum += i;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, times, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-34-求分数序列前N项和"><a href="#7-34-求分数序列前N项和" class="headerlink" title="7-34 求分数序列前N项和"></a><strong>7-34 求分数序列前N项和</strong></h1><p>本题要求编写程序，计算序列 2/1+3/2+5/3+8/5+… 的前N项之和。注意该序列从第2项起，每一项的分子是前一项分子与分母的和，分母是前一项的分子。</p>
<p>输入格式:</p>
<p>输入在一行中给出一个正整数N。</p>
<p>输出格式:</p>
<p>在一行中输出部分和的值，精确到小数点后两位。题目保证计算结果不超过双精度范围。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">20</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">32.66</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-33"><a href="#代码如下：-33" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">double</span> n = <span class="number">0</span>, nmt = <span class="number">2</span>, dmt = <span class="number">1</span>, nmts = <span class="number">0</span>, dmts = <span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//nmt是前一个分子，dmt是前一个分母</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;=n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">1</span>)    sum += <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            nmts = nmt + dmt;</span><br><span class="line">            dmts = nmt;</span><br><span class="line">            sum += nmts / dmts;</span><br><span class="line">            nmt = nmts;</span><br><span class="line">            dmt = dmts;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%0.2lf&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-35-猴子吃桃问题"><a href="#7-35-猴子吃桃问题" class="headerlink" title="7-35 猴子吃桃问题"></a><strong>7-35 猴子吃桃问题</strong></h1><p>一只猴子第一天摘下若干个桃子，当即吃了一半，还不过瘾，又多吃了一个；第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半加一个。到第<em>N</em>天早上想再吃时，见只剩下一个桃子了。问：第一天共摘了多少个桃子？</p>
<p>输入格式:</p>
<p>输入在一行中给出正整数<em>N</em>（1&lt;<em>N</em>≤10）。</p>
<p>输出格式:</p>
<p>在一行中输出第一天共摘了多少个桃子。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-34"><a href="#代码如下：-34" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> day = <span class="number">0</span>, sum = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;day);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; day<span class="number">-1</span>; ++i) &#123;</span><br><span class="line">        sum = (sum + <span class="number">1</span>) * <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-36-韩信点兵"><a href="#7-36-韩信点兵" class="headerlink" title="7-36 韩信点兵"></a><strong>7-36 韩信点兵</strong></h1><p>在中国数学史上，广泛流传着一个“韩信点兵”的故事：韩信是汉高祖刘邦手下的大将，他英勇善战，智谋超群，为汉朝建立了卓越的功劳。据说韩信的数学水平也非常高超，他在点兵的时候，为了知道有多少兵，同时又能保住军事机密，便让士兵排队报数：</p>
<ul>
<li>按从1至5报数，记下最末一个士兵报的数为1；</li>
<li>再按从1至6报数，记下最末一个士兵报的数为5；</li>
<li>再按从1至7报数，记下最末一个士兵报的数为4；</li>
<li>最后按从1至11报数，最末一个士兵报的数为10；</li>
</ul>
<p>请编写程序计算韩信至少有多少兵。</p>
<p>输入格式：</p>
<p>本题无输入</p>
<p>输出格式：</p>
<p>输出韩信至少拥有的士兵人数。</p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-35"><a href="#代码如下：-35" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>*<span class="number">6</span>*<span class="number">7</span>*<span class="number">11</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">5</span> == <span class="number">1</span> &amp;&amp; i % <span class="number">6</span> == <span class="number">5</span> &amp;&amp; i % <span class="number">7</span> == <span class="number">4</span> &amp;&amp; i % <span class="number">11</span> == <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-37-输出整数各位数字"><a href="#7-37-输出整数各位数字" class="headerlink" title="7-37 输出整数各位数字"></a><strong>7-37 输出整数各位数字</strong></h1><p>本题要求编写程序，对输入的一个整数，从高位开始逐位分割并输出它的各位数字。</p>
<p>输入格式：</p>
<p>输入在一行中给出一个长整型范围内的非负整数。</p>
<p>输出格式：</p>
<p>从高位开始逐位输出该整数的各位数字，每个数字后面有一个空格。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123456</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 2 3 4 5 6 </span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-36"><a href="#代码如下：-36" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">dit</span><span class="params">(<span class="type">long</span> t)</span> &#123;</span><br><span class="line">    <span class="type">int</span> ditnum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (t) &#123;</span><br><span class="line">        t /= <span class="number">10</span>;</span><br><span class="line">        ditnum++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ditnum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">mi</span><span class="params">(<span class="type">int</span> t)</span> &#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; t - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">        res *= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">long</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> dig = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>, &amp;t);</span><br><span class="line">    <span class="keyword">if</span> (t == <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;0 &quot;</span>);</span><br><span class="line">    dig = dit(t);</span><br><span class="line">    <span class="keyword">while</span> (dig) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%ld &quot;</span>, t / mi(dig));</span><br><span class="line">        t = t - (t / mi(dig)) * mi(dig);</span><br><span class="line">        dig--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-38-支票面额"><a href="#7-38-支票面额" class="headerlink" title="7-38 支票面额"></a><strong>7-38 支票面额</strong></h1><p>一个采购员去银行兑换一张<em>y</em>元<em>f</em>分的支票，结果出纳员错给了<em>f</em>元<em>y</em>分。采购员用去了<em>n</em>分之后才发觉有错，于是清点了余额尚有2<em>y</em>元2<em>f</em>分，问该支票面额是多少？</p>
<p>输入格式：</p>
<p>输入在一行中给出小于100的正整数<em>n</em>。</p>
<p>输出格式：</p>
<p>在一行中按格式<code>y.f</code>输出该支票的原始面额。如果无解，则输出<code>No Solution</code>。</p>
<p>输入样例1：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">23</span><br></pre></td></tr></table></figure>
<p>输出样例1：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">25.51</span><br></pre></td></tr></table></figure>
<p>输入样例2：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">22</span><br></pre></td></tr></table></figure>
<p>输出样例2：</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">No Solution</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h3 id="代码如下：-37"><a href="#代码如下：-37" class="headerlink" title="代码如下："></a>代码如下：</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> y = <span class="number">0</span>, f = <span class="number">0</span>, n = <span class="number">0</span>,flag=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> y = <span class="number">0</span>; y &lt; <span class="number">49</span>; y++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> f = <span class="number">0</span>; f &lt; <span class="number">100</span>; f++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">98</span> * f - <span class="number">199</span> * y == n) &#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d.%d&quot;</span>, y, f);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!flag)   <span class="built_in">printf</span>(<span class="string">&quot;No Solution&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-39-龟兔赛跑"><a href="#7-39-龟兔赛跑" class="headerlink" title="7-39 龟兔赛跑"></a><strong>7-39 龟兔赛跑</strong></h1><p>乌龟与兔子进行赛跑，跑场是一个矩型跑道，跑道边可以随地进行休息。乌龟每分钟可以前进3米，兔子每分钟前进9米；兔子嫌乌龟跑得慢，觉得肯定能跑赢乌龟，于是，每跑10分钟回头看一下乌龟，若发现自己超过乌龟，就在路边休息，每次休息30分钟，否则继续跑10分钟；而乌龟非常努力，一直跑，不休息。假定乌龟与兔子在同一起点同一时刻开始起跑，请问T分钟后乌龟和兔子谁跑得快？</p>
<p>输入格式：</p>
<p>输入在一行中给出比赛时间T（分钟）。</p>
<p>输出格式：</p>
<p>在一行中输出比赛的结果：乌龟赢输出<code>@_@</code>，兔子赢输出<code>^_^</code>，平局则输出<code>-_-</code>；后跟1空格，再输出胜利者跑完的距离。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">242</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@_@ 726</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-38"><a href="#代码如下：-38" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> turtle = <span class="number">0</span>, rabbit = <span class="number">0</span>, t = <span class="number">0</span>, run = <span class="number">0</span>, sleeptime = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//run代表兔子是否睡觉，兔子一开始不是睡觉的.sleeptime的意思是，一开始睡觉的时候</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        turtle += <span class="number">3</span>;        <span class="comment">//乌龟一定是在跑步的</span></span><br><span class="line">        <span class="keyword">if</span> (run == <span class="number">0</span>)       <span class="comment">//兔子不睡觉是0</span></span><br><span class="line">            rabbit += <span class="number">9</span>;</span><br><span class="line">        <span class="keyword">if</span> ((i % <span class="number">10</span> == <span class="number">0</span>) &amp;&amp; (rabbit &gt; turtle) &amp;&amp; (run == <span class="number">0</span>))   </span><br><span class="line">            <span class="comment">//如果兔子还在跑的状态，而且已经比乌龟快，正好在检查点上</span></span><br><span class="line">        &#123;</span><br><span class="line">            run = <span class="number">1</span>;    <span class="comment">//改变兔子的状态</span></span><br><span class="line">            sleeptime = i;  <span class="comment">//睡觉的时间，就等于i，目前的时间</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i == sleeptime + <span class="number">30</span>)    <span class="comment">//如果已经过了30分钟的话</span></span><br><span class="line">        &#123;</span><br><span class="line">            run = <span class="number">0</span>;                <span class="comment">//设置兔子醒过来继续跑</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (rabbit &gt; turtle)   <span class="built_in">printf</span>(<span class="string">&quot;^_^ %d&quot;</span>, rabbit);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (rabbit == turtle) <span class="built_in">printf</span>(<span class="string">&quot;-_- %d&quot;</span>, rabbit);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;@_@ %d&quot;</span>, turtle);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-40-到底是不是太胖了"><a href="#7-40-到底是不是太胖了" class="headerlink" title="7-40 到底是不是太胖了"></a><strong>7-40 到底是不是太胖了</strong></h1><p>据说一个人的标准体重应该是其身高（单位：厘米）减去100、再乘以0.9所得到的公斤数。真实体重与标准体重误差在10%以内都是完美身材（即 | 真实体重 − 标准体重 | &lt; 标准体重×10%）。已知市斤是公斤的两倍。现给定一群人的身高和实际体重，请你告诉他们是否太胖或太瘦了。</p>
<p>输入格式：</p>
<p>输入第一行给出一个正整数<code>N</code>（≤ 20）。随后<code>N</code>行，每行给出两个整数，分别是一个人的身高<code>H</code>（120 &lt; H &lt; 200；单位：厘米）和真实体重<code>W</code>（50 &lt; W ≤ 300；单位：市斤），其间以空格分隔。</p>
<p>输出格式：</p>
<p>为每个人输出一行结论：如果是完美身材，输出<code>You are wan mei!</code>；如果太胖了，输出<code>You are tai pang le!</code>；否则输出<code>You are tai shou le!</code>。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">169 136</span><br><span class="line">150 81</span><br><span class="line">178 155</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">You are wan mei!</span><br><span class="line">You are tai shou le!</span><br><span class="line">You are tai pang le!</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-39"><a href="#代码如下：-39" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">float</span> N = <span class="number">0</span>, H = <span class="number">0</span>, W = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;N);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%f%f&quot;</span>, &amp;H, &amp;W);</span><br><span class="line">		<span class="type">float</span> PerferW = <span class="number">2</span> * (H - <span class="number">100</span>) * <span class="number">0.9</span> ;	<span class="comment">//完美体重</span></span><br><span class="line">		<span class="type">float</span> DecterW = <span class="number">0</span>;	<span class="comment">//这个是误差的值</span></span><br><span class="line">		<span class="keyword">if</span> (W &gt; PerferW&amp;&amp; W - PerferW&gt;=PerferW*<span class="number">0.1</span>) &#123;		<span class="comment">//真实体重大于实际体重</span></span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;You are tai pang le!\n&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>  <span class="keyword">if</span> (W &lt;= PerferW &amp;&amp; PerferW - W &gt;= PerferW * <span class="number">0.1</span>) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;You are tai shou le!\n&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;You are wan mei!\n&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-41-计算阶乘和"><a href="#7-41-计算阶乘和" class="headerlink" title="7-41 计算阶乘和"></a><strong>7-41 计算阶乘和</strong></h1><p>对于给定的正整数<em>N</em>，需要你计算 <em>S</em>=1!+2!+3!+…+<em>N</em>!。</p>
<p>输入格式：</p>
<p>输入在一行中给出一个不超过10的正整数<em>N</em>。</p>
<p>输出格式：</p>
<p>在一行中输出<em>S</em>的值。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-40"><a href="#代码如下：-40" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">factorial</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		sum *= i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;=n; ++i) &#123;</span><br><span class="line">		sum += factorial(i);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-42-整除光棍"><a href="#7-42-整除光棍" class="headerlink" title="7-42 整除光棍"></a><strong>7-42 整除光棍</strong></h1><p>这里所谓的“光棍”，并不是指单身汪啦~ 说的是全部由1组成的数字，比如1、11、111、1111等。传说任何一个光棍都能被一个不以5结尾的奇数整除。比如，111111就可以被13整除。 现在，你的程序要读入一个整数<code>x</code>，这个整数一定是奇数并且不以5结尾。然后，经过计算，输出两个数字：第一个数字<code>s</code>，表示<code>x</code>乘以<code>s</code>是一个光棍，第二个数字<code>n</code>是这个光棍的位数。这样的解当然不是唯一的,题目要求你输出最小的解。</p>
<p>提示：一个显然的办法是逐渐增加光棍的位数，直到可以整除<code>x</code>为止。但难点在于，<code>s</code>可能是个非常大的数 —— 比如，程序输入31，那么就输出3584229390681和15，因为31乘以3584229390681的结果是111111111111111，一共15个1。</p>
<p>输入格式：</p>
<p>输入在一行中给出一个不以5结尾的正奇数<code>x</code>（&lt;1000）。</p>
<p>输出格式：</p>
<p>在一行中输出相应的最小的<code>s</code>和<code>n</code>，其间以1个空格分隔。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">31</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3584229390681 15</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-41"><a href="#代码如下：-41" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> x,y = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="type">int</span> s=<span class="number">1</span>;         <span class="comment">//用来表示光棍数</span></span><br><span class="line">    <span class="type">int</span> n=<span class="number">0</span>;         <span class="comment">//记录位数</span></span><br><span class="line">    <span class="keyword">while</span>(s&lt;x)&#123;</span><br><span class="line">        s=s*<span class="number">10</span>+<span class="number">1</span>;  <span class="comment">// 先找出大于x的最小光棍数</span></span><br><span class="line">        n++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        y=s%x;  <span class="comment">// 储存余数</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,s/x);</span><br><span class="line">        s=y*<span class="number">10</span>+<span class="number">1</span>;  <span class="comment">// 更新光棍数</span></span><br><span class="line">        n++;</span><br><span class="line">    &#125; <span class="keyword">while</span>(y!=<span class="number">0</span>);  <span class="comment">// 如果余数为0，说明找到了光棍数字，直接结束循环</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>,n);  <span class="comment">// 输出位数</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-43-Shuffling-Machine"><a href="#7-43-Shuffling-Machine" class="headerlink" title="7-43 Shuffling Machine"></a><strong>7-43 Shuffling Machine</strong></h1><p>Shuffling is a procedure used to randomize a deck of playing cards. Because standard shuffling techniques are seen as weak, and in order to avoid “inside jobs” where employees collaborate with gamblers by performing inadequate shuffles, many casinos employ <strong>automatic shuffling machines</strong>. Your task is to simulate a shuffling machine.</p>
<p>The machine shuffles a deck of 54 cards according to a given random order and repeats for a given number of times. It is assumed that the initial status of a card deck is in the following order:</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">S1</span></span>, S2, ..., S13, </span><br><span class="line"><span class="function"><span class="title">H1</span></span>, H2, ..., H13, </span><br><span class="line"><span class="function"><span class="title">C1</span></span>, C2, ..., C13, </span><br><span class="line"><span class="function"><span class="title">D1</span></span>, D2, ..., D13, </span><br><span class="line">J1, J2</span><br></pre></td></tr></table></figure>
<p>where “S” stands for “Spade”, “H” for “Heart”, “C” for “Club”, “D” for “Diamond”, and “J” for “Joker”. A given order is a permutation of distinct integers in [1, 54]. If the number at the <em>i</em>-th position is <em>j</em>, it means to move the card from position <em>i</em> to position <em>j</em>. For example, suppose we only have 5 cards: S3, H5, C1, D13 and J2. Given a shuffling order {4, 2, 5, 3, 1}, the result will be: J2, H5, D13, S3, C1. If we are to repeat the shuffling again, the result will be: C1, H5, S3, J2, D13.</p>
<p>Input Specification:</p>
<p>Each input file contains one test case. For each case, the first line contains a positive integer <em>K</em> (≤20) which is the number of repeat times. Then the next line contains the given order. All the numbers in a line are separated by a space.</p>
<p>Output Specification:</p>
<p>For each test case, print the shuffling results in one line. All the cards are separated by a space, and there must be no extra space at the end of the line.</p>
<p>Sample Input:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">36 52 37 38 3 39 40 53 54 41 11 12 13 42 43 44 2 4 23 24 25 26 27 6 7 8 48 49 50 51 9 10 14 15 16 5 17 18 19 1 20 21 22 28 29 30 31 32 33 34 35 45 46 47</span><br></pre></td></tr></table></figure>
<p>Sample Output:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">S7 C11 C10 C12 S1 H7 H8 H9 D8 D9 S11 S12 S13 D10 D11 D12 S3 S4 S6 S10 H1 H2 C13 D2 D3 D4 H6 H3 D13 J1 J2 C1 C2 C3 C4 D1 S5 H5 H11 H12 C6 C7 C8 C9 S2 S8 S9 H10 D5 D6 D7 H4 H13 C5</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-42"><a href="#代码如下：-42" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> card[<span class="number">55</span>] = &#123; <span class="number">0</span> &#125;, pcard[<span class="number">55</span>] = &#123; <span class="number">0</span> &#125;, random[<span class="number">55</span>] = &#123; <span class="number">0</span> &#125;,k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">55</span>; ++i)   card[i] = i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">54</span>; ++i)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;random[i]);</span><br><span class="line">    <span class="keyword">while</span> (k) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">54</span>; ++i) &#123;</span><br><span class="line">            pcard[random[i]] = card[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">54</span>; ++i)</span><br><span class="line">            card[i] = pcard[i];</span><br><span class="line">        k--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">54</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (card[i] &gt;= <span class="number">1</span> &amp;&amp; card[i] &lt;= <span class="number">13</span>) <span class="built_in">printf</span>(<span class="string">&quot;S%d&quot;</span>, card[i]);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (card[i] &gt; <span class="number">13</span> &amp;&amp; card[i] &lt;= <span class="number">26</span>)   <span class="built_in">printf</span>(<span class="string">&quot;H%d&quot;</span>, card[i] - <span class="number">13</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (card[i] &gt; <span class="number">26</span> &amp;&amp; card[i] &lt;= <span class="number">39</span>)  <span class="built_in">printf</span>(<span class="string">&quot;C%d&quot;</span>, card[i] - <span class="number">26</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (card[i] &gt; <span class="number">39</span> &amp;&amp; card[i] &lt;= <span class="number">52</span>)  <span class="built_in">printf</span>(<span class="string">&quot;D%d&quot;</span>, card[i] - <span class="number">39</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;J%d&quot;</span>, card[i] - <span class="number">52</span>);</span><br><span class="line">        <span class="keyword">if</span> (i!=<span class="number">54</span>)    <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-44-黑洞数"><a href="#7-44-黑洞数" class="headerlink" title="7-44 黑洞数"></a><strong>7-44 黑洞数</strong></h1><p>黑洞数也称为陷阱数，又称“Kaprekar问题”，是一类具有奇特转换特性的数。</p>
<p>任何一个各位数字不全相同的三位数，经有限次“重排求差”操作，总会得到495。最后所得的495即为三位黑洞数。所谓“重排求差”操作即组成该数的数字重排后的最大数减去重排后的最小数。（6174为四位黑洞数。）</p>
<p>例如，对三位数207：</p>
<ul>
<li>第1次重排求差得：720 - 27 ＝ 693；</li>
<li>第2次重排求差得：963 - 369 ＝ 594；</li>
<li>第3次重排求差得：954 - 459 ＝ 495；</li>
</ul>
<p>以后会停留在495这一黑洞数。如果三位数的3个数字全相同，一次转换后即为0。</p>
<p>任意输入一个三位数，编程给出重排求差的过程。</p>
<p>输入格式：</p>
<p>输入在一行中给出一个三位数。</p>
<p>输出格式：</p>
<p>按照以下格式输出重排求差的过程：</p>
<figure class="highlight fix"><table><tr><td class="code"><pre><span class="line"><span class="attr">序号: 数字重排后的最大数 - 重排后的最小数 </span>=<span class="string"> 差值</span></span><br></pre></td></tr></table></figure>
<p>序号从1开始，直到495出现在等号右边为止。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1: 321 - 123 = 198</span><br><span class="line">2: 981 - 189 = 792</span><br><span class="line">3: 972 - 279 = 693</span><br><span class="line">4: 963 - 369 = 594</span><br><span class="line">5: 954 - 459 = 495</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-43"><a href="#代码如下：-43" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Max</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; ++i) &#123;</span><br><span class="line">        a[i] = x % <span class="number">10</span>;</span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">1</span>] &gt; a[<span class="number">0</span>]) &#123;      <span class="comment">//要确保a[0]是最大的</span></span><br><span class="line">        <span class="type">int</span> t = a[<span class="number">1</span>];</span><br><span class="line">        a[<span class="number">1</span>] = a[<span class="number">0</span>];</span><br><span class="line">        a[<span class="number">0</span>] = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">2</span>] &gt; a[<span class="number">0</span>]) &#123;      </span><br><span class="line">        <span class="type">int</span> t = a[<span class="number">2</span>];</span><br><span class="line">        a[<span class="number">2</span>] = a[<span class="number">0</span>];</span><br><span class="line">        a[<span class="number">0</span>] = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">2</span>] &gt; a[<span class="number">1</span>]) &#123;</span><br><span class="line">        <span class="type">int</span> t = a[<span class="number">2</span>];</span><br><span class="line">        a[<span class="number">2</span>] = a[<span class="number">1</span>];</span><br><span class="line">        a[<span class="number">1</span>] = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a[<span class="number">0</span>] * <span class="number">100</span> + a[<span class="number">1</span>] * <span class="number">10</span> + a[<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">Min</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; ++i) &#123;</span><br><span class="line">        a[i] = x % <span class="number">10</span>;</span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">1</span>] &gt; a[<span class="number">0</span>]) &#123;      <span class="comment">//要确保a[0]是最大的</span></span><br><span class="line">        <span class="type">int</span> t = a[<span class="number">1</span>];</span><br><span class="line">        a[<span class="number">1</span>] = a[<span class="number">0</span>];</span><br><span class="line">        a[<span class="number">0</span>] = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">2</span>] &gt; a[<span class="number">0</span>]) &#123;</span><br><span class="line">        <span class="type">int</span> t = a[<span class="number">2</span>];</span><br><span class="line">        a[<span class="number">2</span>] = a[<span class="number">0</span>];</span><br><span class="line">        a[<span class="number">0</span>] =t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">2</span>] &gt; a[<span class="number">1</span>]) &#123;</span><br><span class="line">        <span class="type">int</span> t = a[<span class="number">2</span>];</span><br><span class="line">        a[<span class="number">2</span>] = a[<span class="number">1</span>];</span><br><span class="line">        a[<span class="number">1</span>] =t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a[<span class="number">0</span>] + a[<span class="number">1</span>] * <span class="number">10</span> + a[<span class="number">2</span>]*<span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> max = <span class="number">0</span>, min = <span class="number">0</span>, x = <span class="number">0</span>, time = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">while</span> (max - min != <span class="number">495</span>) &#123;</span><br><span class="line">        max = Max(x);</span><br><span class="line">        min = Min(x);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d: %d - %d = %d\n&quot;</span>, time, max, min, max - min);</span><br><span class="line">        time++;</span><br><span class="line">        x = max - min;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-45-找完数"><a href="#7-45-找完数" class="headerlink" title="7-45 找完数"></a><strong>7-45 找完数</strong></h1><p>所谓完数就是该数恰好等于除自身外的因子之和。例如：6=1+2+3，其中1、2、3为6的因子。本题要求编写程序，找出任意两正整数<em>m</em>和<em>n</em>之间的所有完数。</p>
<p>输入格式：</p>
<p>输入在一行中给出2个正整数<em>m</em>和<em>n</em>（1&lt;<em>m</em>≤<em>n</em>≤10000），中间以空格分隔。</p>
<p>输出格式：</p>
<p>逐行输出给定范围内每个完数的因子累加形式的分解式，每个完数占一行，格式为“完数 = 因子1 + 因子2 + … + 因子k”，其中完数和因子均按递增顺序给出。若区间内没有完数，则输出“None”。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 30</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6 = 1 + 2 + 3</span><br><span class="line">28 = 1 + 2 + 4 + 7 + 14</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-44"><a href="#代码如下：-44" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">judge</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= x / <span class="number">2</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x % i == <span class="number">0</span>)  sum += i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum == x)  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> begin = <span class="number">0</span>, end = <span class="number">0</span>,flag=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;begin, &amp;end);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = begin; i &lt;= end; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (judge(i)) &#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d = 1&quot;</span>, i);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">2</span>; j &lt;= i / <span class="number">2</span>; ++j) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i % j == <span class="number">0</span>)  <span class="built_in">printf</span>(<span class="string">&quot; + %d&quot;</span>, j);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!flag)   <span class="built_in">printf</span>(<span class="string">&quot;None\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-46-爬动的蠕虫"><a href="#7-46-爬动的蠕虫" class="headerlink" title="7-46 爬动的蠕虫"></a><strong>7-46 爬动的蠕虫</strong></h1><p>一条蠕虫长1寸，在一口深为N寸的井的底部。已知蠕虫每1分钟可以向上爬U寸，但必须休息1分钟才能接着往上爬。在休息的过程中，蠕虫又下滑了D寸。就这样，上爬和下滑重复进行。请问，蠕虫需要多长时间才能爬出井？</p>
<p>这里要求不足1分钟按1分钟计，并且假定只要在某次上爬过程中蠕虫的头部到达了井的顶部，那么蠕虫就完成任务了。初始时，蠕虫是趴在井底的（即高度为0）。</p>
<p>输入格式：</p>
<p>输入在一行中顺序给出3个正整数N、U、D，其中D&lt;U，N不超过100。</p>
<p>输出格式：</p>
<p>在一行中输出蠕虫爬出井的时间，以分钟为单位。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12 3 1</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">11</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-45"><a href="#代码如下：-45" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//一条蠕虫长1寸，在一口深为N寸的井的底部。已知蠕虫每1分钟可以向上爬U寸，</span></span><br><span class="line"><span class="comment">//但必须休息1分钟才能接着往上爬。在休息的过程中，蠕虫又下滑了D寸。就这样，</span></span><br><span class="line"><span class="comment">//上爬和下滑重复进行。请问，蠕虫需要多长时间才能爬出井？</span></span><br><span class="line"><span class="comment">//这里要求不足1分钟按1分钟计，并且假定只要在某次上爬过程中蠕虫的头部到达了井的顶部，</span></span><br><span class="line"><span class="comment">//那么蠕虫就完成任务了。初始时，蠕虫是趴在井底的（即高度为0）。</span></span><br><span class="line"><span class="comment">//入在一行中顺序给出3个正整数N、U、D，其中D &lt; U，N不超过100。</span></span><br><span class="line"><span class="comment">//    在一行中输出蠕虫爬出井的时间，以分钟为单位。</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>, u = <span class="number">0</span>, d = <span class="number">0</span>, time = <span class="number">0</span>,sleep=<span class="number">0</span>,road=<span class="number">0</span>;  <span class="comment">//一开始不是睡觉的</span></span><br><span class="line">    <span class="comment">//road就是蠕虫爬行的长度</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;n, &amp;u, &amp;d);</span><br><span class="line">    <span class="keyword">while</span> (road &lt; n) &#123;</span><br><span class="line">        time++;</span><br><span class="line">        <span class="keyword">if</span> (!sleep) &#123;   <span class="comment">//蠕虫还没有睡觉</span></span><br><span class="line">            road += u;</span><br><span class="line">            sleep = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            road -= d;</span><br><span class="line">            sleep = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, time);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-47-二进制的前导的零"><a href="#7-47-二进制的前导的零" class="headerlink" title="7-47 二进制的前导的零"></a><strong>7-47 二进制的前导的零</strong></h1><p>计算机内部用二进制来表达所有的值。一个十进制的数字，比如24，在一个32位的计算机内部被表达为00000000000000000000000000011000。可以看到，从左边数过来，在第一个1之前，有27个0。我们把这些0称作前导的零。</p>
<p>现在，你的任务是写一个程序，输入一个整数，输出在32位表达下它前导的零的个数。</p>
<p>输入格式:</p>
<p>一个整数，在32位的整数可以表达的范围内。</p>
<p>输出格式:</p>
<p>一个整数，表达输入被表达为一个32位的二进制数时，在第一个1之前的0的数量。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">256</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">23</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-46"><a href="#代码如下：-46" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>,time=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (n) &#123;</span><br><span class="line">            n /= <span class="number">2</span>;</span><br><span class="line">            time++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="number">32</span> - time);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-48-求组合数"><a href="#7-48-求组合数" class="headerlink" title="7-48 求组合数"></a><strong>7-48 求组合数</strong></h1><p>本题要求编写程序，根据公式<em>C<strong>n</strong>m</em>=<em>m</em>!(<em>n</em>−<em>m</em>)!<em>n</em>!算出从<em>n</em>个不同元素中取出<em>m</em>个元素（<em>m</em>≤<em>n</em>）的组合数。</p>
<p>建议定义和调用函数<code>fact(n)</code>计算<code>n!</code>，其中<code>n</code>的类型是<code>int</code>，函数类型是<code>double</code>。</p>
<p>输入格式:</p>
<p>输入在一行中给出两个正整数<em>m</em>和<em>n</em>（<em>m</em>≤<em>n</em>），以空格分隔。</p>
<p>输出格式:</p>
<p>按照格式“result = 组合数计算结果”输出。题目保证结果在<code>double</code>类型范围内。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 7</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">result = 21</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-47"><a href="#代码如下：-47" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">double</span> <span class="title function_">fact</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">double</span> sum = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)   sum *= i;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>, m = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line">    <span class="type">double</span> res = fact(n) / (fact(m) * (fact(n - m)) );</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;result = %.0lf&quot;</span>, res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-49-Have-Fun-with-Numbers"><a href="#7-49-Have-Fun-with-Numbers" class="headerlink" title="7-49 Have Fun with Numbers"></a><strong>7-49 Have Fun with Numbers</strong></h1><p>Notice that the number 123456789 is a 9-digit number consisting exactly the numbers from 1 to 9, with no duplication. Double it we will obtain 246913578, which happens to be another 9-digit number consisting exactly the numbers from 1 to 9, only in a different permutation. Check to see the result if we double it again!</p>
<p>Now you are suppose to check if there are more numbers with this property. That is, double a given number with <em>k</em> digits, you are to tell if the resulting number consists of only a permutation of the digits in the original number.</p>
<p>Input Specification:</p>
<p>Each input contains one test case. Each case contains one positive integer with no more than 20 digits.</p>
<p>Output Specification:</p>
<p>For each test case, first print in a line “Yes” if doubling the input number gives a number that consists of only a permutation of the digits in the original number, or “No” if not. Then in the next line, print the doubled number.</p>
<p>Sample Input:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1234567899</span><br></pre></td></tr></table></figure>
<p>Sample Output:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Yes</span><br><span class="line">2469135798</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-48"><a href="#代码如下：-48" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="type">int</span> book[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> num[<span class="number">22</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, num);</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">0</span>, len = <span class="built_in">strlen</span>(num);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = len - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="type">int</span> temp = num[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        book[temp]++;</span><br><span class="line">        temp = temp * <span class="number">2</span> + flag;</span><br><span class="line">        flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (temp &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">            temp = temp - <span class="number">10</span>;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        num[i] = (temp + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        book[temp]--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> flag1 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (book[i] != <span class="number">0</span>)</span><br><span class="line">            flag1 = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, (flag == <span class="number">1</span> || flag1 == <span class="number">1</span>) ? <span class="string">&quot;No\n&quot;</span> : <span class="string">&quot;Yes\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (flag == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-50-输出华氏-摄氏温度转换表"><a href="#7-50-输出华氏-摄氏温度转换表" class="headerlink" title="7-50 输出华氏-摄氏温度转换表"></a><strong>7-50 输出华氏-摄氏温度转换表</strong></h1><p>输入2个正整数<code>lower</code>和<code>upper</code>（<code>lower</code>≤<code>upper</code>≤100），请输出一张取值范围为[<code>lower</code>，<code>upper</code>]、且每次增加2华氏度的华氏-摄氏温度转换表。</p>
<p>温度转换的计算公式：<em>C</em>=5×(<em>F</em>−32)/9，其中：<em>C</em>表示摄氏温度，<em>F</em>表示华氏温度。</p>
<p>输入格式:</p>
<p>在一行中输入2个整数，分别表示<code>lower</code>和<code>upper</code>的值，中间用空格分开。</p>
<p>输出格式:</p>
<p>第一行输出：”fahr celsius”</p>
<p>接着每行输出一个华氏温度fahr（整型）与一个摄氏温度celsius（占据6个字符宽度，靠右对齐，保留1位小数）。</p>
<p>若输入的范围不合法，则输出”Invalid.”。</p>
<p>输入样例1:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">32 35</span><br></pre></td></tr></table></figure>
<p>输出样例1:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fahr celsius</span><br><span class="line">32   0.0</span><br><span class="line">34   1.1</span><br></pre></td></tr></table></figure>
<p>输入样例2:</p>
<figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">40 </span><span class="number">30</span></span><br></pre></td></tr></table></figure>
<p>输出样例2:</p>
<figure class="highlight erlang"><table><tr><td class="code"><pre><span class="line">Invalid.</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-49"><a href="#代码如下：-49" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> lower = <span class="number">0</span>, upper = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;lower, &amp;upper);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> ( lower&gt;upper) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Invalid.\n&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;fahr celsius\n&quot;</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = lower; i &lt;= upper; i += <span class="number">2</span>) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d%6.1f\n&quot;</span>, i, <span class="number">5</span> * (i - <span class="number">32</span>) / <span class="number">9.0</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-51-求奇数分之一序列前N项和"><a href="#7-51-求奇数分之一序列前N项和" class="headerlink" title="7-51 求奇数分之一序列前N项和"></a><strong>7-51 求奇数分之一序列前N项和</strong></h1><p>本题要求编写程序，计算序列 1 + 1/3 + 1/5 + … 的前N项之和。</p>
<p>输入格式:</p>
<p>输入在一行中给出一个正整数N。</p>
<p>输出格式:</p>
<p>在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后6位。题目保证计算结果不超过双精度范围。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">23</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sum = 2.549541</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下:"></a>代码如下:</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">double</span> sum = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		sum += <span class="number">1.0</span> / (<span class="number">2</span>*i<span class="number">-1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;sum = %.6lf&quot;</span>, sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-52-求简单交错序列前N项和"><a href="#7-52-求简单交错序列前N项和" class="headerlink" title="7-52 求简单交错序列前N项和"></a><strong>7-52 求简单交错序列前N项和</strong></h1><p>本题要求编写程序,计算序列 1 - 1/4 + 1/7 - 1/10 + … 的前N项之和。</p>
<p>输入格式:</p>
<p>输入在一行中给出一个正整数N。</p>
<p>输出格式:</p>
<p>在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后三位。题目保证计算结果不超过双精度范围。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sum = 0.819</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-50"><a href="#代码如下：-50" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">double</span> sum = <span class="number">0</span>, n = <span class="number">0</span>,t=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		t= <span class="number">1.0</span> / (<span class="number">3</span>*i<span class="number">-2</span>);</span><br><span class="line">		<span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>)	t *= <span class="number">-1</span>;</span><br><span class="line">		sum += t;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;sum = %.3lf&quot;</span>, sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-53-生成3的乘方表"><a href="#7-53-生成3的乘方表" class="headerlink" title="7-53 生成3的乘方表"></a><strong>7-53 生成3的乘方表</strong></h1><p>输入一个非负整数<em>n</em>，生成一张3的乘方表，输出30~3<em>n</em>的值。可调用幂函数计算3的乘方。</p>
<p>输入格式:</p>
<p>输入在一行中给出一个非负整数<em>n</em>。</p>
<p>输出格式:</p>
<p>按照幂的递增顺序输出<em>n</em>+1行，每行格式为“pow(3,i) = 3的i次幂的值”。题目保证输出数据不超过长整型整数的范围。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pow(3,0) = 1</span><br><span class="line">pow(3,1) = 3</span><br><span class="line">pow(3,2) = 9</span><br><span class="line">pow(3,3) = 27</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-51"><a href="#代码如下：-51" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">long</span> <span class="title function_">Mi</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">	<span class="type">long</span> sum = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(!sum)</span><br><span class="line">		<span class="keyword">return</span> sum = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)	sum *= <span class="number">3</span>;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;pow(3,%d) = %ld\n&quot;</span>, i, Mi(i));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-54-求阶乘序列前N项和"><a href="#7-54-求阶乘序列前N项和" class="headerlink" title="7-54 求阶乘序列前N项和"></a><strong>7-54 求阶乘序列前N项和</strong></h1><p>本题要求编写程序，计算序列 1!+2!+3!+⋯ 的前N项之和。</p>
<p>输入格式:</p>
<p>输入在一行中给出一个不超过12的正整数N。</p>
<p>输出格式:</p>
<p>在一行中输出整数结果。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">153</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h3 id="代码如下：-52"><a href="#代码如下：-52" class="headerlink" title="代码如下："></a>代码如下：</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fac</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		sum *= i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		sum += fac(i);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-55-查询水果价格"><a href="#7-55-查询水果价格" class="headerlink" title="7-55 查询水果价格"></a><strong>7-55 查询水果价格</strong></h1><p>给定四种水果，分别是苹果（apple）、梨（pear）、桔子（orange）、葡萄（grape），单价分别对应为3.00元/公斤、2.50元/公斤、4.10元/公斤、10.20元/公斤。</p>
<p>首先在屏幕上显示以下菜单：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">[<span class="number">1</span>] apple</span><br><span class="line">[<span class="number">2</span>] pear</span><br><span class="line">[<span class="number">3</span>] orange</span><br><span class="line">[<span class="number">4</span>] grape</span><br><span class="line">[<span class="number">0</span>] <span class="keyword">exit</span></span><br></pre></td></tr></table></figure>
<p>用户可以输入编号1~4查询对应水果的单价。当连续查询次数超过5次时，程序应自动退出查询；不到5次而用户输入0即退出；输入其他编号，显示价格为0。</p>
<p>输入格式:</p>
<p>输入在一行中给出用户连续输入的若干个编号。</p>
<p>输出格式:</p>
<p>首先在屏幕上显示菜单。然后对应用户的每个输入，在一行中按格式“price = 价格”输出查询结果，其中价格保留两位小数。当用户连续查询次数超过5次、或主动输入0时，程序结束。</p>
<p>输入样例1:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 -1 0 2</span><br></pre></td></tr></table></figure>
<p>输出样例1:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[1] apple</span><br><span class="line">[2] pear</span><br><span class="line">[3] orange</span><br><span class="line">[4] grape</span><br><span class="line">[0] exit</span><br><span class="line">price = 4.10</span><br><span class="line">price = 0.00</span><br></pre></td></tr></table></figure>
<p>输入样例2:</p>
<figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">2</span> <span class="number">3</span> <span class="number">3</span> <span class="number">4</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span></span><br></pre></td></tr></table></figure>
<p>输出样例2:</p>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">[<span class="number">1</span>] apple</span><br><span class="line">[<span class="number">2</span>] pear</span><br><span class="line">[<span class="number">3</span>] orange</span><br><span class="line">[<span class="number">4</span>] grape</span><br><span class="line">[<span class="number">0</span>] exit</span><br><span class="line"><span class="attribute">price</span> <span class="operator">=</span> <span class="number">3.00</span></span><br><span class="line"><span class="attribute">price</span> <span class="operator">=</span> <span class="number">2.50</span></span><br><span class="line"><span class="attribute">price</span> <span class="operator">=</span> <span class="number">4.10</span></span><br><span class="line"><span class="attribute">price</span> <span class="operator">=</span> <span class="number">4.10</span></span><br><span class="line"><span class="attribute">price</span> <span class="operator">=</span> <span class="number">10.20</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-53"><a href="#代码如下：-53" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">double</span> a[<span class="number">7</span>] = &#123; <span class="number">0</span>,<span class="number">3</span>,<span class="number">2.5</span>,<span class="number">4.1</span>,<span class="number">10.2</span>,<span class="number">-1</span>&#125;;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;[1] apple\n[2] pear\n[3] orange\n[4] grape\n[0] exit\n&quot;</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; ++i) &#123;</span><br><span class="line">		<span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);</span><br><span class="line">		<span class="keyword">if</span> (t &gt;= <span class="number">1</span> &amp;&amp; t &lt;= <span class="number">4</span>)	<span class="built_in">printf</span>(<span class="string">&quot;price = %.2lf\n&quot;</span>, a[t]);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (t == <span class="number">0</span>)	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;price = 0.00\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-56-求给定精度的简单交错序列部分和"><a href="#7-56-求给定精度的简单交错序列部分和" class="headerlink" title="7-56 求给定精度的简单交错序列部分和"></a><strong>7-56 求给定精度的简单交错序列部分和</strong></h1><p>本题要求编写程序，计算序列部分和 1 - 1/4 + 1/7 - 1/10 + … 直到最后一项的绝对值不大于给定精度eps。</p>
<p>输入格式:</p>
<p>输入在一行中给出一个正实数eps。</p>
<p>输出格式:</p>
<p>在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后六位。题目保证计算结果不超过双精度范围。</p>
<p>输入样例1:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4E-2</span><br></pre></td></tr></table></figure>
<p>输出样例1:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sum = 0.854457</span><br></pre></td></tr></table></figure>
<p>输入样例2:</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">0</span>.<span class="number">02</span></span><br></pre></td></tr></table></figure>
<p>输出样例2:</p>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">sum</span> <span class="operator">=</span> <span class="number">0.826310</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-54"><a href="#代码如下：-54" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">//#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="type">double</span> <span class="title function_">Mi</span><span class="params">(<span class="type">int</span> d)</span> &#123;</span><br><span class="line">	<span class="type">double</span> sum = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; d; ++i) &#123;</span><br><span class="line">		sum *= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (d &lt; <span class="number">0</span>) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; -d; ++i) &#123;</span><br><span class="line">			sum *= <span class="number">0.1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> <span class="title function_">chartodbl</span><span class="params">(<span class="type">char</span>* a)</span> &#123;</span><br><span class="line">	<span class="type">int</span> dit = <span class="built_in">strlen</span>(a),sum=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a); i++) &#123;</span><br><span class="line">		sum += (a[i] - <span class="string">&#x27;0&#x27;</span>) * Mi(dit);</span><br><span class="line">		dit--;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> <span class="title function_">strtodbl</span><span class="params">(<span class="type">char</span> *a)</span> &#123;</span><br><span class="line">	<span class="type">int</span> dit = <span class="number">0</span>,flag=<span class="number">0</span>;	<span class="comment">//0表示在E之前的数字</span></span><br><span class="line">	<span class="type">char</span> num[<span class="number">50</span>] = &#123; <span class="string">&#x27; &#x27;</span> &#125;, mi[<span class="number">50</span>] = &#123;<span class="string">&#x27; &#x27;</span>&#125;;</span><br><span class="line">	<span class="type">int</span> index = <span class="number">0</span>,num2=<span class="number">0</span>;</span><br><span class="line">	<span class="type">double</span> num1 = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a); i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">			<span class="keyword">if</span> (a[i] &gt; <span class="string">&#x27;0&#x27;</span> &amp;&amp; a[i] &lt; <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">				num[i] = a[i];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (a[i] == <span class="string">&#x27;E&#x27;</span>) &#123;</span><br><span class="line">			flag = <span class="number">1</span>;</span><br><span class="line">			num1 = chartodbl(num);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">			<span class="keyword">if</span> (a[i] &gt; <span class="string">&#x27;0&#x27;</span> &amp;&amp; a[i] &lt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">				mi[index] = a[i];</span><br><span class="line">				index++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	num2 = chartodbl(mi);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;=num2; ++i) &#123;</span><br><span class="line">		num1 *= <span class="number">0.1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> num1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用来判断是不是科学计数法</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">judge</span><span class="params">(<span class="type">char</span>* a)</span> &#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a); ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (a[i] == <span class="string">&#x27;E&#x27;</span>)	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> <span class="title function_">nor</span><span class="params">(<span class="type">char</span>* a)</span> &#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a); ++i) &#123;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">double</span> sum=<span class="number">0</span>, n = <span class="number">0</span>, t = <span class="number">1</span>,i=<span class="number">1</span>;</span><br><span class="line">	<span class="type">char</span> str[<span class="number">100</span>] = &#123; <span class="string">&#x27; &#x27;</span> &#125;;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line">	<span class="keyword">if</span> (!judge(str)) &#123;</span><br><span class="line">		n = strtodbl(str);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		n = atof(str);</span><br><span class="line">	<span class="keyword">if</span> (n &gt;= <span class="number">1</span>)	sum = <span class="number">1</span>;</span><br><span class="line">	<span class="comment">//printf(&quot;%lf\n&quot;, n);</span></span><br><span class="line">	<span class="keyword">while</span> (t - n &gt;<span class="number">0</span>) &#123;</span><br><span class="line">		t = <span class="number">1.0</span> / (<span class="number">3</span> * i - <span class="number">2</span>);</span><br><span class="line">		<span class="keyword">if</span> ((<span class="type">int</span>)i % <span class="number">2</span> == <span class="number">0</span>)	t *= <span class="number">-1</span>;</span><br><span class="line">		<span class="comment">//printf(&quot;i is %lf   t is %lf\n&quot;, i, t);</span></span><br><span class="line">		sum += t;</span><br><span class="line">		i++;</span><br><span class="line">		<span class="keyword">if</span> (t &lt; <span class="number">0</span>)	t = -t;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//printf(&quot;t is %.8lf\n&quot;, t);</span></span><br><span class="line">	<span class="comment">//t = 1.0 / (3 * i - 2);</span></span><br><span class="line">	<span class="comment">//if ((int)i % 2 == 0)	t *= -1;</span></span><br><span class="line">	<span class="comment">//sum += t;</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;sum = %.6lf&quot;</span>, sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-57-求e的近似值"><a href="#7-57-求e的近似值" class="headerlink" title="7-57 求e的近似值"></a><strong>7-57 求e的近似值</strong></h1><p>自然常数 <em>e</em> 可以用级数 1+1/1!+1/2!+⋯+1/<em>n</em>!+⋯ 来近似计算。本题要求对给定的非负整数 <em>n</em>，求该级数的前 <em>n</em>+1 项和。</p>
<p>输入格式:</p>
<p>输入第一行中给出非负整数 <em>n</em>（≤1000）。</p>
<p>输出格式:</p>
<p>在一行中输出部分和的值，保留小数点后八位。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2.71828180</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-55"><a href="#代码如下：-55" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">double</span> <span class="title function_">fac</span><span class="params">(<span class="type">double</span> n)</span> &#123;</span><br><span class="line">    <span class="type">double</span> sum = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">double</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        sum *= i;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1.0</span> / sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">    <span class="type">double</span> n = <span class="number">0</span>,sum=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">double</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        sum += fac(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.8lf&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-58-求幂级数展开的部分和"><a href="#7-58-求幂级数展开的部分和" class="headerlink" title="7-58 求幂级数展开的部分和"></a><strong>7-58 求幂级数展开的部分和</strong></h1><p>已知函数<em>e**x</em>可以展开为幂级数1+<em>x</em>+<em>x</em>2/2!+<em>x</em>3/3!+⋯+<em>x**k</em>/<em>k</em>!+⋯。现给定一个实数<em>x</em>，要求利用此幂级数部分和求<em>e**x</em>的近似值，求和一直继续到最后一项的绝对值小于0.00001。</p>
<p>输入格式:</p>
<p>输入在一行中给出一个实数<em>x</em>∈[0,5]。</p>
<p>输出格式:</p>
<p>在一行中输出满足条件的幂级数部分和，保留小数点后四位。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.2</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3.3201</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-56"><a href="#代码如下：-56" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">double</span> DIF = <span class="number">0.00001</span>;</span><br><span class="line"><span class="type">double</span> <span class="title function_">fac</span><span class="params">(<span class="type">double</span> n)</span> &#123;</span><br><span class="line">    <span class="type">double</span> sum = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">double</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        sum *= i;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> <span class="title function_">pow</span><span class="params">(<span class="type">double</span> x, <span class="type">int</span> <span class="built_in">exp</span>)</span> &#123;</span><br><span class="line">    <span class="type">double</span> sum = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="built_in">exp</span>; ++i) &#123;</span><br><span class="line">        sum *= x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">double</span> x = <span class="number">0</span>, sum = <span class="number">1</span>, time = <span class="number">1</span>, p = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;x);</span><br><span class="line">    p = <span class="built_in">pow</span>(x, time) / fac(time);</span><br><span class="line">    <span class="keyword">while</span> (p &gt;= DIF) &#123;</span><br><span class="line">        p = <span class="built_in">pow</span>(x, time) / fac(time);</span><br><span class="line">        sum += p;</span><br><span class="line">        time++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.4lf&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-59-打印菱形图案"><a href="#7-59-打印菱形图案" class="headerlink" title="7-59 打印菱形图案"></a><strong>7-59 打印菱形图案</strong></h1><p>本题要求编写程序，打印一个高度为<em>n</em>的、由“*”组成的正菱形图案。</p>
<p>输入格式:</p>
<p>输入在一行中给出一个正的奇数<em>n</em>。</p>
<p>输出格式:</p>
<p>输出由<em>n</em>行星号“*”组成的菱形，如样例所示。每个星号后跟一个空格。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">      * </span><br><span class="line">    * * * </span><br><span class="line">  * * * * * </span><br><span class="line">* * * * * * * </span><br><span class="line">  * * * * * </span><br><span class="line">    * * * </span><br><span class="line">      * </span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-57"><a href="#代码如下：-57" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n / <span class="number">2</span> + <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n + <span class="number">1</span> - <span class="number">2</span> * i; j++)        <span class="comment">//  不管怎么样，先输出5个空格</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= <span class="number">2</span> * i - <span class="number">1</span>; j++)            <span class="comment">// 然后在输出对应的*</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;* &quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n / <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= <span class="number">2</span> * i; j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">2</span> * (n / <span class="number">2</span>) - <span class="number">1</span> - <span class="number">2</span> * (i - <span class="number">1</span>); j &gt;= <span class="number">1</span>; j--)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;* &quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-60-Welcome-to-You"><a href="#7-60-Welcome-to-You" class="headerlink" title="7-60 Welcome to You!"></a><strong>7-60 Welcome to You!</strong></h1><p>本题要求编写程序，输出一个短句“Welcome to You!”。</p>
<p>输入格式:</p>
<p>本题目没有输入。</p>
<p>输出格式:</p>
<p>在一行中输出短句“Welcome to You!”。</p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-58"><a href="#代码如下：-58" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Welcome to You!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-61-Programming-in-C-is-fun"><a href="#7-61-Programming-in-C-is-fun" class="headerlink" title="7-61 Programming in C is fun!"></a><strong>7-61 Programming in C is fun!</strong></h1><p>本题要求编写程序，输出一个短句“Programming in C is fun!”。</p>
<p>输入格式:</p>
<p>本题目没有输入。</p>
<p>输出格式:</p>
<p>在一行中输出短句“Programming in C is fun!”。</p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-59"><a href="#代码如下：-59" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Programming in C is fun!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-62-计算物体自由下落的距离"><a href="#7-62-计算物体自由下落的距离" class="headerlink" title="7-62 计算物体自由下落的距离"></a><strong>7-62 计算物体自由下落的距离</strong></h1><p>一个物体从100米的高空自由落下。编写程序，求它在前3秒内下落的垂直距离。设重力加速度为10米/秒2。</p>
<p>输入格式:</p>
<p>本题目没有输入。</p>
<p>输出格式:</p>
<p>按照下列格式输出</p>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">height</span> <span class="operator">=</span> 垂直距离值</span><br></pre></td></tr></table></figure>
<p>结果保留2位小数。</p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-60"><a href="#代码如下：-60" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;height = %.2lf&quot;</span>, <span class="number">0.5</span> * <span class="number">10</span> * <span class="number">3</span> * <span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-63-高空坠球"><a href="#7-63-高空坠球" class="headerlink" title="7-63 高空坠球"></a><strong>7-63 高空坠球</strong></h1><p>皮球从某给定高度自由落下，触地后反弹到原高度的一半，再落下，再反弹，……，如此反复。问皮球在第<em>n</em>次落地时，在空中一共经过多少距离？第<em>n</em>次反弹的高度是多少？</p>
<p>输入格式:</p>
<p>输入在一行中给出两个非负整数，分别是皮球的初始高度和<em>n</em>，均在长整型范围内。</p>
<p>输出格式:</p>
<p>在一行中顺序输出皮球第<em>n</em>次落地时在空中经过的距离、以及第<em>n</em>次反弹的高度，其间以一个空格分隔，保留一位小数。题目保证计算结果不超过双精度范围。</p>
<p>注意：<em>n</em>为 0 时表示球未开始下落。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">33 5</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">94.9 1.0</span><br></pre></td></tr></table></figure>
<p><strong>鸣谢中山职业技术学院邱维阳老师完善题面。</strong></p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-61"><a href="#代码如下：-61" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">double</span> <span class="title function_">road</span><span class="params">(<span class="type">double</span> n,<span class="type">double</span> h)</span> &#123;</span><br><span class="line">	<span class="type">double</span> hei = h;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">		hei*= <span class="number">0.5</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> hei;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">double</span> h = <span class="number">0</span>, n = <span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>, &amp;h, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (i == <span class="number">1</span>)	sum += road(i, h);</span><br><span class="line">		<span class="keyword">else</span> sum += road(i, h) * <span class="number">2</span>;</span><br><span class="line">		<span class="comment">//printf(&quot;%lf\n&quot;,road(i, h));</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (n == <span class="number">0</span>)	<span class="built_in">printf</span>(<span class="string">&quot;0.0 0.0&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> </span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%.1lf %.1lf&quot;</span>, sum, road(n, h)/<span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-64-统计大写辅音字母"><a href="#7-64-统计大写辅音字母" class="headerlink" title="7-64 统计大写辅音字母"></a><strong>7-64 统计大写辅音字母</strong></h1><p>英文辅音字母是除<code>A</code>、<code>E</code>、<code>I</code>、<code>O</code>、<code>U</code>以外的字母。本题要求编写程序，统计给定字符串中<strong>大写</strong>辅音字母的个数。</p>
<p>输入格式：</p>
<p>输入在一行中给出一个不超过80个字符、并以回车结束的字符串。</p>
<p>输出格式：</p>
<p>输出在一行中给出字符串中大写辅音字母的个数。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HELLO World!</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-62"><a href="#代码如下：-62" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">char</span> str[<span class="number">88</span>];</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">	fgets(str, <span class="keyword">sizeof</span>(str), <span class="built_in">stdin</span>);</span><br><span class="line">	<span class="comment">//scanf(&quot;%s&quot;, str);</span></span><br><span class="line">	<span class="comment">//printf(&quot;%s&quot;, str);</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(str); ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (str[i] &gt; <span class="string">&#x27;A&#x27;</span> &amp;&amp; str[i] &lt;=<span class="string">&#x27;Z&#x27;</span>&amp;&amp;str[i]!=<span class="string">&#x27;E&#x27;</span>&amp;&amp;str[i]!=<span class="string">&#x27;I&#x27;</span>&amp;&amp;str[i]!=<span class="string">&#x27;O&#x27;</span>&amp;&amp;str[i]!=<span class="string">&#x27;U&#x27;</span>) &#123;</span><br><span class="line">			<span class="comment">//printf(&quot;%c\n&quot;, str[i]);</span></span><br><span class="line">			sum++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-65-字符串替换"><a href="#7-65-字符串替换" class="headerlink" title="7-65 字符串替换"></a><strong>7-65 字符串替换</strong></h1><p>本题要求编写程序，将给定字符串中的大写英文字母按以下对应规则替换：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>原字母</th>
<th>对应字母</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>Z</td>
</tr>
<tr>
<td>B</td>
<td>Y</td>
</tr>
<tr>
<td>C</td>
<td>X</td>
</tr>
<tr>
<td>D</td>
<td>W</td>
</tr>
<tr>
<td>…</td>
<td>…</td>
</tr>
<tr>
<td>X</td>
<td>C</td>
</tr>
<tr>
<td>Y</td>
<td>B</td>
</tr>
<tr>
<td>Z</td>
<td>A</td>
</tr>
</tbody>
</table>
</div>
<p>输入格式：</p>
<p>输入在一行中给出一个不超过80个字符、并以回车结束的字符串。</p>
<p>输出格式：</p>
<p>输出在一行中给出替换完成后的字符串。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Only the 11 CAPItaL LeTtERS are replaced.</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Lnly the 11 XZKRtaO OeGtVIH are replaced.</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-63"><a href="#代码如下：-63" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">char</span> str[<span class="number">88</span>];</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">	fgets(str, <span class="keyword">sizeof</span>(str), <span class="built_in">stdin</span>);</span><br><span class="line">	<span class="comment">//scanf(&quot;%s&quot;, str);</span></span><br><span class="line">	<span class="comment">//printf(&quot;%s&quot;, str);</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(str); ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (str[i] &gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; str[i] &lt;=<span class="string">&#x27;Z&#x27;</span>) &#123;</span><br><span class="line">			str[i]=<span class="number">155</span>-str[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-66-时间换算"><a href="#7-66-时间换算" class="headerlink" title="7-66 时间换算"></a><strong>7-66 时间换算</strong></h1><p>本题要求编写程序，以<code>hh:mm:ss</code>的格式输出某给定时间再过<code>n</code>秒后的时间值（超过23:59:59就从0点开始计时）。</p>
<p>输入格式：</p>
<p>输入在第一行中以<code>hh:mm:ss</code>的格式给出起始时间，第二行给出整秒数<code>n</code>（&lt;60）。</p>
<p>输出格式：</p>
<p>输出在一行中给出<code>hh:mm:ss</code>格式的结果时间。</p>
<p>输入样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">11:59:40</span><br><span class="line">30</span><br></pre></td></tr></table></figure>
<p>输出样例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12:00:10</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-64"><a href="#代码如下：-64" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> h = <span class="number">0</span>, m = <span class="number">0</span>, s = <span class="number">0</span>,ps=<span class="number">0</span>,index=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d:%d:%d&quot;</span>, &amp;h, &amp;m, &amp;s);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;ps);</span><br><span class="line">	<span class="keyword">if</span> (s + ps &lt; <span class="number">60</span>) </span><br><span class="line">		s = s + ps;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		index = (s + ps) / <span class="number">60</span>;</span><br><span class="line">		s = (s + ps) % <span class="number">60</span>;</span><br><span class="line">		<span class="keyword">if</span> (m + index &lt; <span class="number">60</span>) </span><br><span class="line">			m = m + index;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			index = (m + index) / <span class="number">60</span>;</span><br><span class="line">			m = (m + index) % <span class="number">60</span>;</span><br><span class="line">			<span class="keyword">if</span> (h + index &lt; <span class="number">24</span>)</span><br><span class="line">				h += index;</span><br><span class="line">			<span class="keyword">else</span> &#123;</span><br><span class="line">				h = h + index - <span class="number">24</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%02d:%02d:%02d&quot;</span>, h, m, s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-67-What-is-a-computer"><a href="#7-67-What-is-a-computer" class="headerlink" title="7-67 What is a computer?"></a><strong>7-67 What is a computer?</strong></h1><p>本题要求编写程序，输出一个短句“What is a computer?”。</p>
<p>输入格式:</p>
<p>本题目没有输入。</p>
<p>输出格式:</p>
<p>在一行中输出短句“What is a computer?”。</p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-65"><a href="#代码如下：-65" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;What is a computer?&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-68-求N分之一序列前N项和"><a href="#7-68-求N分之一序列前N项和" class="headerlink" title="7-68 求N分之一序列前N项和"></a><strong>7-68 求N分之一序列前N项和</strong></h1><p>本题要求编写程序，计算序列 1 + 1/2 + 1/3 + … 的前N项之和。</p>
<p>输入格式:</p>
<p>输入在一行中给出一个正整数N。</p>
<p>输出格式:</p>
<p>在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后6位。题目保证计算结果不超过双精度范围。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sum = 2.450000</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-66"><a href="#代码如下：-66" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		sum += <span class="number">1.0</span> / i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;sum = %.6lf&quot;</span>, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-69-换硬币"><a href="#7-69-换硬币" class="headerlink" title="7-69 换硬币"></a><strong>7-69 换硬币</strong></h1><p>将一笔零钱换成5分、2分和1分的硬币，要求每种硬币至少有一枚，有几种不同的换法？</p>
<p>输入格式:</p>
<p>输入在一行中给出待换的零钱数额<em>x</em>∈(8,100)。</p>
<p>输出格式:</p>
<p>要求按5分、2分和1分硬币的数量依次从大到小的顺序，输出各种换法。每行输出一种换法，格式为：“fen5:5分硬币数量, fen2:2分硬币数量, fen1:1分硬币数量, total:硬币总数量”。最后一行输出“count = 换法个数”。</p>
<p>输入样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">13</span><br></pre></td></tr></table></figure>
<p>输出样例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fen5:2, fen2:1, fen1:1, total:4</span><br><span class="line">fen5:1, fen2:3, fen1:2, total:6</span><br><span class="line">fen5:1, fen2:2, fen1:4, total:7</span><br><span class="line">fen5:1, fen2:1, fen1:6, total:8</span><br><span class="line">count = 4</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-67"><a href="#代码如下：-67" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> fen5 = <span class="number">1</span>, fen2=<span class="number">1</span>, fen1 = <span class="number">1</span>,x=<span class="number">0</span>,total=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = (x - <span class="number">2</span> - <span class="number">1</span>) / <span class="number">5</span>; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = (x - <span class="number">5</span> - <span class="number">1</span>) / <span class="number">2</span>; j &gt;= <span class="number">1</span>; j--) &#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> z = (x - <span class="number">5</span> - <span class="number">2</span>) / <span class="number">1</span>; z &gt;= <span class="number">1</span>; z--) &#123;</span><br><span class="line">				<span class="keyword">if</span> (<span class="number">5</span> * i + <span class="number">2</span> * j + z == x) &#123;</span><br><span class="line">					total++;</span><br><span class="line">					<span class="built_in">printf</span>(<span class="string">&quot;fen5:%d, fen2:%d, fen1:%d, total:%d\n&quot;</span>, i, j, z, i + j + z);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;count = %d&quot;</span>, total);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-70-输出三角形面积和周长"><a href="#7-70-输出三角形面积和周长" class="headerlink" title="7-70 输出三角形面积和周长"></a><strong>7-70 输出三角形面积和周长</strong></h1><p>本题要求编写程序，根据输入的三角形的三条边<em>a</em>、<em>b</em>、<em>c</em>，计算并输出面积和周长。注意：在一个三角形中， 任意两边之和大于第三边。三角形面积计算公式：<em>a<strong>re</strong>a</em>=<em>s</em>(<em>s</em>−<em>a</em>)(<em>s</em>−<em>b</em>)(<em>s</em>−<em>c</em>)，其中<em>s</em>=(<em>a</em>+<em>b</em>+<em>c</em>)/2。</p>
<p>输入格式：</p>
<p>输入为3个正整数，分别代表三角形的3条边<em>a</em>、<em>b</em>、<em>c</em>。</p>
<p>输出格式：</p>
<p>如果输入的边能构成一个三角形，则在一行内，按照</p>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">area</span> <span class="operator">=</span> 面积<span class="comment">; perimeter = 周长</span></span><br></pre></td></tr></table></figure>
<p>的格式输出，保留两位小数。否则，输出</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">These sides <span class="built_in">do</span> <span class="keyword">not</span> correspond <span class="built_in">to</span> <span class="keyword">a</span> valid triangle</span><br></pre></td></tr></table></figure>
<p>输入样例1：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 5 3</span><br></pre></td></tr></table></figure>
<p>输出样例1：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">area = 7.15; perimeter = 13.00</span><br></pre></td></tr></table></figure>
<p>输入样例2：</p>
<figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">4</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>输出样例2：</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">These sides <span class="built_in">do</span> <span class="keyword">not</span> correspond <span class="built_in">to</span> <span class="keyword">a</span> valid triangle</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-68"><a href="#代码如下：-68" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">judge</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c)</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> (a + b &gt; c &amp;&amp; a + c &gt; b &amp;&amp; b + c &gt; a)	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>, c = <span class="number">0</span>;</span><br><span class="line">	<span class="type">double</span> s = <span class="number">0</span>,area=<span class="number">0</span>,per=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">	<span class="keyword">if</span> (!judge(a,b,c))</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;These sides do not correspond to a valid triangle&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		per = a + b + c;</span><br><span class="line">		s = per / <span class="number">2.0</span>;</span><br><span class="line">		area = s * (s - a) * (s - b) * (s - c);</span><br><span class="line">		area = <span class="built_in">sqrt</span>(area);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;area = %.2lf; perimeter = %.2lf&quot;</span>,area,per);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-71-求平方与倒数序列的部分和"><a href="#7-71-求平方与倒数序列的部分和" class="headerlink" title="7-71 求平方与倒数序列的部分和"></a><strong>7-71 求平方与倒数序列的部分和</strong></h1><p>本题要求对两个正整数<em>m</em>和<em>n</em>（<em>m</em>≤<em>n</em>）编写程序，计算序列和<em>m</em>2+1/<em>m</em>+(<em>m</em>+1)2+1/(<em>m</em>+1)+⋯+<em>n</em>2+1/<em>n</em>。</p>
<h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出两个正整数<em>m</em>和<em>n</em>（<em>m</em>≤<em>n</em>），其间以空格分开。</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后六位。题目保证计算结果不超过双精度范围。</p>
<h3 id="输入样例-2"><a href="#输入样例-2" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 10</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-2"><a href="#输出样例-2" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sum = 355.845635</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-69"><a href="#代码如下：-69" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">double</span> <span class="title function_">fac</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">	<span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> n * n + <span class="number">1.0</span> / n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> m = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line">	<span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = m; i &lt;= n; ++i) &#123;</span><br><span class="line">		sum += fac(i);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;sum = %.6lf&quot;</span>, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-72-三天打鱼两天晒网"><a href="#7-72-三天打鱼两天晒网" class="headerlink" title="7-72 三天打鱼两天晒网"></a><strong>7-72 三天打鱼两天晒网</strong></h1><p>中国有句俗语叫“三天打鱼两天晒网”。假设某人从某天起，开始“三天打鱼两天晒网”，问这个人在以后的第N天中是“打鱼”还是“晒网”？</p>
<h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个不超过1000的正整数N。</p>
<h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出此人在第N天中是“Fishing”（即“打鱼”）还是“Drying”（即“晒网”），并且输出“in day N”。</p>
<h3 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">103</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Fishing in day 103</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">34</span><br></pre></td></tr></table></figure>
<h3 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Drying</span> in day <span class="number">34</span></span><br></pre></td></tr></table></figure>
<p><strong>鸣谢内蒙古师范大学张志平老师补充数据</strong></p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下-1"><a href="#代码如下-1" class="headerlink" title="代码如下:"></a>代码如下:</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">if</span> (n % <span class="number">5</span> &lt;= <span class="number">3</span>&amp;&amp;n%<span class="number">5</span>&gt;<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;Fishing in day %d&quot;</span>, n);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;Drying in day %d&quot;</span>, n);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-73-比较大小"><a href="#7-73-比较大小" class="headerlink" title="7-73 比较大小"></a><strong>7-73 比较大小</strong></h1><p>本题要求将输入的任意3个整数从小到大输出。</p>
<h3 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出3个整数，其间以空格分隔。</p>
<h3 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中将3个整数从小到大输出，其间以“-&gt;”相连。</p>
<h3 id="输入样例-3"><a href="#输入样例-3" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 2 8</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-3"><a href="#输出样例-3" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2-&gt;4-&gt;8</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-70"><a href="#代码如下：-70" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>, c = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">	<span class="keyword">if</span>(a &gt; b) &#123;</span><br><span class="line">		<span class="type">int</span> t = a;</span><br><span class="line">		a = b;</span><br><span class="line">		b = t;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (a &gt; c) &#123;</span><br><span class="line">		<span class="type">int</span> t = a;</span><br><span class="line">		a = c;</span><br><span class="line">		c = t;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (b &gt; c) &#123;</span><br><span class="line">		<span class="type">int</span> t = b;</span><br><span class="line">		b = c;</span><br><span class="line">		c = t;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d-&gt;%d-&gt;%d&quot;</span>, a, b, c);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-74-三角形判断"><a href="#7-74-三角形判断" class="headerlink" title="7-74 三角形判断"></a><strong>7-74 三角形判断</strong></h1><p>给定平面上任意三个点的坐标(<em>x</em>1,<em>y</em>1)、(<em>x</em>2,<em>y</em>2)、(<em>x</em>3,<em>y</em>3)，检验它们能否构成三角形。</p>
<h3 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中顺序给出六个[−100,100]范围内的数字，即三个点的坐标<em>x</em>1、<em>y</em>1、<em>x</em>2、<em>y</em>2、<em>x</em>3、<em>y</em>3。</p>
<h3 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>若这3个点不能构成三角形，则在一行中输出“Impossible”；若可以，则在一行中输出该三角形的周长和面积，格式为“L = 周长, A = 面积”，输出到小数点后2位。</p>
<h3 id="输入样例1"><a href="#输入样例1" class="headerlink" title="输入样例1:"></a>输入样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 5 6 9 7 8</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1"><a href="#输出样例1" class="headerlink" title="输出样例1:"></a>输出样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">L = 10.13, A = 3.00</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2"><a href="#输入样例2" class="headerlink" title="输入样例2:"></a>输入样例2:</h3><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">4 </span><span class="number">6</span> <span class="number">8</span> <span class="number">12</span> <span class="number">12</span> <span class="number">18</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例2"><a href="#输出样例2" class="headerlink" title="输出样例2:"></a>输出样例2:</h3><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Impossible</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>200 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-71"><a href="#代码如下：-71" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">double</span> <span class="title function_">judge</span><span class="params">(<span class="type">double</span> a, <span class="type">double</span> b, <span class="type">double</span> c)</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> (a + b &gt; c &amp;&amp; a + c &gt; b &amp;&amp; b + c &gt; a)	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> <span class="title function_">side</span><span class="params">(<span class="type">double</span> x1, <span class="type">double</span> y1, <span class="type">double</span> x2, <span class="type">double</span> y2)</span> &#123;</span><br><span class="line">	<span class="type">double</span> x = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);</span><br><span class="line">	<span class="comment">//printf(&quot;x is %lf\n&quot;, x);</span></span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">sqrt</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">double</span> x1=<span class="number">0</span>,y1=<span class="number">0</span>,x2=<span class="number">0</span>,y2=<span class="number">0</span>,x3=<span class="number">0</span>,y3=<span class="number">0</span>;</span><br><span class="line">	<span class="type">double</span> a = <span class="number">0</span>, b = <span class="number">0</span>, c = <span class="number">0</span>;</span><br><span class="line">	<span class="type">double</span> s = <span class="number">0</span>, area = <span class="number">0</span>, per = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf %lf %lf %lf %lf&quot;</span>, &amp;x1,&amp;y1,&amp;x2,&amp;y2,&amp;x3,&amp;y3);</span><br><span class="line">	a = side(x1, y1, x2, y2);</span><br><span class="line">	b = side(x1, y1, x3, y3);</span><br><span class="line">	c = side(x2, y2, x3, y3);</span><br><span class="line">	<span class="comment">//printf(&quot;a,b,c is %lf %lf %lf\n&quot;, a, b, c);</span></span><br><span class="line">	<span class="keyword">if</span> (!judge(a, b, c))</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Impossible&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		per = a + b + c;</span><br><span class="line">		s = per / <span class="number">2.0</span>;</span><br><span class="line">		area = s * (s - a) * (s - b) * (s - c);</span><br><span class="line">		area = <span class="built_in">sqrt</span>(area);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;L = %.2lf, A = %.2lf&quot;</span>, per, area);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-75-整数152的各位数字"><a href="#7-75-整数152的各位数字" class="headerlink" title="7-75 整数152的各位数字"></a><strong>7-75 整数152的各位数字</strong></h1><p>本题要求编写程序，输出整数152的个位数字、十位数字和百位数字的值。</p>
<h3 id="输入格式：-1"><a href="#输入格式：-1" class="headerlink" title="输入格式："></a>输入格式：</h3><p>本题无输入。</p>
<h3 id="输出格式：-1"><a href="#输出格式：-1" class="headerlink" title="输出格式："></a>输出格式：</h3><p>按照以下格式输出：</p>
<figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">152 </span>= 个位数字 + 十位数字*<span class="number">10</span> + 百位数字*<span class="number">100</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-72"><a href="#代码如下：-72" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;152 = 2 + 5*10 + 1*100&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-76-计算分段函数-3"><a href="#7-76-计算分段函数-3" class="headerlink" title="7-76 计算分段函数[3]"></a><strong>7-76 计算分段函数[3]</strong></h1><p>本题目要求计算下列分段函数<em>f</em>(<em>x</em>)的值：</p>
<p><img src="http://image.camilleferros.top/Image7_76.jpg" alt=""></p>
<h3 id="输入格式：-2"><a href="#输入格式：-2" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出实数x。</p>
<h3 id="输出格式：-2"><a href="#输出格式：-2" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中按“f(x) = result”的格式输出，其中x与result都保留一位小数。</p>
<h3 id="输入样例1：-1"><a href="#输入样例1：-1" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1：-1"><a href="#输出样例1：-1" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f(10.0) = 0.1</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2：-1"><a href="#输入样例2：-1" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">234</span><br></pre></td></tr></table></figure>
<h3 id="输出样例2：-1"><a href="#输出样例2：-1" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">f</span>(<span class="number">234</span>.<span class="number">0</span>) = <span class="number">234</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-73"><a href="#代码如下：-73" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">double</span> sum = <span class="number">0</span>,x=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;x);</span><br><span class="line">	<span class="keyword">if</span> (x == <span class="number">10</span>)	sum = <span class="number">1.0</span> / x;</span><br><span class="line">	<span class="keyword">else</span> sum = x;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;f(%.1lf) = %.1lf&quot;</span>, x, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-77-求1到100的和"><a href="#7-77-求1到100的和" class="headerlink" title="7-77 求1到100的和"></a><strong>7-77 求1到100的和</strong></h1><p>本题要求编写程序，计算表达式 1 + 2 + 3 + … + 100 的值。</p>
<h3 id="输入格式：-3"><a href="#输入格式：-3" class="headerlink" title="输入格式："></a>输入格式：</h3><p>本题无输入。</p>
<h3 id="输出格式：-3"><a href="#输出格式：-3" class="headerlink" title="输出格式："></a>输出格式：</h3><p>按照以下格式输出：</p>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">sum</span> <span class="operator">=</span> 累加和</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-74"><a href="#代码如下：-74" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">		sum += i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;sum = %d&quot;</span>, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-78-计算油费"><a href="#7-78-计算油费" class="headerlink" title="7-78 计算油费"></a><strong>7-78 计算油费</strong></h1><p>现在90号汽油6.95元/升、93号汽油7.44元/升、97号汽油7.93元/升。为吸引顾客，某自动加油站推出了“自助服务”和“协助服务”两个服务等级，分别可得到5%和3%的折扣。</p>
<p>本题要求编写程序，根据输入顾客的加油量a，汽油品种b（90、93或97）和服务类型c（m - 自助，e - 协助），计算并输出应付款。</p>
<h3 id="输入格式：-4"><a href="#输入格式：-4" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出两个整数和一个字符，分别表示顾客的加油量a，汽油品种b（90、93或97）和服务类型c（m - 自助，e - 协助）。</p>
<h3 id="输出格式：-4"><a href="#输出格式：-4" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出应付款额，保留小数点后2位。</p>
<h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">40 97 m</span><br></pre></td></tr></table></figure>
<h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">301.34</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-75"><a href="#代码如下：-75" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> t= <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="type">double</span> a = <span class="number">6.95</span>, b = <span class="number">7.44</span>, c = <span class="number">7.93</span>, x = <span class="number">0</span>, oil = <span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf %c&quot;</span>, &amp;x,&amp;oil,&amp;t);</span><br><span class="line">    <span class="keyword">if</span> (oil == <span class="number">90</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="string">&#x27;m&#x27;</span>)  sum = x * a * <span class="number">0.95</span>;</span><br><span class="line">        <span class="keyword">else</span> sum = x * a * <span class="number">0.97</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (oil == <span class="number">93</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="string">&#x27;m&#x27;</span>)  sum = x * b * <span class="number">0.95</span>;</span><br><span class="line">        <span class="keyword">else</span> sum = x * b * <span class="number">0.97</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">if</span> (t == <span class="string">&#x27;m&#x27;</span>)  sum = x * c * <span class="number">0.95</span>;</span><br><span class="line">        <span class="keyword">else</span> sum = x * c * <span class="number">0.97</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-79-N个数求和"><a href="#7-79-N个数求和" class="headerlink" title="7-79 N个数求和"></a><strong>7-79 N个数求和</strong></h1><p>本题的要求很简单，就是求<code>N</code>个数字的和。麻烦的是，这些数字是以有理数<code>分子/分母</code>的形式给出的，你输出的和也必须是有理数的形式。</p>
<h3 id="输入格式：-5"><a href="#输入格式：-5" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出一个正整数<code>N</code>（≤100）。随后一行按格式<code>a1/b1 a2/b2 ...</code>给出<code>N</code>个有理数。题目保证所有分子和分母都在长整型范围内。另外，负数的符号一定出现在分子前面。</p>
<h3 id="输出格式：-5"><a href="#输出格式：-5" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出上述数字和的最简形式 —— 即将结果写成<code>整数部分 分数部分</code>，其中分数部分写成<code>分子/分母</code>，要求分子小于分母，且它们没有公因子。如果结果的整数部分为0，则只输出分数部分。</p>
<h3 id="输入样例1：-2"><a href="#输入样例1：-2" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">2/5 4/15 1/30 -2/60 8/3</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1：-2"><a href="#输出样例1：-2" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 1/3</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2：-2"><a href="#输入样例2：-2" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">2</span></span><br><span class="line"><span class="attribute">4</span>/<span class="number">3</span> <span class="number">2</span>/<span class="number">3</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例2：-2"><a href="#输出样例2：-2" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>
<h3 id="输入样例3："><a href="#输入样例3：" class="headerlink" title="输入样例3："></a>输入样例3：</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">3</span></span><br><span class="line"><span class="attribute">1</span>/<span class="number">3</span> -<span class="number">1</span>/<span class="number">6</span> <span class="number">1</span>/<span class="number">8</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例3："><a href="#输出样例3：" class="headerlink" title="输出样例3："></a>输出样例3：</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">7</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-76"><a href="#代码如下：-76" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//求最大公倍数数</span></span><br><span class="line"><span class="type">long</span> <span class="title function_">lcd</span><span class="params">(<span class="type">long</span> a, <span class="type">long</span> b)</span> &#123;</span><br><span class="line">    <span class="type">long</span> m = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b) m = a;</span><br><span class="line">    <span class="keyword">else</span> m = b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">long</span> i = m; i &lt;= a * b; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i % a == <span class="number">0</span> &amp;&amp; i % b == <span class="number">0</span>)   <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//最小公约数</span></span><br><span class="line"><span class="type">long</span> <span class="title function_">gcd</span><span class="params">(<span class="type">long</span> a, <span class="type">long</span> b)</span> &#123;</span><br><span class="line">    <span class="type">long</span> m = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; <span class="number">0</span>)  a = -a;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; b) m = a;</span><br><span class="line">    <span class="keyword">else</span> m = b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">long</span> i = m; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a % i == <span class="number">0</span> &amp;&amp; b % i == <span class="number">0</span>)  <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//化简</span></span><br><span class="line"><span class="type">long</span> <span class="title function_">gcdmyself</span><span class="params">(<span class="type">long</span>* a, <span class="type">long</span>* b)</span> &#123;</span><br><span class="line">    <span class="type">long</span> mlcd = gcd(*a, *b);</span><br><span class="line">    <span class="comment">//printf(&quot;mcld is %ld\n&quot;, mlcd);</span></span><br><span class="line">    *a = *a / mlcd;</span><br><span class="line">    *b = *b / mlcd;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">long</span>* n, <span class="type">long</span>* a, <span class="type">long</span>* b, <span class="type">long</span>* a1, <span class="type">long</span>* b1)</span> &#123;</span><br><span class="line">    <span class="type">long</span> blcd = lcd(*b, *b1);</span><br><span class="line">    <span class="type">long</span> alcd = (blcd / *b) * (*a) + (blcd / *b1) * (*a1) + (*n) * blcd;</span><br><span class="line">    <span class="type">long</span> tgcd = gcd(alcd,blcd);</span><br><span class="line">    <span class="keyword">if</span> (alcd != <span class="number">0</span>) &#123;</span><br><span class="line">        *a = alcd / tgcd;</span><br><span class="line">        *b = blcd / tgcd;</span><br><span class="line">        *n = *a / (*b);</span><br><span class="line">        *a = *a - (*n) * (*b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        *n = <span class="number">0</span>;</span><br><span class="line">        *a = <span class="number">0</span>;</span><br><span class="line">        *b = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">put</span><span class="params">(<span class="type">long</span> num, <span class="type">long</span> a, <span class="type">long</span> b)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="number">0</span> &amp;&amp; num == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (num != <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%ld %ld/%ld&quot;</span>, num, a, b);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%ld/%ld&quot;</span>, a, b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%ld&quot;</span>, num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">long</span> a[<span class="number">101</span>] = &#123; <span class="number">0</span> &#125;, b[<span class="number">101</span>] = &#123; <span class="number">0</span> &#125;, num = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%ld/%ld&quot;</span>, &amp;a[<span class="number">1</span>], &amp;b[<span class="number">1</span>]);</span><br><span class="line">    gcdmyself(&amp;a[<span class="number">1</span>], &amp;b[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%ld/%ld&quot;</span>, &amp;a[i], &amp;b[i]);</span><br><span class="line">        gcdmyself(&amp;a[i], &amp;b[i]);    </span><br><span class="line">        add(&amp;num, &amp;a[<span class="number">1</span>], &amp;b[<span class="number">1</span>], &amp;a[i], &amp;b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    put(num, a[<span class="number">1</span>], b[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-80-打折"><a href="#7-80-打折" class="headerlink" title="7-80 打折"></a><strong>7-80 打折</strong></h1><p>去商场淘打折商品时，计算打折以后的价钱是件颇费脑子的事情。例如原价 ￥988，标明打 7 折，则折扣价应该是 ￥988 x 70% = ￥691.60。本题就请你写个程序替客户计算折扣价。</p>
<h3 id="输入格式：-6"><a href="#输入格式：-6" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出商品的原价（不超过1万元的正整数）和折扣（为[1, 9]区间内的整数），其间以空格分隔。</p>
<h3 id="输出格式：-6"><a href="#输出格式：-6" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出商品的折扣价，保留小数点后 2 位。</p>
<h3 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">988 7</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">691.60</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-77"><a href="#代码如下：-77" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>, price = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;price);</span><br><span class="line">    sum = n * <span class="number">1.0</span> * price / <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.02lf&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-81-2018我们要赢"><a href="#7-81-2018我们要赢" class="headerlink" title="7-81 2018我们要赢"></a><strong>7-81 2018我们要赢</strong></h1><p>2018年天梯赛的注册邀请码是“2018wmyy”，意思就是“2018我们要赢”。本题就请你用汉语拼音输出这句话。</p>
<h3 id="输入格式：-7"><a href="#输入格式：-7" class="headerlink" title="输入格式："></a>输入格式：</h3><p>本题没有输入。</p>
<h3 id="输出格式：-7"><a href="#输出格式：-7" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在第一行中输出：“2018”；第二行中输出：“wo3 men2 yao4 ying2 !”。</p>
<h3 id="输入样例：-2"><a href="#输入样例：-2" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">本题没有输入。</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-2"><a href="#输出样例：-2" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2018</span><br><span class="line">wo3 men2 yao4 ying2 !</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-78"><a href="#代码如下：-78" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2018\nwo3 men2 yao4 ying2 !&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-82-打印沙漏"><a href="#7-82-打印沙漏" class="headerlink" title="7-82 打印沙漏"></a><strong>7-82 打印沙漏</strong></h1><p>本题要求你写个程序把给定的符号打印成沙漏的形状。例如给定17个“*”，要求按下列格式打印</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">*****</span><br><span class="line"> ***</span><br><span class="line">  *</span><br><span class="line"> ***</span><br><span class="line">*****</span><br></pre></td></tr></table></figure>
<p>所谓“沙漏形状”，是指每行输出奇数个符号；各行符号中心对齐；相邻两行符号数差2；符号数先从大到小顺序递减到1，再从小到大顺序递增；首尾符号数相等。</p>
<p>给定任意N个符号，不一定能正好组成一个沙漏。要求打印出的沙漏能用掉尽可能多的符号。</p>
<h3 id="输入格式-5"><a href="#输入格式-5" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行给出1个正整数N（≤1000）和一个符号，中间以空格分隔。</p>
<h3 id="输出格式-5"><a href="#输出格式-5" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>首先打印出由给定符号组成的最大的沙漏形状，最后在一行中输出剩下没用掉的符号数。</p>
<h3 id="输入样例-4"><a href="#输入样例-4" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">19 *</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-4"><a href="#输出样例-4" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*****</span><br><span class="line"> ***</span><br><span class="line">  *</span><br><span class="line"> ***</span><br><span class="line">*****</span><br><span class="line">2</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-79"><a href="#代码如下：-79" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> c=<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="type">int</span> h = <span class="number">1</span>, n = <span class="number">0</span>,sum=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %c&quot;</span>, &amp;n,&amp;c);</span><br><span class="line">    <span class="keyword">while</span>(sum&lt;=n)&#123;</span><br><span class="line">        h++;</span><br><span class="line">        sum += (<span class="number">2</span> * h - <span class="number">1</span>) * <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sum -= (<span class="number">2</span> * h - <span class="number">1</span>) * <span class="number">2</span>;</span><br><span class="line">    h--;</span><br><span class="line">    <span class="comment">//printf(&quot;h is %d\n&quot;, h);</span></span><br><span class="line">    <span class="comment">//上半部分</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= h; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; i;++j) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">2</span>*h<span class="number">-2</span>*i+<span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//printf(&quot;h is %d\n&quot;, h);</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= h<span class="number">-1</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;=h-i<span class="number">-1</span>; ++j) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">2</span>*i+<span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">abs</span>(n - sum));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-83-币值转换"><a href="#7-83-币值转换" class="headerlink" title="7-83 币值转换"></a><strong>7-83 币值转换</strong></h1><p>输入一个整数（位数不超过9位）代表一个人民币值（单位为元），请转换成财务要求的大写中文格式。如23108元，转换后变成“贰万叁仟壹百零捌”元。为了简化输出，用小写英文字母a-j顺序代表大写数字0-9，用S、B、Q、W、Y分别代表拾、百、仟、万、亿。于是23108元应被转换输出为“cWdQbBai”元。</p>
<h3 id="输入格式：-8"><a href="#输入格式：-8" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个不超过9位的非负整数。</p>
<h3 id="输出格式：-8"><a href="#输出格式：-8" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出转换后的结果。注意“零”的用法必须符合中文习惯。</p>
<h3 id="输入样例1：-3"><a href="#输入样例1：-3" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">813227345</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1：-3"><a href="#输出样例1：-3" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iYbQdBcScWhQdBeSf</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2：-3"><a href="#输入样例2：-3" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="number">6900</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例2：-3"><a href="#输出样例2：-3" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">gQjB</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-80"><a href="#代码如下：-80" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">char</span> num[<span class="number">10</span>] = &#123; <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;j&#x27;</span> &#125;;</span><br><span class="line"><span class="type">char</span> Cnum[<span class="number">5</span>] = &#123; <span class="string">&#x27;S&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;Q&#x27;</span>,<span class="string">&#x27;W&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>&#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> n[<span class="number">10</span>] = &#123; <span class="string">&#x27; &#x27;</span> &#125;;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> t=<span class="number">0</span>,dit=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;n);</span><br><span class="line">    dit = <span class="built_in">strlen</span>(n);</span><br><span class="line">    <span class="comment">//printf(&quot;dis %d\n&quot;, dit);</span></span><br><span class="line">    <span class="comment">//数字为0的情况</span></span><br><span class="line">    <span class="keyword">if</span> (dit == <span class="number">1</span> &amp;&amp; n[<span class="number">0</span>] - <span class="string">&#x27;0&#x27;</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;dit; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n[i]-<span class="string">&#x27;0&#x27;</span> != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(dit-i==<span class="number">9</span>)    <span class="built_in">printf</span>(<span class="string">&quot;%cY&quot;</span>, num[n[i] - <span class="string">&#x27;0&#x27;</span>]);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (dit - i &gt; <span class="number">5</span> &amp;&amp; dit-i &lt;= <span class="number">8</span>) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%c%c&quot;</span>, num[n[i] - <span class="string">&#x27;0&#x27;</span>], Cnum[dit - i - <span class="number">6</span>]);</span><br><span class="line">               </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (dit-i == <span class="number">5</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (dit-i == <span class="number">5</span>)  <span class="built_in">printf</span>(<span class="string">&quot;%cW&quot;</span>, num[n[i] - <span class="string">&#x27;0&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (dit - i &gt;<span class="number">0</span> &amp;&amp; dit - i &lt;<span class="number">5</span>) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%c%c&quot;</span>, num[n[i] - <span class="string">&#x27;0&#x27;</span>], Cnum[dit - i - <span class="number">2</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, num[n[i] - <span class="string">&#x27;0&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (dit - i == <span class="number">5</span>)    <span class="built_in">printf</span>(<span class="string">&quot;W&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">int</span> flag = <span class="number">1</span>,j=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (j = i+<span class="number">1</span>; j &lt; dit; j++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (n[j] != n[i]) &#123;</span><br><span class="line">                        flag = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (flag)    i = j;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">                    i = j<span class="number">-1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-84-连续因子"><a href="#7-84-连续因子" class="headerlink" title="7-84 连续因子"></a><strong>7-84 连续因子</strong></h1><p>一个正整数 <em>N</em> 的因子中可能存在若干连续的数字。例如 630 可以分解为 3×5×6×7，其中 5、6、7 就是 3 个连续的数字。给定任一正整数 <em>N</em>，要求编写程序求出最长连续因子的个数，并输出最小的连续因子序列。</p>
<h3 id="输入格式：-9"><a href="#输入格式：-9" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个正整数 <em>N</em>（1&lt;<em>N</em>&lt;231）。</p>
<h3 id="输出格式：-9"><a href="#输出格式：-9" class="headerlink" title="输出格式："></a>输出格式：</h3><p>首先在第 1 行输出最长连续因子的个数；然后在第 2 行中按 <code>因子1*因子2*……*因子k</code> 的格式输出最小的连续因子序列，其中因子按递增顺序输出，1 不算在内。</p>
<h3 id="输入样例：-3"><a href="#输入样例：-3" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">630</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-3"><a href="#输出样例：-3" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">5*6*7</span><br></pre></td></tr></table></figure>
<p><strong>鸣谢用户 漏穿雪 补充数据！</strong></p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-81"><a href="#代码如下：-81" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="type">int</span> num, temp;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>, &amp;num);</span><br><span class="line">    <span class="type">int</span> first = <span class="number">0</span>, len = <span class="number">0</span>, maxn = <span class="built_in">sqrt</span>(num) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= maxn; i++) &#123;</span><br><span class="line">        <span class="type">int</span> j;</span><br><span class="line">        temp = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (j = i; j &lt;= maxn; j++) &#123;</span><br><span class="line">            temp *= j;</span><br><span class="line">            <span class="keyword">if</span> (num % temp != <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (j - i &gt; len) &#123;</span><br><span class="line">            len = j - i;</span><br><span class="line">            first = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (first == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1\n%ld&quot;</span>, num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, len);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, first + i);</span><br><span class="line">            <span class="keyword">if</span> (i != len - <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-85-温度转换"><a href="#7-85-温度转换" class="headerlink" title="7-85 温度转换"></a><strong>7-85 温度转换</strong></h1><p>本题要求编写程序，计算华氏温度150°F对应的摄氏温度。计算公式：<em>C</em>=5×(<em>F</em>−32)/9，式中：<em>C</em>表示摄氏温度，<em>F</em>表示华氏温度，输出数据要求为整型。</p>
<h3 id="输入格式-6"><a href="#输入格式-6" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>本题目没有输入。</p>
<h3 id="输出格式-6"><a href="#输出格式-6" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>按照下列格式输出</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">fahr</span> = <span class="number">150</span>, celsius = 计算所得摄氏温度的整数值</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-82"><a href="#代码如下：-82" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;fahr = 150, celsius = %d&quot;</span>, <span class="number">5</span> * (<span class="number">150</span> - <span class="number">32</span>) / <span class="number">9</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-86-整数四则运算"><a href="#7-86-整数四则运算" class="headerlink" title="7-86 整数四则运算"></a><strong>7-86 整数四则运算</strong></h1><p>本题要求编写程序，计算2个正整数的和、差、积、商并输出。题目保证输入和输出全部在整型范围内。</p>
<h3 id="输入格式-7"><a href="#输入格式-7" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出2个正整数A和B。</p>
<h3 id="输出格式-7"><a href="#输出格式-7" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在4行中按照格式“A 运算符 B = 结果”顺序输出和、差、积、商。</p>
<h3 id="输入样例-5"><a href="#输入样例-5" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 2</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-5"><a href="#输出样例-5" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 + 2 = 5</span><br><span class="line">3 - 2 = 1</span><br><span class="line">3 * 2 = 6</span><br><span class="line">3 / 2 = 1</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-83"><a href="#代码如下：-83" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d + %d = %d\n%d - %d = %d\n%d * %d = %d\n%d / %d = %d&quot;</span>, a, b, a + b, a, b, a - b, a, b, a * b, a, b, a / b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-87-计算分段函数-1"><a href="#7-87-计算分段函数-1" class="headerlink" title="7-87 计算分段函数[1]"></a><strong>7-87 计算分段函数[1]</strong></h1><p>本题目要求计算下列分段函数<em>f</em>(<em>x</em>)的值：</p>
<p><img src="http://image.camilleferros.top/Image7_81.jpg" alt=""></p>
<h3 id="输入格式-8"><a href="#输入格式-8" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出实数x。</p>
<h3 id="输出格式-8"><a href="#输出格式-8" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中按“f(x) = result”的格式输出，其中x与result都保留一位小数。</p>
<h3 id="输入样例1-1"><a href="#输入样例1-1" class="headerlink" title="输入样例1:"></a>输入样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1-1"><a href="#输出样例1-1" class="headerlink" title="输出样例1:"></a>输出样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f(10.0) = 0.1</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2-1"><a href="#输入样例2-1" class="headerlink" title="输入样例2:"></a>输入样例2:</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure>
<h3 id="输出样例2-1"><a href="#输出样例2-1" class="headerlink" title="输出样例2:"></a>输出样例2:</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">f</span>(<span class="number">0</span>.<span class="number">0</span>) = <span class="number">0</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-84"><a href="#代码如下：-84" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">double</span> x = <span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;x);</span><br><span class="line">	<span class="keyword">if</span> (x != <span class="number">0</span>)	sum = <span class="number">1</span> / x;</span><br><span class="line">	<span class="keyword">else</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;f(%.01lf) = %.01lf&quot;</span>,x,sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-88-计算分段函数-2"><a href="#7-88-计算分段函数-2" class="headerlink" title="7-88 计算分段函数[2]"></a><strong>7-88 计算分段函数[2]</strong></h1><p>本题目要求计算下列分段函数<em>f</em>(<em>x</em>)的值：</p>
<p><img src="http://image.camilleferros.top/Image7_88.jpg" alt=""></p>
<p>注：可在头文件中包含<code>math.h</code>，并调用<code>sqrt</code>函数求平方根，调用<code>pow</code>函数求幂。</p>
<h3 id="输入格式-9"><a href="#输入格式-9" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出实数x。</p>
<h3 id="输出格式-9"><a href="#输出格式-9" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中按“f(x) = result”的格式输出，其中x与result都保留两位小数。</p>
<h3 id="输入样例1-2"><a href="#输入样例1-2" class="headerlink" title="输入样例1:"></a>输入样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1-2"><a href="#输出样例1-2" class="headerlink" title="输出样例1:"></a>输出样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f(10.00) = 3.16</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2-2"><a href="#输入样例2-2" class="headerlink" title="输入样例2:"></a>输入样例2:</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">-0.5</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例2-2"><a href="#输出样例2-2" class="headerlink" title="输出样例2:"></a>输出样例2:</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">f</span>(-<span class="number">0</span>.<span class="number">50</span>) = -<span class="number">2</span>.<span class="number">75</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-85"><a href="#代码如下：-85" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">double</span> x = <span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;x);</span><br><span class="line">	<span class="keyword">if</span> (x &gt;= <span class="number">0</span>)	sum = <span class="built_in">sqrt</span>(x);</span><br><span class="line">	<span class="keyword">else</span> sum = <span class="built_in">pow</span>(x + <span class="number">1</span>, <span class="number">2</span>) + <span class="number">2</span> * x + <span class="number">1</span> / x;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;f(%.02lf) = %.02lf&quot;</span>,x,sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-89-阶梯电价"><a href="#7-89-阶梯电价" class="headerlink" title="7-89 阶梯电价"></a><strong>7-89 阶梯电价</strong></h1><p>为了提倡居民节约用电，某省电力公司执行“阶梯电价”，安装一户一表的居民用户电价分为两个“阶梯”：月用电量50千瓦时（含50千瓦时）以内的，电价为0.53元/千瓦时；超过50千瓦时的，超出部分的用电量，电价上调0.05元/千瓦时。请编写程序计算电费。</p>
<h3 id="输入格式-10"><a href="#输入格式-10" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出某用户的月用电量（单位：千瓦时）。</p>
<h3 id="输出格式-10"><a href="#输出格式-10" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中输出该用户应支付的电费（元），结果保留两位小数，格式如：“cost = 应付电费值”；若用电量小于0，则输出”Invalid Value!”。</p>
<h3 id="输入样例1-3"><a href="#输入样例1-3" class="headerlink" title="输入样例1:"></a>输入样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1-3"><a href="#输出样例1-3" class="headerlink" title="输出样例1:"></a>输出样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cost = 5.30</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2-3"><a href="#输入样例2-3" class="headerlink" title="输入样例2:"></a>输入样例2:</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">100</span><br></pre></td></tr></table></figure>
<h3 id="输出样例2-3"><a href="#输出样例2-3" class="headerlink" title="输出样例2:"></a>输出样例2:</h3><figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">cost</span> <span class="operator">=</span> <span class="number">55.50</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-86"><a href="#代码如下：-86" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="comment">//为了提倡居民节约用电，某省电力公司执行“阶梯电价”，安装一户一表的居民用户电价分为两个“阶梯”：</span></span><br><span class="line"><span class="comment">//月用电量50千瓦时（含50千瓦时）以内的，电价为0.53元 / 千瓦时；</span></span><br><span class="line"><span class="comment">//超过50千瓦时的，超出部分的用电量，电价上调0.05元 / 千瓦时。请编写程序计算电费。</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">double</span> x = <span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;x);</span><br><span class="line">	<span class="keyword">if</span> (x &lt;= <span class="number">50</span>&amp;&amp;x&gt;<span class="number">0</span>)	sum = <span class="number">0.53</span> * x;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(x&gt;<span class="number">50</span>)&#123;</span><br><span class="line">		sum = <span class="number">0.53</span> * <span class="number">50</span>;</span><br><span class="line">		sum += (x - <span class="number">50</span>) * <span class="number">0.58</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Invalid Value!&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;cost = %.02lf&quot;</span>,sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-90-统计字符"><a href="#7-90-统计字符" class="headerlink" title="7-90 统计字符"></a><strong>7-90 统计字符</strong></h1><p>本题要求编写程序，输入10个字符，统计其中英文字母、空格或回车、数字字符和其他字符的个数。</p>
<h3 id="输入格式-11"><a href="#输入格式-11" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入为10个字符。最后一个回车表示输入结束，不算在内。</p>
<h3 id="输出格式-11"><a href="#输出格式-11" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行内按照</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">letter</span> = 英文字母个数, blank = 空格或回车个数, digit = 数字字符个数, other = 其他字符个数</span><br></pre></td></tr></table></figure>
<p>的格式输出。</p>
<h3 id="输入样例-6"><a href="#输入样例-6" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">aZ &amp;</span><br><span class="line">09 Az</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-6"><a href="#输出样例-6" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">letter = 4, blank = 3, digit = 2, other = 1</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-87"><a href="#代码如下：-87" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> let = <span class="number">0</span>, blk = <span class="number">0</span>, dig = <span class="number">0</span>, other = <span class="number">0</span>;</span><br><span class="line">	<span class="type">char</span> str[<span class="number">11</span>] = &#123; <span class="string">&#x27; &#x27;</span> &#125;;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; ++i) &#123;</span><br><span class="line">		str[i] = getchar();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(str); ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> ((str[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; str[i] &lt;= <span class="string">&#x27;Z&#x27;</span>) || (str[i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; str[i] &lt;= <span class="string">&#x27;z&#x27;</span>))	let++;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (str[i] == <span class="string">&#x27; &#x27;</span> || str[i] == <span class="string">&#x27;\n&#x27;</span>)	blk++;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (str[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; str[i] &lt;= <span class="string">&#x27;9&#x27;</span>)	dig++;</span><br><span class="line">		<span class="keyword">else</span> other++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;letter = %d, blank = %d, digit = %d, other = %d&quot;</span>,let,blk,dig,other);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-91-输出闰年"><a href="#7-91-输出闰年" class="headerlink" title="7-91 输出闰年"></a><strong>7-91 输出闰年</strong></h1><p>输出21世纪中截止某个年份以来的所有闰年年份。注意：闰年的判别条件是该年年份能被4整除但不能被100整除、或者能被400整除。</p>
<h3 id="输入格式-12"><a href="#输入格式-12" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出21世纪的某个截止年份。</p>
<h3 id="输出格式-12"><a href="#输出格式-12" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>逐行输出满足条件的所有闰年年份，即每个年份占一行。输入若非21世纪的年份则输出”Invalid year!”。若不存在任何闰年，则输出“None”。</p>
<h3 id="输入样例1-4"><a href="#输入样例1-4" class="headerlink" title="输入样例1:"></a>输入样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2048</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1-4"><a href="#输出样例1-4" class="headerlink" title="输出样例1:"></a>输出样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2004</span><br><span class="line">2008</span><br><span class="line">2012</span><br><span class="line">2016</span><br><span class="line">2020</span><br><span class="line">2024</span><br><span class="line">2028</span><br><span class="line">2032</span><br><span class="line">2036</span><br><span class="line">2040</span><br><span class="line">2044</span><br><span class="line">2048</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2-4"><a href="#输入样例2-4" class="headerlink" title="输入样例2:"></a>输入样例2:</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="number">2000</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例2-4"><a href="#输出样例2-4" class="headerlink" title="输出样例2:"></a>输出样例2:</h3><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">Invalid <span class="built_in">year</span>!</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-88"><a href="#代码如下：-88" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> year = <span class="number">0</span>,flag=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;year);</span><br><span class="line">	<span class="keyword">if</span> (year &gt; <span class="number">2000</span> &amp;&amp; year &lt;= <span class="number">2100</span>) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2001</span>; i &lt;= year; ++i) &#123;</span><br><span class="line">			<span class="keyword">if</span> (i % <span class="number">400</span> == <span class="number">0</span> || (i % <span class="number">4</span> == <span class="number">00</span> &amp;&amp; i % <span class="number">100</span> != <span class="number">0</span>)) &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line">				flag = <span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (!flag)	<span class="built_in">printf</span>(<span class="string">&quot;None&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Invalid year!&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-92-特殊a串数列求和"><a href="#7-92-特殊a串数列求和" class="headerlink" title="7-92 特殊a串数列求和"></a><strong>7-92 特殊a串数列求和</strong></h1><p>给定两个均不超过9的正整数<em>a</em>和<em>n</em>，要求编写程序求<em>a</em>+<em>aa</em>+<em>aaa</em>++⋯+<em>aa</em>⋯<em>a</em>（<em>n</em>个<em>a</em>）之和。</p>
<h3 id="输入格式：-10"><a href="#输入格式：-10" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出不超过9的正整数<em>a</em>和<em>n</em>。</p>
<h3 id="输出格式：-10"><a href="#输出格式：-10" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中按照“s = 对应的和”的格式输出。</p>
<h3 id="输入样例：-4"><a href="#输入样例：-4" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 3</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-4"><a href="#输出样例：-4" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">s = 246</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-89"><a href="#代码如下：-89" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">0</span>, n = <span class="number">0</span>,sum = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		sum += (<span class="built_in">pow</span>(<span class="number">10</span>, i) - <span class="number">1</span>) / <span class="number">9</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	sum *= a;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;s = %d&quot;</span>, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-93-水仙花数"><a href="#7-93-水仙花数" class="headerlink" title="7-93 水仙花数"></a><strong>7-93 水仙花数</strong></h1><p>水仙花数是指一个<em>N</em>位正整数（<em>N</em>≥3），它的每个位上的数字的<em>N</em>次幂之和等于它本身。例如：153=13+53+33。 本题要求编写程序,计算所有<em>N</em>位水仙花数。</p>
<h3 id="输入格式-13"><a href="#输入格式-13" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出一个正整数<em>N</em>（3≤<em>N</em>≤7）。</p>
<h3 id="输出格式-13"><a href="#输出格式-13" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>按递增顺序输出所有<em>N</em>位水仙花数，每个数字占一行。</p>
<h3 id="输入样例-7"><a href="#输入样例-7" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-7"><a href="#输出样例-7" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">153</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">407</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>2500 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-90"><a href="#代码如下：-90" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">mypow</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= b; ++i) &#123;</span><br><span class="line">		sum *= a;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">judge</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> mi)</span> &#123;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>, t = n;</span><br><span class="line">	<span class="keyword">while</span> (n) &#123;</span><br><span class="line">		sum += mypow(n % <span class="number">10</span>, mi);</span><br><span class="line">		<span class="keyword">if</span> (sum &gt; t)	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		n /= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (t == sum)	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = mypow(<span class="number">10</span>, n - <span class="number">1</span>); i &lt; mypow(<span class="number">10</span>, n); ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (judge(i,n))	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//if (judge(153))	printf(&quot;153\n&quot;);</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-94-计算华氏温度"><a href="#7-94-计算华氏温度" class="headerlink" title="7-94 计算华氏温度"></a><strong>7-94 计算华氏温度</strong></h1><p>本题要求编写程序，计算摄氏温度26°C 对应的华氏温度。计算公式：<em>F</em>=9×<em>C</em>/5+32，式中：<em>C</em>表示摄氏温度，<em>F</em>表示华氏温度，输出数据要求为整型。</p>
<h3 id="输入格式-14"><a href="#输入格式-14" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>本题目没有输入。</p>
<h3 id="输出格式-14"><a href="#输出格式-14" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>按照下列格式输出</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">celsius</span> = <span class="number">26</span>, fahr = 对应的华氏温度整数值</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-91"><a href="#代码如下：-91" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;celsius = 26, fahr = %d&quot;</span>, <span class="number">9</span> * <span class="number">26</span> / <span class="number">5</span> + <span class="number">32</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-95-计算火车运行时间"><a href="#7-95-计算火车运行时间" class="headerlink" title="7-95 计算火车运行时间"></a><strong>7-95 计算火车运行时间</strong></h1><p>本题要求根据火车的出发时间和达到时间，编写程序计算整个旅途所用的时间。</p>
<h3 id="输入格式：-11"><a href="#输入格式：-11" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出2个4位正整数，其间以空格分隔，分别表示火车的出发时间和到达时间。每个时间的格式为2位小时数（00-23）和2位分钟数（00-59），假设出发和到达在同一天内。</p>
<h3 id="输出格式：-11"><a href="#输出格式：-11" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行输出该旅途所用的时间，格式为“hh:mm”，其中hh为2位小时数、mm为2位分钟数。</p>
<h3 id="输入样例：-5"><a href="#输入样例：-5" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1201 1530</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-5"><a href="#输出样例：-5" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">03:29</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-92"><a href="#代码如下：-92" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">hh</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> x / <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">mm</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> x - hh(x) * <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> beg = <span class="number">0</span>, end = <span class="number">0</span>,h=<span class="number">0</span>,m=<span class="number">0</span>,flag=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;beg, &amp;end);</span><br><span class="line">	<span class="keyword">if</span> (mm(end) &lt; mm(beg)) &#123;</span><br><span class="line">		m = mm(end) + <span class="number">60</span> - mm(beg);</span><br><span class="line">		flag = <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		m = mm(end) - mm(beg);</span><br><span class="line">	h = hh(end) - hh(beg) - flag;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%02d:%02d&quot;</span>, h, m);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-96-计算存款利息"><a href="#7-96-计算存款利息" class="headerlink" title="7-96 计算存款利息"></a><strong>7-96 计算存款利息</strong></h1><p>本题目要求计算存款利息，计算公式为<em>in<strong>t</strong>eres**t</em>=<em>m<strong>o</strong>n**ey</em>×(1+<em>r<strong>a</strong>t**e</em>)<em>ye<strong>a</strong>r</em>−<em>m<strong>o</strong>n**ey</em>，其中<em>in<strong>t</strong>eres**t</em>为存款到期时的利息（税前），<em>m<strong>o</strong>n**ey</em>是存款金额，<em>ye<strong>a</strong>r</em>是存期，<em>r<strong>a</strong>t**e</em>是年利率。</p>
<h3 id="输入格式：-12"><a href="#输入格式：-12" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中顺序给出三个正实数<em>m<strong>o</strong>n**ey</em>、<em>ye<strong>a</strong>r</em>和<em>r<strong>a</strong>t**e</em>，以空格分隔。</p>
<h3 id="输出格式：-12"><a href="#输出格式：-12" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中按“interest = 利息”的格式输出，其中利息保留两位小数。</p>
<h3 id="输入样例：-6"><a href="#输入样例：-6" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1000 3 0.025</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-6"><a href="#输出样例：-6" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">interest = 76.89</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-93"><a href="#代码如下：-93" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">hh</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> x / <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">mm</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> x - hh(x) * <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">double</span> money = <span class="number">0</span>, year = <span class="number">0</span>, rate = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf %lf&quot;</span>, &amp;money, &amp;year, &amp;rate);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;interest = %.02lf&quot;</span>, <span class="built_in">pow</span>(<span class="number">1</span> + rate, year) * money - money);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-97-计算个人所得税"><a href="#7-97-计算个人所得税" class="headerlink" title="7-97 计算个人所得税"></a><strong>7-97 计算个人所得税</strong></h1><p>假设个人所得税为：税率×(工资−1600)。请编写程序计算应缴的所得税，其中税率定义为：</p>
<ul>
<li>当工资不超过1600时，税率为0；</li>
<li>当工资在区间(1600, 2500]时，税率为5%；</li>
<li>当工资在区间(2500, 3500]时，税率为10%；</li>
<li>当工资在区间(3500, 4500]时，税率为15%；</li>
<li>当工资超过4500时，税率为20%。</li>
</ul>
<h3 id="输入格式-15"><a href="#输入格式-15" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出非负工资。</p>
<h3 id="输出格式-15"><a href="#输出格式-15" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行输出个人所得税，精确到小数点后2位。</p>
<h3 id="输入样例1-5"><a href="#输入样例1-5" class="headerlink" title="输入样例1:"></a>输入样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1600</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1-5"><a href="#输出样例1-5" class="headerlink" title="输出样例1:"></a>输出样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0.00</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2-5"><a href="#输入样例2-5" class="headerlink" title="输入样例2:"></a>输入样例2:</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="number">1601</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例2-5"><a href="#输出样例2-5" class="headerlink" title="输出样例2:"></a>输出样例2:</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">0</span>.<span class="number">05</span></span><br></pre></td></tr></table></figure>
<h3 id="输入样例3"><a href="#输入样例3" class="headerlink" title="输入样例3:"></a>输入样例3:</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="number">3000</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例3"><a href="#输出样例3" class="headerlink" title="输出样例3:"></a>输出样例3:</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">140</span>.<span class="number">00</span></span><br></pre></td></tr></table></figure>
<h3 id="输入样例4"><a href="#输入样例4" class="headerlink" title="输入样例4:"></a>输入样例4:</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="number">4000</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例4"><a href="#输出样例4" class="headerlink" title="输出样例4:"></a>输出样例4:</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">360</span>.<span class="number">00</span></span><br></pre></td></tr></table></figure>
<h3 id="输入样例5"><a href="#输入样例5" class="headerlink" title="输入样例5:"></a>输入样例5:</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="number">5000</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例5"><a href="#输出样例5" class="headerlink" title="输出样例5:"></a>输出样例5:</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">680</span>.<span class="number">00</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-94"><a href="#代码如下：-94" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">double</span> money = <span class="number">0</span>, taxes = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;money);</span><br><span class="line">	<span class="keyword">if</span> (money &gt; <span class="number">1600</span> &amp;&amp; money &lt;= <span class="number">2500</span>)	taxes = (money<span class="number">-1600</span>)* <span class="number">0.05</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (money &gt; <span class="number">2500</span> &amp;&amp; money &lt;= <span class="number">3500</span>)	taxes = (money<span class="number">-1600</span>)* <span class="number">0.1</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (money &gt; <span class="number">3500</span> &amp;&amp; money &lt;= <span class="number">4500</span>)	taxes = (money<span class="number">-1600</span>)* <span class="number">0.15</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (money &gt; <span class="number">4500</span>)	taxes = (money<span class="number">-1600</span>)* <span class="number">0.2</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%.02lf&quot;</span>, taxes);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-98-两个数的简单计算器"><a href="#7-98-两个数的简单计算器" class="headerlink" title="7-98 两个数的简单计算器"></a><strong>7-98 两个数的简单计算器</strong></h1><p>本题要求编写一个简单计算器程序，可根据输入的运算符，对2个整数进行加、减、乘、除或求余运算。题目保证输入和输出均不超过整型范围。</p>
<h3 id="输入格式：-13"><a href="#输入格式：-13" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中依次输入操作数1、运算符、操作数2，其间以1个空格分隔。操作数的数据类型为整型，且保证除法和求余的分母非零。</p>
<h3 id="输出格式：-13"><a href="#输出格式：-13" class="headerlink" title="输出格式："></a>输出格式：</h3><p>当运算符为<code>+</code>、<code>-</code>、<code>*</code>、<code>/</code>、<code>%</code>时，在一行输出相应的运算结果。若输入是非法符号（即除了加、减、乘、除和求余五种运算符以外的其他符号）则输出<code>ERROR</code>。</p>
<h3 id="输入样例1：-4"><a href="#输入样例1：-4" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-7 / 2</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1：-4"><a href="#输出样例1：-4" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-3</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2：-4"><a href="#输入样例2：-4" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span>&amp; <span class="number">6</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例2：-4"><a href="#输出样例2：-4" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ERROR</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-95"><a href="#代码如下：-95" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">	<span class="type">char</span> c = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %c %d&quot;</span>, &amp;a, &amp;c, &amp;b);</span><br><span class="line">	<span class="comment">//printf(&quot;%d %c %d\n&quot;, a, c, b);</span></span><br><span class="line">	<span class="keyword">if</span> (c == <span class="string">&#x27;+&#x27;</span>)<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a + b);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;-&#x27;</span>)	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a - b);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;*&#x27;</span>)	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a * b);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;/&#x27;</span>)<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a / b);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;%&#x27;</span>)<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a % b);</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;ERROR&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-99-打印九九口诀表"><a href="#7-99-打印九九口诀表" class="headerlink" title="7-99 打印九九口诀表"></a><strong>7-99 打印九九口诀表</strong></h1><p>下面是一个完整的下三角九九口诀表：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">1</span>*<span class="number">1</span>=<span class="number">1</span>   </span><br><span class="line"><span class="attribute">1</span>*<span class="number">2</span>=<span class="number">2</span>   <span class="number">2</span>*<span class="number">2</span>=<span class="number">4</span>   </span><br><span class="line"><span class="attribute">1</span>*<span class="number">3</span>=<span class="number">3</span>   <span class="number">2</span>*<span class="number">3</span>=<span class="number">6</span>   <span class="number">3</span>*<span class="number">3</span>=<span class="number">9</span>   </span><br><span class="line"><span class="attribute">1</span>*<span class="number">4</span>=<span class="number">4</span>   <span class="number">2</span>*<span class="number">4</span>=<span class="number">8</span>   <span class="number">3</span>*<span class="number">4</span>=<span class="number">12</span>  <span class="number">4</span>*<span class="number">4</span>=<span class="number">16</span>  </span><br><span class="line"><span class="attribute">1</span>*<span class="number">5</span>=<span class="number">5</span>   <span class="number">2</span>*<span class="number">5</span>=<span class="number">10</span>  <span class="number">3</span>*<span class="number">5</span>=<span class="number">15</span>  <span class="number">4</span>*<span class="number">5</span>=<span class="number">20</span>  <span class="number">5</span>*<span class="number">5</span>=<span class="number">25</span>  </span><br><span class="line"><span class="attribute">1</span>*<span class="number">6</span>=<span class="number">6</span>   <span class="number">2</span>*<span class="number">6</span>=<span class="number">12</span>  <span class="number">3</span>*<span class="number">6</span>=<span class="number">18</span>  <span class="number">4</span>*<span class="number">6</span>=<span class="number">24</span>  <span class="number">5</span>*<span class="number">6</span>=<span class="number">30</span>  <span class="number">6</span>*<span class="number">6</span>=<span class="number">36</span>  </span><br><span class="line"><span class="attribute">1</span>*<span class="number">7</span>=<span class="number">7</span>   <span class="number">2</span>*<span class="number">7</span>=<span class="number">14</span>  <span class="number">3</span>*<span class="number">7</span>=<span class="number">21</span>  <span class="number">4</span>*<span class="number">7</span>=<span class="number">28</span>  <span class="number">5</span>*<span class="number">7</span>=<span class="number">35</span>  <span class="number">6</span>*<span class="number">7</span>=<span class="number">42</span>  <span class="number">7</span>*<span class="number">7</span>=<span class="number">49</span>  </span><br><span class="line"><span class="attribute">1</span>*<span class="number">8</span>=<span class="number">8</span>   <span class="number">2</span>*<span class="number">8</span>=<span class="number">16</span>  <span class="number">3</span>*<span class="number">8</span>=<span class="number">24</span>  <span class="number">4</span>*<span class="number">8</span>=<span class="number">32</span>  <span class="number">5</span>*<span class="number">8</span>=<span class="number">40</span>  <span class="number">6</span>*<span class="number">8</span>=<span class="number">48</span>  <span class="number">7</span>*<span class="number">8</span>=<span class="number">56</span>  <span class="number">8</span>*<span class="number">8</span>=<span class="number">64</span>  </span><br><span class="line"><span class="attribute">1</span>*<span class="number">9</span>=<span class="number">9</span>   <span class="number">2</span>*<span class="number">9</span>=<span class="number">18</span>  <span class="number">3</span>*<span class="number">9</span>=<span class="number">27</span>  <span class="number">4</span>*<span class="number">9</span>=<span class="number">36</span>  <span class="number">5</span>*<span class="number">9</span>=<span class="number">45</span>  <span class="number">6</span>*<span class="number">9</span>=<span class="number">54</span>  <span class="number">7</span>*<span class="number">9</span>=<span class="number">63</span>  <span class="number">8</span>*<span class="number">9</span>=<span class="number">72</span>  <span class="number">9</span>*<span class="number">9</span>=<span class="number">81</span>  </span><br></pre></td></tr></table></figure>
<p>本题要求对任意给定的一位正整数<code>N</code>，输出从<code>1*1</code>到<code>N*N</code>的部分口诀表。</p>
<h3 id="输入格式：-14"><a href="#输入格式：-14" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个正整数<code>N</code>（1≤<code>N</code>≤9）。</p>
<h3 id="输出格式：-14"><a href="#输出格式：-14" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出下三角<code>N*N</code>部分口诀表，其中等号右边数字占4位、左对齐。</p>
<h3 id="输入样例：-7"><a href="#输入样例：-7" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-7"><a href="#输出样例：-7" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1*1=1   </span><br><span class="line">1*2=2   2*2=4   </span><br><span class="line">1*3=3   2*3=6   3*3=9   </span><br><span class="line">1*4=4   2*4=8   3*4=12  4*4=16  </span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-96"><a href="#代码如下：-96" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i; ++j) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d*%d=%-4d&quot;</span>, j, i, i * j);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-100-逆序的三位数"><a href="#7-100-逆序的三位数" class="headerlink" title="7-100 逆序的三位数"></a><strong>7-100 逆序的三位数</strong></h1><p>程序每次读入一个正3位数，然后输出按位逆序的数字。注意：当输入的数字含有结尾的0时，输出不应带有前导的0。比如输入700，输出应该是7。</p>
<h3 id="输入格式：-15"><a href="#输入格式：-15" class="headerlink" title="输入格式："></a>输入格式：</h3><p>每个测试是一个3位的正整数。</p>
<h3 id="输出格式：-15"><a href="#输出格式：-15" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出按位逆序的数。</p>
<h3 id="输入样例：-8"><a href="#输入样例：-8" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-8"><a href="#输出样例：-8" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">321</span><br></pre></td></tr></table></figure>
<p><strong>鸣谢安阳师范学院软件学院李康康同学补充数据！</strong></p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-97"><a href="#代码如下：-97" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>,flag=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">while</span> (n != <span class="number">0</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span> (n % <span class="number">10</span> != <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, n % <span class="number">10</span>);</span><br><span class="line">			flag = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> (flag)	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, n % <span class="number">10</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		n /= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-101-人民币兑换"><a href="#7-101-人民币兑换" class="headerlink" title="7-101 人民币兑换"></a><strong>7-101 人民币兑换</strong></h1><p>1元5角钱人民币兑换5分、2分和1分的硬币（每一种都要有）共100枚，会有很多种兑换方案。请编写程序给出各种兑换方案。</p>
<h3 id="输入格式-16"><a href="#输入格式-16" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入为一个正整数n，表示要求输出前n种可能的方案。方案的顺序，是按照5分硬币从少到多排列的。</p>
<h3 id="输出格式-16"><a href="#输出格式-16" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>显示前n种方案中5分、2分、1分硬币各多少枚。每行显示一种方案，数字之间空一格，最后一个数字后没有空格。</p>
<p>注意：如果全部方案不到n种，就顺序输出全部可能的方案。</p>
<h3 id="输入样例-8"><a href="#输入样例-8" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-8"><a href="#输出样例-8" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 46 53  </span><br><span class="line">2 42 56  </span><br><span class="line">3 38 59  </span><br><span class="line">4 34 62  </span><br><span class="line">5 30 65</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-98"><a href="#代码如下：-98" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> fen5 = <span class="number">1</span>, fen2 = <span class="number">1</span>, fen1 = <span class="number">1</span>, n = <span class="number">0</span>, t = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= (<span class="number">150</span> - <span class="number">1</span> - <span class="number">2</span>) / <span class="number">5</span>; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= (<span class="number">150</span> - <span class="number">5</span> - <span class="number">2</span>) / <span class="number">2</span>; j++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (<span class="number">5</span> * i + <span class="number">2</span> * j + (<span class="number">100</span> - i - j) == <span class="number">150</span>&amp;&amp;t&lt;n) &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>, i, j, <span class="number">100</span> - i - j);</span><br><span class="line">				t++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//printf(&quot;count = %d&quot;, total);</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-102-大笨钟"><a href="#7-102-大笨钟" class="headerlink" title="7-102 大笨钟"></a><strong>7-102 大笨钟</strong></h1><p>微博上有个自称“大笨钟V”的家伙，每天敲钟催促码农们爱惜身体早点睡觉。不过由于笨钟自己作息也不是很规律，所以敲钟并不定时。一般敲钟的点数是根据敲钟时间而定的，如果正好在某个整点敲，那么“当”数就等于那个整点数；如果过了整点，就敲下一个整点数。另外，虽然一天有24小时，钟却是只在后半天敲1~12下。例如在23:00敲钟，就是“当当当当当当当当当当当”，而到了23:01就会是“当当当当当当当当当当当当”。在午夜00:00到中午12:00期间（端点时间包括在内），笨钟是不敲的。</p>
<p>下面就请你写个程序，根据当前时间替大笨钟敲钟。</p>
<h3 id="输入格式：-16"><a href="#输入格式：-16" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行按照<code>hh:mm</code>的格式给出当前时间。其中<code>hh</code>是小时，在00到23之间；<code>mm</code>是分钟，在00到59之间。</p>
<h3 id="输出格式：-16"><a href="#输出格式：-16" class="headerlink" title="输出格式："></a>输出格式：</h3><p>根据当前时间替大笨钟敲钟，即在一行中输出相应数量个<code>Dang</code>。如果不是敲钟期，则输出：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Only</span> hh:mm.  Too early <span class="keyword">to</span> Dang.</span><br></pre></td></tr></table></figure>
<p>其中<code>hh:mm</code>是输入的时间。</p>
<h3 id="输入样例1：-5"><a href="#输入样例1：-5" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">19:05</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1：-5"><a href="#输出样例1：-5" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DangDangDangDangDangDangDangDang</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2：-5"><a href="#输入样例2：-5" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">07</span>:<span class="number">05</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例2：-5"><a href="#输出样例2：-5" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Only</span> <span class="number">07</span>:<span class="number">05</span>.  Too early to Dang.</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-99"><a href="#代码如下：-99" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">dang</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Dang&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> hh = <span class="number">0</span>, mm = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d:%d&quot;</span>, &amp;hh, &amp;mm);</span><br><span class="line">	<span class="keyword">if</span> (hh &lt; <span class="number">12</span>||(hh==<span class="number">12</span>&amp;&amp;mm==<span class="number">0</span>)) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Only %02d:%02d.  Too early to Dang.&quot;</span>, hh, mm);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">if</span> (mm != <span class="number">0</span>)sum++;</span><br><span class="line">		sum += hh - <span class="number">12</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= sum; ++i)	dang();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-103-A除以B"><a href="#7-103-A除以B" class="headerlink" title="7-103 A除以B"></a><strong>7-103 A除以B</strong></h1><p>真的是简单题哈 —— 给定两个绝对值不超过100的整数<em>A</em>和<em>B</em>，要求你按照“<em>A</em>/<em>B</em>=商”的格式输出结果。</p>
<h3 id="输入格式：-17"><a href="#输入格式：-17" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第一行给出两个整数<em>A</em>和<em>B</em>（−100≤<em>A</em>,<em>B</em>≤100），数字间以空格分隔。</p>
<h3 id="输出格式：-17"><a href="#输出格式：-17" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出结果：如果分母是正数，则输出“<em>A</em>/<em>B</em>=商”；如果分母是负数，则要用括号把分母括起来输出；如果分母为零，则输出的商应为<code>Error</code>。输出的商应保留小数点后2位。</p>
<h3 id="输入样例1：-6"><a href="#输入样例1：-6" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1 2</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1：-6"><a href="#输出样例1：-6" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1/2=-0.50</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2：-6"><a href="#输入样例2：-6" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">1 </span>-<span class="number">3</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例2：-6"><a href="#输出样例2：-6" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">1</span>/(-<span class="number">3</span>)=-<span class="number">0</span>.<span class="number">33</span></span><br></pre></td></tr></table></figure>
<h3 id="输入样例3：-1"><a href="#输入样例3：-1" class="headerlink" title="输入样例3："></a>输入样例3：</h3><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">5 </span><span class="number">0</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例3：-1"><a href="#输出样例3：-1" class="headerlink" title="输出样例3："></a>输出样例3：</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">5/<span class="attribute">0</span>=Error</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-100"><a href="#代码如下：-100" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">	<span class="keyword">if</span> (b == <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;%d/%d=Error&quot;</span>,a,b);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (b &lt; <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;%d/(%d)=%.02lf&quot;</span>, a, b, a * <span class="number">1.0</span> / b);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d/%d=%.02lf&quot;</span>, a, b, a * <span class="number">1.0</span> / b);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-104-新世界"><a href="#7-104-新世界" class="headerlink" title="7-104 新世界"></a><strong>7-104 新世界</strong></h1><p>这道超级简单的题目没有任何输入。</p>
<p>你只需要在第一行中输出程序员钦定名言“Hello World”，并且在第二行中输出更新版的“Hello New World”就可以了。</p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-101"><a href="#代码如下：-101" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Hello World\nHello New World&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-105-寻找250"><a href="#7-105-寻找250" class="headerlink" title="7-105 寻找250"></a><strong>7-105 寻找250</strong></h1><p>对方不想和你说话，并向你扔了一串数…… 而你必须从这一串数字中找到“250”这个高大上的感人数字。</p>
<h3 id="输入格式：-18"><a href="#输入格式：-18" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出不知道多少个绝对值不超过1000的整数，其中保证至少存在一个“250”。</p>
<h3 id="输出格式：-18"><a href="#输出格式：-18" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出第一次出现的“250”是对方扔过来的第几个数字（计数从1开始）。题目保证输出的数字在整型范围内。</p>
<h3 id="输入样例：-9"><a href="#输入样例：-9" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">888 666 123 -233 250 13 250 -222</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-9"><a href="#输出样例：-9" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-102"><a href="#代码如下：-102" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>, t = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n)) &#123;</span><br><span class="line">		t++;</span><br><span class="line">		<span class="keyword">if</span> (n == <span class="number">250</span>) &#123;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, t);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-106-求平方根序列前N项和"><a href="#7-106-求平方根序列前N项和" class="headerlink" title="7-106 求平方根序列前N项和"></a><strong>7-106 求平方根序列前N项和</strong></h1><p>本题要求编写程序，计算平方根序列1+2+3+⋯的前N项之和。可包含头文件<code>math.h</code>，并调用<code>sqrt</code>函数求平方根。</p>
<h3 id="输入格式-17"><a href="#输入格式-17" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出一个正整数N。</p>
<h3 id="输出格式-17"><a href="#输出格式-17" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后两位。题目保证计算结果不超过双精度范围。</p>
<h3 id="输入样例-9"><a href="#输入样例-9" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-9"><a href="#输出样例-9" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sum = 22.47</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-103"><a href="#代码如下：-103" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">double</span> n = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		sum += <span class="built_in">sqrt</span>(i);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;sum = %.02lf&quot;</span>, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-107-找出最小值"><a href="#7-107-找出最小值" class="headerlink" title="7-107 找出最小值"></a><strong>7-107 找出最小值</strong></h1><p>本题要求编写程序，找出给定一系列整数中的最小值。</p>
<h3 id="输入格式：-19"><a href="#输入格式：-19" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中首先给出一个正整数<em>n</em>，之后是<em>n</em>个整数，其间以空格分隔。</p>
<h3 id="输出格式：-19"><a href="#输出格式：-19" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中按照“min = 最小值”的格式输出<em>n</em>个整数中的最小值。</p>
<h3 id="输入样例：-10"><a href="#输入样例：-10" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 -2 -123 100 0</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-10"><a href="#输出样例：-10" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">min = -123</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-104"><a href="#代码如下：-104" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>, min = INT_MAX,t;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);</span><br><span class="line">		<span class="keyword">if</span> (t &lt; min)	min = t;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;min = %d&quot;</span>, min);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-108-将x的平方赋值给y"><a href="#7-108-将x的平方赋值给y" class="headerlink" title="7-108 将x的平方赋值给y"></a><strong>7-108 将x的平方赋值给y</strong></h1><p>假设<em>x</em>的值为3，计算<em>x</em>的平方并赋值给<em>y</em>，分别以“<em>y</em> = <em>x</em> ∗ <em>x</em>”和“<em>x</em> ∗ <em>x</em> = <em>y</em>”的形式输出<em>x</em>和<em>y</em>的值。</p>
<h3 id="输入格式：-20"><a href="#输入格式：-20" class="headerlink" title="输入格式："></a>输入格式：</h3><p>本题无输入</p>
<h3 id="输出格式：-20"><a href="#输出格式：-20" class="headerlink" title="输出格式："></a>输出格式：</h3><p>按照下列格式输出代入<code>x</code>=3的结果：</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">y <span class="operator">=</span> <span class="keyword">x</span> * <span class="keyword">x</span></span><br><span class="line"><span class="keyword">x</span> * <span class="keyword">x</span> <span class="operator">=</span> y</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-105"><a href="#代码如下：-105" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;9 = 3 * 3\n3 * 3 = 9&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-109-计算工资"><a href="#7-109-计算工资" class="headerlink" title="7-109 计算工资"></a><strong>7-109 计算工资</strong></h1><p>某公司员工的工资计算方法如下：一周内工作时间不超过40小时，按正常工作时间计酬；超出40小时的工作时间部分，按正常工作时间报酬的1.5倍计酬。员工按进公司时间分为新职工和老职工，进公司不少于5年的员工为老职工，5年以下的为新职工。新职工的正常工资为30元/小时，老职工的正常工资为50元/小时。请按该计酬方式计算员工的工资。</p>
<h3 id="输入格式：-21"><a href="#输入格式：-21" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出2个正整数，分别为某员工入职年数和周工作时间，其间以空格分隔。</p>
<h3 id="输出格式：-21"><a href="#输出格式：-21" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行输出该员工的周薪，精确到小数点后2位。</p>
<h3 id="输入样例1：-7"><a href="#输入样例1：-7" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 40</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1：-7"><a href="#输出样例1：-7" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2000.00</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2：-7"><a href="#输入样例2：-7" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">50</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例2：-7"><a href="#输出样例2：-7" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">1650</span>.<span class="number">00</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-106"><a href="#代码如下：-106" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> year = <span class="number">0</span>;</span><br><span class="line">	<span class="type">double</span> time = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %lf&quot;</span>, &amp;year, &amp;time);</span><br><span class="line">	<span class="keyword">if</span> (year &lt; <span class="number">5</span>)<span class="built_in">printf</span>(<span class="string">&quot;%.02lf&quot;</span>, time &gt; <span class="number">40</span> ? <span class="number">40</span> * <span class="number">30</span> + (time - <span class="number">40</span>) * <span class="number">30</span> * <span class="number">1.5</span> : time * <span class="number">30</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%.02lf&quot;</span>, time &gt; <span class="number">40</span> ? <span class="number">40</span> * <span class="number">50</span> + (time - <span class="number">40</span>) * <span class="number">50</span> * <span class="number">1.5</span> : time * <span class="number">50</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-110-求符合给定条件的整数集"><a href="#7-110-求符合给定条件的整数集" class="headerlink" title="7-110 求符合给定条件的整数集"></a><strong>7-110 求符合给定条件的整数集</strong></h1><p>给定不超过6的正整数A，考虑从A开始的连续4个数字。请输出所有由它们组成的无重复数字的3位数。</p>
<h3 id="输入格式：-22"><a href="#输入格式：-22" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出A。</p>
<h3 id="输出格式：-22"><a href="#输出格式：-22" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出满足条件的的3位数，要求从小到大，每行6个整数。整数间以空格分隔，但行末不能有多余空格。</p>
<h3 id="输入样例：-11"><a href="#输入样例：-11" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-11"><a href="#输出样例：-11" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">234 235 243 245 253 254</span><br><span class="line">324 325 342 345 352 354</span><br><span class="line">423 425 432 435 452 453</span><br><span class="line">523 524 532 534 542 543</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-107"><a href="#代码如下：-107" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i, j, k;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (i = n; i &lt;= n + <span class="number">3</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = n; j &lt;= n + <span class="number">3</span>; j++)</span><br><span class="line">			<span class="keyword">for</span> (k = n; k &lt;= n + <span class="number">3</span>; k++)</span><br><span class="line">				<span class="keyword">if</span> (i != j &amp;&amp; j != k &amp;&amp; i != k)</span><br><span class="line">				&#123;</span><br><span class="line">					count++;</span><br><span class="line">					<span class="keyword">if</span> (count % <span class="number">6</span> == <span class="number">0</span>)</span><br><span class="line">						<span class="built_in">printf</span>(<span class="string">&quot;%d%d%d\n&quot;</span>, i, j, k);</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						<span class="built_in">printf</span>(<span class="string">&quot;%d%d%d &quot;</span>, i, j, k);</span><br><span class="line">				&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-111-求特殊方程的正整数解"><a href="#7-111-求特殊方程的正整数解" class="headerlink" title="7-111 求特殊方程的正整数解"></a><strong>7-111 求特殊方程的正整数解</strong></h1><p>本题要求对任意给定的正整数<em>N</em>，求方程<em>X</em>2+<em>Y</em>2=<em>N</em>的全部正整数解。</p>
<h3 id="输入格式：-23"><a href="#输入格式：-23" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出正整数<em>N</em>（≤10000）。</p>
<h3 id="输出格式：-23"><a href="#输出格式：-23" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出方程<em>X</em>2+<em>Y</em>2=<em>N</em>的全部正整数解，其中<em>X</em>≤<em>Y</em>。每组解占1行，两数字间以1空格分隔，按<em>X</em>的递增顺序输出。如果没有解，则输出<code>No Solution</code>。</p>
<h3 id="输入样例1：-8"><a href="#输入样例1：-8" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">884</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1：-8"><a href="#输出样例1：-8" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10 28</span><br><span class="line">20 22</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2：-8"><a href="#输入样例2：-8" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">11</span><br></pre></td></tr></table></figure>
<h3 id="输出样例2：-8"><a href="#输出样例2：-8" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">No Solution</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-108"><a href="#代码如下：-108" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>, y = <span class="number">0</span>, x = <span class="number">0</span>, flag=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> y = <span class="built_in">sqrt</span>(n); y &gt;= <span class="number">1</span>; y--) &#123;</span><br><span class="line">		x = <span class="built_in">sqrt</span>(n - y * y);</span><br><span class="line">		<span class="keyword">if</span> (x &gt; y)	<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">if</span> (x * x + y * y == n &amp;&amp; x != <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, x, y);</span><br><span class="line">			flag = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (!flag)	<span class="built_in">printf</span>(<span class="string">&quot;No Solution&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-112-约分最简分式"><a href="#7-112-约分最简分式" class="headerlink" title="7-112 约分最简分式"></a><strong>7-112 约分最简分式</strong></h1><p>分数可以表示为<code>分子/分母</code>的形式。编写一个程序，要求用户输入一个分数，然后将其约分为最简分式。最简分式是指分子和分母不具有可以约分的成分了。如6/12可以被约分为1/2。当分子大于分母时，不需要表达为整数又分数的形式，即11/8还是11/8；而当分子分母相等时，仍然表达为1/1的分数形式。</p>
<h3 id="输入格式：-24"><a href="#输入格式：-24" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个分数，分子和分母中间以斜杠<code>/</code>分隔，如：<code>12/34</code>表示34分之12。分子和分母都是正整数（不包含0，如果不清楚正整数的定义的话）。</p>
<p><strong>提示：</strong></p>
<ul>
<li>对于C语言，在<code>scanf</code>的格式字符串中加入<code>/</code>，让<code>scanf</code>来处理这个斜杠。</li>
<li>对于Python语言，用<code>a,b=map(int, input().split(&#39;/&#39;))</code>这样的代码来处理这个斜杠。</li>
</ul>
<h3 id="输出格式：-24"><a href="#输出格式：-24" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出这个分数对应的最简分式，格式与输入的相同，即采用<code>分子/分母</code>的形式表示分数。如<br><code>5/6</code>表示6分之5。</p>
<h3 id="输入样例：-12"><a href="#输入样例：-12" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">66/120</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-12"><a href="#输出样例：-12" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">11/20</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-109"><a href="#代码如下：-109" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">gcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> b == <span class="number">0</span> ? a : gcd(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d/%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d/%d&quot;</span>, a / gcd(a, b), b / gcd(a, b));</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-113-单词长度"><a href="#7-113-单词长度" class="headerlink" title="7-113 单词长度"></a><strong>7-113 单词长度</strong></h1><p>你的程序要读入一行文本，其中以空格分隔为若干个单词，以<code>.</code>结束。你要输出每个单词的长度。这里的单词与语言无关，可以包括各种符号，比如<code>it&#39;s</code>算一个单词，长度为4。注意，行中可能出现连续的空格；最后的<code>.</code>不计算在内。</p>
<h3 id="输入格式：-25"><a href="#输入格式：-25" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一行文本，以<code>.</code>结束</p>
<p><strong>提示：</strong>用<code>scanf(&quot;%c&quot;,...);</code>来读入一个字符，直到读到<code>.</code>为止。</p>
<h3 id="输出格式：-25"><a href="#输出格式：-25" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出这行文本对应的单词的长度，每个长度之间以空格隔开，行末没有最后的空格。</p>
<h3 id="输入样例：-13"><a href="#输入样例：-13" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">It&#x27;s great to see you here.</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-13"><a href="#输出样例：-13" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 5 2 3 3 4</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-110"><a href="#代码如下：-110" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>,beg=<span class="number">0</span>,leg=<span class="number">0</span>,flag=<span class="number">0</span>,frist=<span class="number">0</span>;</span><br><span class="line">	<span class="type">char</span> c[<span class="number">1000</span>] = &#123; <span class="string">&#x27; &#x27;</span> &#125;;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;c[i]);</span><br><span class="line">	<span class="keyword">while</span> (c[i] != <span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span> (c[i] == <span class="string">&#x27; &#x27;</span>) &#123;</span><br><span class="line">			<span class="comment">//碰到连续字符后的第一个空格</span></span><br><span class="line">			<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">				leg = i - beg;</span><br><span class="line">				<span class="keyword">if</span> (leg != <span class="number">0</span>) &#123;</span><br><span class="line">					<span class="keyword">if</span> (frist!=<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">					<span class="keyword">else</span> frist = <span class="number">1</span>;</span><br><span class="line">					<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, leg);</span><br><span class="line">				&#125;</span><br><span class="line">				flag = <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="comment">//非0之后的一个字符</span></span><br><span class="line">			<span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">				beg = i;</span><br><span class="line">				flag = <span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		i++;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;c[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">		leg = i - beg;</span><br><span class="line">		<span class="keyword">if</span> (leg != <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (frist == <span class="number">0</span>)	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, leg);</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, leg);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-114-谁先倒"><a href="#7-114-谁先倒" class="headerlink" title="7-114 谁先倒"></a><strong>7-114 谁先倒</strong></h1><p>划拳是古老中国酒文化的一个有趣的组成部分。酒桌上两人划拳的方法为：每人口中喊出一个数字，同时用手比划出一个数字。如果谁比划出的数字正好等于两人喊出的数字之和，谁就输了，输家罚一杯酒。两人同赢或两人同输则继续下一轮，直到唯一的赢家出现。</p>
<p>下面给出甲、乙两人的酒量（最多能喝多少杯不倒）和划拳记录，请你判断两个人谁先倒。</p>
<h3 id="输入格式：-26"><a href="#输入格式：-26" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行先后给出甲、乙两人的酒量（不超过100的非负整数），以空格分隔。下一行给出一个正整数<code>N</code>（≤100），随后<code>N</code>行，每行给出一轮划拳的记录，格式为：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">甲喊 甲划 乙喊 乙划</span><br></pre></td></tr></table></figure>
<p>其中<code>喊</code>是喊出的数字，<code>划</code>是划出的数字，均为不超过100的正整数（两只手一起划）。</p>
<h3 id="输出格式：-26"><a href="#输出格式：-26" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在第一行中输出先倒下的那个人：<code>A</code>代表甲，<code>B</code>代表乙。第二行中输出没倒的那个人喝了多少杯。题目保证有一个人倒下。注意程序处理到有人倒下就终止，后面的数据不必处理。</p>
<h3 id="输入样例：-14"><a href="#输入样例：-14" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 1</span><br><span class="line">6</span><br><span class="line">8 10 9 12</span><br><span class="line">5 10 5 10</span><br><span class="line">3 8 5 12</span><br><span class="line">12 18 1 13</span><br><span class="line">4 16 12 15</span><br><span class="line">15 1 1 16</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-14"><a href="#输出样例：-14" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A</span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-111"><a href="#代码如下：-111" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>, a = <span class="number">0</span>, b = <span class="number">0</span>,drka=<span class="number">0</span>,drkb=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="comment">//printf(&quot; a b n is %d %d %d\n&quot;, a, b, n);</span></span><br><span class="line">	<span class="type">int</span> grsa = <span class="number">0</span>, grsb = <span class="number">0</span>,rela=<span class="number">0</span>,relb=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d %d&quot;</span>, &amp;grsa, &amp;rela, &amp;grsb, &amp;relb);</span><br><span class="line">		<span class="keyword">if</span> (rela != relb) &#123;</span><br><span class="line">			<span class="keyword">if</span> (rela == grsa + grsb )	drka++;</span><br><span class="line">			<span class="keyword">if</span> (relb == grsa + grsb )	drkb++;</span><br><span class="line">			<span class="keyword">if</span> (drkb &gt; b) &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;B\n%d&quot;</span>, drka);</span><br><span class="line">				<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (drka &gt; a) &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;A\n%d&quot;</span>, drkb);</span><br><span class="line">				<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-115-小于m的最大的10个素数"><a href="#7-115-小于m的最大的10个素数" class="headerlink" title="7-115 小于m的最大的10个素数"></a><strong>7-115 小于m的最大的10个素数</strong></h1><p>给定一个整数m（50&lt;m&lt;20000），找出小于m的最大的10个素数。</p>
<h3 id="输入格式-18"><a href="#输入格式-18" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出一个正整数m（50&lt;m&lt;20000）。</p>
<h3 id="输出格式-18"><a href="#输出格式-18" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中按递减顺序输出10个满足条件的素数，每个素数输出占6列。没有其它任何附加格式和字符。</p>
<h3 id="输入样例-10"><a href="#输入样例-10" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">229</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-10"><a href="#输出样例-10" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">227   223   211   199   197   193   191   181   179   173</span><br></pre></td></tr></table></figure>
<h3 id="感谢中国青年政治学院的同学修正数据！"><a href="#感谢中国青年政治学院的同学修正数据！" class="headerlink" title="感谢中国青年政治学院的同学修正数据！"></a>感谢中国青年政治学院的同学修正数据！</h3><p>代码长度限制</p>
<p>1000 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-112"><a href="#代码如下：-112" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">judge</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n / <span class="number">2</span>; ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (n % i == <span class="number">0</span>)	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>,t=<span class="number">10</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	n = n % <span class="number">2</span> == <span class="number">0</span> ? n - <span class="number">1</span> : n<span class="number">-2</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i =n; i &gt;= <span class="number">2</span>; --i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (judge(i)&amp;&amp;t) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%6d&quot;</span>, i);</span><br><span class="line">			t--;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-116-计算圆周率"><a href="#7-116-计算圆周率" class="headerlink" title="7-116 计算圆周率"></a><strong>7-116 计算圆周率</strong></h1><p>根据下面关系式，求圆周率的值，直到最后一项的值小于给定阈值。</p>
<p>2<em>π</em>=1+31+3×52!+3×5×73!+⋯+3×5×7×⋯×(2<em>n</em>+1)<em>n</em>!+⋯</p>
<h3 id="输入格式：-27"><a href="#输入格式：-27" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出小于1的阈值。</p>
<h3 id="输出格式：-27"><a href="#输出格式：-27" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出满足阈值条件的近似圆周率，输出到小数点后6位。</p>
<h3 id="输入样例：-15"><a href="#输入样例：-15" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0.01</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-15"><a href="#输出样例：-15" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3.132157</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-113"><a href="#代码如下：-113" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">double</span> <span class="title function_">monomial</span><span class="params">(<span class="type">double</span> n)</span> &#123;</span><br><span class="line">	<span class="type">double</span> num = <span class="number">1</span>, den = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)	num *= i;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		den *= (i * <span class="number">2</span> + <span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> num*<span class="number">1.0</span> / den;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">double</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;n);</span><br><span class="line">	<span class="type">double</span> sum = <span class="number">1</span>,t=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span> (monomial(t) &gt;= n) &#123;</span><br><span class="line">		sum += monomial(t);</span><br><span class="line">		t++;</span><br><span class="line">	&#125;</span><br><span class="line">	sum += monomial(t);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%.06lf&quot;</span>, sum * <span class="number">2</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-117-整数的分类处理"><a href="#7-117-整数的分类处理" class="headerlink" title="7-117 整数的分类处理"></a><strong>7-117 整数的分类处理</strong></h1><p>给定 N 个正整数，要求你从中得到下列三种计算结果：</p>
<ul>
<li>A1 = 能被 3 整除的最大整数</li>
<li>A2 = 存在整数 K 使之可以表示为 3K+1 的整数的个数</li>
<li>A3 = 存在整数 K 使之可以表示为 3K+2 的所有整数的平均值（精确到小数点后 1 位）</li>
</ul>
<h3 id="输入格式：-28"><a href="#输入格式：-28" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入首先在第一行给出一个正整数 N，随后一行给出 N 个正整数。所有数字都不超过 100，同行数字以空格分隔。</p>
<h3 id="输出格式：-28"><a href="#输出格式：-28" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中顺序输出 A1、A2、A3的值，其间以 1 个空格分隔。如果某个数字不存在，则对应输出<code>NONE</code>。</p>
<h3 id="输入样例-1："><a href="#输入样例-1：" class="headerlink" title="输入样例 1："></a>输入样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">5 8 7 6 9 1 3 10</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-1："><a href="#输出样例-1：" class="headerlink" title="输出样例 1："></a>输出样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9 3 6.5</span><br></pre></td></tr></table></figure>
<h3 id="输入样例-2："><a href="#输入样例-2：" class="headerlink" title="输入样例 2："></a>输入样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">15 18 7 6 9 1 3 10</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-2："><a href="#输出样例-2：" class="headerlink" title="输出样例 2："></a>输出样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">18 3 NONE</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-114"><a href="#代码如下：-114" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;	</span><br><span class="line">	<span class="type">double</span> a3 = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>, a1 = INT_MIN, a2 = <span class="number">0</span>,p=<span class="number">0</span>,t=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p);</span><br><span class="line">		<span class="keyword">if</span> (p % <span class="number">3</span> == <span class="number">0</span> &amp;&amp; p &gt; a1)	a1 = p;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (p % <span class="number">3</span> == <span class="number">1</span>)	a2++;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(p%<span class="number">3</span>==<span class="number">2</span>)&#123;</span><br><span class="line">			a3 += p;</span><br><span class="line">			t++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(t!=<span class="number">0</span>)	a3 = a3 * <span class="number">1.0</span> / t;</span><br><span class="line">	<span class="comment">//printf(&quot;t is %d\na3 is %lf\n&quot;, t,a3);</span></span><br><span class="line">	<span class="keyword">if</span> (a1 == INT_MIN)<span class="built_in">printf</span>(<span class="string">&quot;NONE &quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a1);</span><br><span class="line">	<span class="keyword">if</span> (a2 == <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;NONE &quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a2);</span><br><span class="line">	<span class="keyword">if</span> (a3 == <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;NONE&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%.01lf&quot;</span>, a3);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-118-分队列"><a href="#7-118-分队列" class="headerlink" title="7-118 分队列"></a><strong>7-118 分队列</strong></h1><p>班级第一次列队，通常老师会让同学按身高排成一列，然后1、2报数，喊到1的同学向前一步，就这样，队伍就变成两列了。假设现在一个班级有n个同学，并且他们已经按身高排成了一列，同学按身高从1到n编号，你能告诉我最后哪些编号的同学站在了第一列么?</p>
<h3 id="输入格式-19"><a href="#输入格式-19" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入一个正整数n，表示班级的人数。</p>
<h3 id="输出格式-19"><a href="#输出格式-19" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>按顺序输出所有在第一列的同学对应的编号，每两个编号之间用一个空格隔开。</p>
<h3 id="输入样例-11"><a href="#输入样例-11" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">11</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-11"><a href="#输出样例-11" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 3 5 7 9 11</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-115"><a href="#代码如下：-115" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;	</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>,first=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (first)	<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">			<span class="keyword">else</span> first = <span class="number">1</span>;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, i);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-119-我是升旗手"><a href="#7-119-我是升旗手" class="headerlink" title="7-119 我是升旗手"></a><strong>7-119 我是升旗手</strong></h1><p>一年一度的升旗手选拔又要到了，学校要求每个班级选出一位同学做升旗手的候选人。因<br>为升旗手对身高有严格的要求，所以班主任决定选班级里个子最高的同学(如果两位同学<br>一样高，则选任意一位)。你能很快地给老师答案么?</p>
<h3 id="输入格式-20"><a href="#输入格式-20" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入包括两行。 第一行:包括一个整数n，表示班级里共有n位同学。 第二行:包含n个三位数，表示每一位同学的身高。</p>
<h3 id="输出格式-20"><a href="#输出格式-20" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>输出身高最高的同学的身高。</p>
<h3 id="输入样例-12"><a href="#输入样例-12" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">130 125 129 140</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-12"><a href="#输出样例-12" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">140</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-116"><a href="#代码如下：-116" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;	</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>,max=INT_MIN,t=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);</span><br><span class="line">		<span class="keyword">if</span> (t &gt; max)	max = t;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, max);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-120-兔子繁殖问题"><a href="#7-120-兔子繁殖问题" class="headerlink" title="7-120 兔子繁殖问题"></a><strong>7-120 兔子繁殖问题</strong></h1><p>已知有一对兔子，每个月可以生一对兔子，而小兔子一个月后又可以生一对小兔子(比如:2月份出生的小兔子4月份可以生育)。也就是说，兔子的对数为：第一个月1对，第二个月2对，第三个月3对，第四个月5对…..假设兔子的生育期为两年，且不死。那么问题来了，你能说出每个月的兔子数么?</p>
<h3 id="输入格式-21"><a href="#输入格式-21" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入一个数n，表示第n个月，1&lt;=n&lt;=24。</p>
<h3 id="输出格式-21"><a href="#输出格式-21" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>输出这个月兔子的数目。</p>
<h3 id="输入样例-13"><a href="#输入样例-13" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-13"><a href="#输出样例-13" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-117"><a href="#代码如下：-117" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;	</span><br><span class="line">	<span class="type">int</span> a[<span class="number">27</span>] = &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span> &#125;, n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		a[i] = a[i - <span class="number">1</span>] + a[i - <span class="number">2</span>];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[n]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-121-作品评分"><a href="#7-121-作品评分" class="headerlink" title="7-121 作品评分"></a><strong>7-121 作品评分</strong></h1><p>全国中小学生Scratch作品大赛拉开了序幕。每个参赛选手可以通过网络直接上传作品。本次比赛人人可做评委。每个网络评委可以通过网络对每一件作品进行打分。评分系统也是请程序高手设计的，能自动去掉一个最高分和一个最低分，求出平均分。</p>
<h3 id="输入格式-22"><a href="#输入格式-22" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入数据包括两行: 第一行为n，表示n个评委，n&gt;2。<br>第二行是n个评委的打分，分数之间有一个空格。打分是可以带有小数部分的。</p>
<h3 id="输出格式-22"><a href="#输出格式-22" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>输出平均分，结果保留两位小数。</p>
<h3 id="输入样例-14"><a href="#输入样例-14" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">10 9 8 7.9 9 9.5</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-14"><a href="#输出样例-14" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8.88</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-118"><a href="#代码如下：-118" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="type">double</span> sum = <span class="number">0</span>, min = DBL_MAX,max = DBL_MIN,t=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;t);</span><br><span class="line">		<span class="keyword">if</span> (t &gt; max)	max = t;</span><br><span class="line">		<span class="keyword">if</span> (t &lt; min)	min = t;</span><br><span class="line">		sum += t;</span><br><span class="line">	&#125;</span><br><span class="line">	sum = sum - max - min;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%.02lf&quot;</span>, sum / (n - <span class="number">2</span>));</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-122-3n-1"><a href="#7-122-3n-1" class="headerlink" title="7-122 3n+1"></a><strong>7-122 3n+1</strong></h1><p>有这样一个猜想：对于任意大于1的自然数n，若n为奇数，则将n变成3n+1,否则变成n的一半。经过若干次这样的变换，一定会使n变为1。例如3-&gt;10-&gt;5-&gt;16-&gt;8-&gt;4-&gt;2-&gt;1。对于n=1的情况，当然就不用变化了。</p>
<h3 id="输入格式-23"><a href="#输入格式-23" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入一个正整数n，n的范围是[1,999999]。</p>
<h3 id="输出格式-23"><a href="#输出格式-23" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>输出变换的次数。</p>
<h3 id="输入样例-15"><a href="#输入样例-15" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-15"><a href="#输出样例-15" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-119"><a href="#代码如下：-119" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>, t = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">while</span> (n!=<span class="number">1</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">1</span>)	n = <span class="number">3</span> * n + <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">else</span> n = n / <span class="number">2</span>;</span><br><span class="line">		t++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, t);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-123-空心字母金字塔"><a href="#7-123-空心字母金字塔" class="headerlink" title="7-123 空心字母金字塔"></a><strong>7-123 空心字母金字塔</strong></h1><p>输入一个大写的英文字母，输出空心的字母金字塔。</p>
<h3 id="输入格式-24"><a href="#输入格式-24" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>一个大写英文字母。</p>
<h3 id="输出格式-24"><a href="#输出格式-24" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>一个空心的大写英文字母金字塔，其中第1层的“A”在第1行的第40列，列从1开始计数。</p>
<h3 id="输入样例-16"><a href="#输入样例-16" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-16"><a href="#输出样例-16" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    A</span><br><span class="line">   B B</span><br><span class="line">  C   C</span><br><span class="line"> D     D</span><br><span class="line">EEEEEEEEE</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-120"><a href="#代码如下：-120" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;c);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">39</span>; ++i)	<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;A\n&quot;</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= c - <span class="string">&#x27;B&#x27;</span>+<span class="number">1</span>; ++i) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">39</span>-i; ++j) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, <span class="string">&#x27;A&#x27;</span> + i);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (i != c - <span class="string">&#x27;B&#x27;</span> + <span class="number">1</span>) &#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">2</span> * i - <span class="number">1</span>; ++j) &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>, <span class="string">&#x27;A&#x27;</span> + i);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">2</span> * i ; ++j) &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,<span class="string">&#x27;A&#x27;</span>+i);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-124-上三角数字三角形"><a href="#7-124-上三角数字三角形" class="headerlink" title="7-124 上三角数字三角形"></a><strong>7-124 上三角数字三角形</strong></h1><p>输入一个正整数n，输出具有n层的上三角数字三角形。</p>
<h3 id="输入格式-25"><a href="#输入格式-25" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>只有一个正整数n，1&lt;=n&lt;=100。</p>
<h3 id="输出格式-25"><a href="#输出格式-25" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>一个上三角数字三角形，每个数字占四个字符位置。</p>
<h3 id="输入样例-17"><a href="#输入样例-17" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-17"><a href="#输出样例-17" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> 1   2   3   4   5</span><br><span class="line"> 6   7   8   9</span><br><span class="line">10  11  12</span><br><span class="line">13  14</span><br><span class="line">15</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-121"><a href="#代码如下：-121" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (i != <span class="number">1</span>)	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n - i + <span class="number">1</span>; ++j) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%4d&quot;</span>, t);</span><br><span class="line">			t++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-125-又来一个上三角数字三角形"><a href="#7-125-又来一个上三角数字三角形" class="headerlink" title="7-125 又来一个上三角数字三角形"></a><strong>7-125 又来一个上三角数字三角形</strong></h1><p>输入一个正整数n，输出具有n层的上三角数字三角形。</p>
<h3 id="输入格式-26"><a href="#输入格式-26" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>只有一个正整数n，1&lt;=n&lt;=100。</p>
<h3 id="输出格式-26"><a href="#输出格式-26" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>一个上三角数字三角形，每个数字占四个字符位置。</p>
<h3 id="输入样例-18"><a href="#输入样例-18" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-18"><a href="#输出样例-18" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1   6  10  13  15</span><br><span class="line">2   7  11  14</span><br><span class="line">3   8  12</span><br><span class="line">4   9</span><br><span class="line">5</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h3 id="代码如下：-122"><a href="#代码如下：-122" class="headerlink" title="代码如下："></a>代码如下：</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>,t=<span class="number">1</span>,p=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (i != <span class="number">1</span>)	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n - i + <span class="number">1</span>; ++j) &#123;</span><br><span class="line">			<span class="keyword">if</span> (j == <span class="number">1</span>) &#123;</span><br><span class="line">				t = i;</span><br><span class="line">				p = n;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%4d&quot;</span>, t);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> &#123;</span><br><span class="line">				t += p;</span><br><span class="line">				p--;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%4d&quot;</span>, t);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-126-时间差"><a href="#7-126-时间差" class="headerlink" title="7-126 时间差"></a><strong>7-126 时间差</strong></h1><p>10点半到11点45之间，有几小时几分钟呢？</p>
<p>你要写一个程序，读入两个时间，计算它们之间的时间差，输出相差几小时几分钟。</p>
<h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>输入两个时间，均以24小时制表达，每个时间以“小时:分钟”的形式表达，第二个时间一定比第一个时间晚或相同，而且一定在同一天内。</p>
<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>输出表示两个时间之间的时间差的两个数字，第一个数字是时间差中的小时数，第二个数字是时间差中的分钟数。</p>
<h2 id="输入例子"><a href="#输入例子" class="headerlink" title="输入例子"></a>输入例子</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10:30 11:45</span><br></pre></td></tr></table></figure>
<h2 id="输出例子"><a href="#输出例子" class="headerlink" title="输出例子"></a>输出例子</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 15</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h3 id="代码如下：-123"><a href="#代码如下：-123" class="headerlink" title="代码如下："></a>代码如下：</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> ha = <span class="number">0</span>, ma = <span class="number">0</span>, hb = <span class="number">0</span>, mb = <span class="number">0</span>,hh=<span class="number">0</span>,mm=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d:%d %d:%d&quot;</span>, &amp;ha, &amp;ma, &amp;hb, &amp;mb);</span><br><span class="line">	hh = (hb * <span class="number">60</span> + mb - ma - ha * <span class="number">60</span>) / <span class="number">60</span>;</span><br><span class="line">	mm = (hb * <span class="number">60</span> + mb - ma - ha * <span class="number">60</span>) - hh * <span class="number">60</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, hh, mm);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-127-Sum-of-the-digits"><a href="#7-127-Sum-of-the-digits" class="headerlink" title="7-127 Sum of the digits"></a><strong>7-127 Sum of the digits</strong></h1><p>Given a none-negative number, print out the sum of its digits.</p>
<h3 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format:"></a>Input Format:</h3><p>A none-negative integer number.</p>
<h3 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format:"></a>Output Format:</h3><p>The sum of its all digits.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123</span><br></pre></td></tr></table></figure>
<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h3 id="代码如下：-124"><a href="#代码如下：-124" class="headerlink" title="代码如下："></a>代码如下：</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">while</span> (n) &#123;</span><br><span class="line">		sum += n % <span class="number">10</span>;</span><br><span class="line">		n /= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-128-大于m的最小素数"><a href="#7-128-大于m的最小素数" class="headerlink" title="7-128 大于m的最小素数"></a><strong>7-128 大于m的最小素数</strong></h1><p>编程求出大于m的最小素数。</p>
<h3 id="输入格式-27"><a href="#输入格式-27" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>直接输入一个正整数</p>
<h3 id="输出格式-27"><a href="#输出格式-27" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>直接输出结果，没有任何附加格式控制。</p>
<h3 id="输入样例-19"><a href="#输入样例-19" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-19"><a href="#输出样例-19" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">13</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-125"><a href="#代码如下：-125" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">judge</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">	<span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n / <span class="number">2</span>; ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (n % i == <span class="number">0</span>) &#123;</span><br><span class="line">			flag = <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	n++;</span><br><span class="line">	<span class="keyword">while</span> (judge(n)) &#123;</span><br><span class="line">		n++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, n);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-129-最佳情侣身高差"><a href="#7-129-最佳情侣身高差" class="headerlink" title="7-129 最佳情侣身高差"></a><strong>7-129 最佳情侣身高差</strong></h1><p>专家通过多组情侣研究数据发现，最佳的情侣身高差遵循着一个公式：（女方的身高）×1.09 =（男方的身高）。如果符合，你俩的身高差不管是牵手、拥抱、接吻，都是最和谐的差度。</p>
<p>下面就请你写个程序，为任意一位用户计算他/她的情侣的最佳身高。</p>
<h3 id="输入格式：-29"><a href="#输入格式：-29" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出正整数<em>N</em>（≤10），为前来查询的用户数。随后<em>N</em>行，每行按照“性别 身高”的格式给出前来查询的用户的性别和身高，其中“性别”为“F”表示女性、“M”表示男性；“身高”为区间 [1.0, 3.0] 之间的实数。</p>
<h3 id="输出格式：-29"><a href="#输出格式：-29" class="headerlink" title="输出格式："></a>输出格式：</h3><p>对每一个查询，在一行中为该用户计算出其情侣的最佳身高，保留小数点后2位。</p>
<h3 id="输入样例：-16"><a href="#输入样例：-16" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">M 1.75</span><br><span class="line">F 1.8</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-16"><a href="#输出样例：-16" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.61</span><br><span class="line">1.96</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-126"><a href="#代码如下：-126" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"><span class="type">double</span> <span class="title function_">best</span><span class="params">(<span class="type">double</span> n,<span class="type">char</span> c)</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> (c == <span class="string">&#x27;M&#x27;</span>)	<span class="keyword">return</span> n / <span class="number">1.09</span>;</span><br><span class="line">	<span class="keyword">if</span> (c == <span class="string">&#x27;F&#x27;</span>)	<span class="keyword">return</span> n * <span class="number">1.09</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">	<span class="type">double</span> t = <span class="number">0</span>,n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot; %c %lf&quot;</span>, &amp;c, &amp;t);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%.02lf\n&quot;</span>, best(t, c));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-130-累加器"><a href="#7-130-累加器" class="headerlink" title="7-130 累加器"></a><strong>7-130 累加器</strong></h1><p>请你实现一个累加器。输入 <em>n</em> 个非负整数，输出他们的和。 1≤<em>n</em>&lt;1000，而每个数则 &lt;10000。</p>
<h3 id="输入格式-28"><a href="#输入格式-28" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入包括两行。 第一行：包括一个整数 <em>n</em>，表示总共有 <em>n</em> 个数。 第二行：包含 <em>n</em> 个整数。</p>
<h3 id="输出格式-28"><a href="#输出格式-28" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>输出 <em>n</em> 个数的和。</p>
<h3 id="输入样例-20"><a href="#输入样例-20" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">3 2 1 4</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-20"><a href="#输出样例-20" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-127"><a href="#代码如下：-127" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">long</span> <span class="type">long</span> n = <span class="number">0</span>, sum = <span class="number">0</span>,t=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">long</span> <span class="type">long</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;t);</span><br><span class="line">		sum += t;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-131-等腰直角三角形"><a href="#7-131-等腰直角三角形" class="headerlink" title="7-131 等腰直角三角形"></a><strong>7-131 等腰直角三角形</strong></h1><p>等腰直角三角形是指一个角是直角，且两条直角边相等的三角形。这里我们输出直角边长为n的等腰直角三角形的格式如下所示: 比如n=1，则输出:</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="comment">*</span></span><br></pre></td></tr></table></figure>
<p>n=2，输出:</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="bullet">*</span></span><br><span class="line"><span class="bullet"></span><span class="bullet">** </span></span><br></pre></td></tr></table></figure>
<p>n=3，输出:</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="bullet">*</span></span><br><span class="line"><span class="bullet"></span><span class="bullet">** </span></span><br><span class="line"><span class="bullet"></span><span class="bullet">*** </span></span><br></pre></td></tr></table></figure>
<p>那么，你能用程序来实现么?</p>
<h3 id="输入格式-29"><a href="#输入格式-29" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入一个数n，表示三角形的边长。1&lt;n&lt;1000。</p>
<h3 id="输出格式-29"><a href="#输出格式-29" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>输出对应的用*表示的等腰直角三角形。</p>
<h3 id="输入样例-21"><a href="#输入样例-21" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-21"><a href="#输出样例-21" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*</span><br><span class="line">**</span><br><span class="line">***</span><br><span class="line">****</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-128"><a href="#代码如下：-128" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i; ++j)	<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-132-画菱形"><a href="#7-132-画菱形" class="headerlink" title="7-132 画菱形"></a><strong>7-132 画菱形</strong></h1><p>菱形是一种特殊的平行四边形，是四条边均相等的平行四边形。题目给出菱形的边长n，用<code>*</code>画出菱形。如n=1，输出:</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="comment">*</span></span><br></pre></td></tr></table></figure>
<p>n=2，输出:</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment">*** </span></span><br><span class="line"><span class="comment"> * </span></span><br></pre></td></tr></table></figure>
<p>n=3，输出:</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="comment">  * </span></span><br><span class="line"><span class="comment"> ***</span></span><br><span class="line"><span class="comment">*****</span></span><br><span class="line"><span class="comment"> ***</span></span><br><span class="line"><span class="comment">  *</span></span><br></pre></td></tr></table></figure>
<p>那么，你能用程序来实现么?</p>
<h3 id="输入格式-30"><a href="#输入格式-30" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入菱形的边长n，1&lt;n&lt;100。</p>
<h3 id="输出格式-30"><a href="#输出格式-30" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>输出对应的用<code>*</code>表示的菱形。</p>
<h3 id="输入样例-22"><a href="#输入样例-22" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-22"><a href="#输出样例-22" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">   *</span><br><span class="line">  ***</span><br><span class="line"> *****</span><br><span class="line">*******</span><br><span class="line"> *****</span><br><span class="line">  ***</span><br><span class="line">   *</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-129"><a href="#代码如下：-129" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n-i; ++j) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">2</span> * i - <span class="number">1</span>; ++j)	<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i; ++j)	<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">2</span> * n - <span class="number">1</span> - <span class="number">2</span> * i; ++j)	<span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-133-666"><a href="#7-133-666" class="headerlink" title="7-133 666"></a><strong>7-133 666</strong></h1><p>中国人非常喜欢6这个数字，因为大家总爱说66大顺啊。数学狂人李某人喜欢把什么都数字化，于是她把顺利这个词也定义了数量级，6代表1级顺利，66代表2级顺利，666代表3级顺利，以此类推。你看，数学狂人的世界总是让人无法理解。今天，李某人决定将数学进行到底，现在她设前n级顺利的和是sn。</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">sn</span>=<span class="number">6</span>+<span class="number">66</span>+<span class="number">666</span>+...+<span class="number">66</span>..<span class="number">66</span>(n个<span class="number">6</span>)。 </span><br></pre></td></tr></table></figure>
<p>假设你已经知道了数字n，那么，你能帮李某人求出sn么?</p>
<h3 id="输入格式-31"><a href="#输入格式-31" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入一个正整数n，n的范围是[0,10)。</p>
<h3 id="输出格式-31"><a href="#输出格式-31" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>输出Sn的值。</p>
<h3 id="输入样例-23"><a href="#输入样例-23" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-23"><a href="#输出样例-23" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">72</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-130"><a href="#代码如下：-130" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="title function_">pow</span><span class="params">(<span class="type">long</span> x, <span class="type">long</span> n)</span> &#123;</span><br><span class="line">	<span class="type">long</span> sum = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		sum *= x;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="title function_">res</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> (n == <span class="number">1</span>)	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">pow</span>(<span class="number">10</span>, n<span class="number">-1</span>)+res(n<span class="number">-1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">long</span> <span class="type">long</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		sum += res(i);</span><br><span class="line">		<span class="comment">//printf(&quot;res(i) %lld\n&quot;, res(i));</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//printf(&quot;sum is %lld\n&quot;, sum);</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, sum * <span class="number">6</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-134-倒顺数字串"><a href="#7-134-倒顺数字串" class="headerlink" title="7-134 倒顺数字串"></a><strong>7-134 倒顺数字串</strong></h1><p>输入正整数n，输出它的倒顺数字串。如n=6时，输出</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h3 id="输入格式-32"><a href="#输入格式-32" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入一个正整数n，n的范围是[1,50]。</p>
<h3 id="输出格式-32"><a href="#输出格式-32" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>n的倒顺数字串，每两个数字之间只用一个空格隔开。</p>
<h3 id="输入样例-24"><a href="#输入样例-24" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-24"><a href="#输出样例-24" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 2 3 4 5 6 5 4 3 2 1</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-131"><a href="#代码如下：-131" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (i != <span class="number">1</span>)	<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, i);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">1</span>; --i)	<span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, i);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-135-数字金字塔"><a href="#7-135-数字金字塔" class="headerlink" title="7-135 数字金字塔"></a><strong>7-135 数字金字塔</strong></h1><p>输入正整数n，输出n层数字金字塔。</p>
<h3 id="输入格式-33"><a href="#输入格式-33" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>正整数n，1&lt;=n&lt;=9。</p>
<h3 id="输出格式-33"><a href="#输出格式-33" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>n层的金字塔，其中第1层的“1”在第1行的第39列（列从1开始计数）。</p>
<h3 id="输入样例-25"><a href="#输入样例-25" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-25"><a href="#输出样例-25" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    1</span><br><span class="line">   121</span><br><span class="line">  12321</span><br><span class="line"> 1234321</span><br><span class="line">123454321</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-132"><a href="#代码如下：-132" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">38</span>; ++i)	<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">39</span> - i; ++j)		<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i; ++j)	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, j);</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i - <span class="number">1</span>; ++j)	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, i - j);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-136-穷举问题-搬砖"><a href="#7-136-穷举问题-搬砖" class="headerlink" title="7-136 穷举问题-搬砖"></a><strong>7-136 穷举问题-搬砖</strong></h1><p>某工地需要搬运砖块，已知男人一人搬<code>3</code>块，女人一人搬<code>2</code>块，小孩两人搬<code>1</code>块。如果想用<code>n</code>人正好搬<code>n</code>块砖，问有多少种搬法？</p>
<h3 id="输入格式-34"><a href="#输入格式-34" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出一个正整数<code>n</code>。</p>
<h3 id="输出格式-34"><a href="#输出格式-34" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>输出在每一行显示一种方案，按照”<code>men = cnt_m, women = cnt_w, child = cnt_c</code>“的格式，输出男人的数量<code>cnt_m</code>，女人的数量<code>cnt_w</code>，小孩的数量<code>cnt_c</code>。请注意，等号的两侧各有一个空格，逗号的后面也有一个空格。</p>
<p>如果找不到符合条件的方案，则输出”<code>None</code>“</p>
<h3 id="输入样例-26"><a href="#输入样例-26" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">45</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-26"><a href="#输出样例-26" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">men = 0, women = 15, child = 30</span><br><span class="line">men = 3, women = 10, child = 32</span><br><span class="line">men = 6, women = 5, child = 34</span><br><span class="line">men = 9, women = 0, child = 36</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h3 id="代码如下：-133"><a href="#代码如下：-133" class="headerlink" title="代码如下："></a>代码如下：</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>,flag=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n / <span class="number">3</span>; ++i) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = n / <span class="number">2</span>; j &gt;= <span class="number">0</span>; --j) &#123;</span><br><span class="line">			<span class="type">int</span> z = n - i - j;</span><br><span class="line">			<span class="keyword">if</span> (<span class="number">3</span> * i + j * <span class="number">2</span> + z / <span class="number">2</span> == n &amp;&amp; z % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;men = %d, women = %d, child = %d\n&quot;</span>, i, j, z);</span><br><span class="line">				flag = <span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (!flag)	<span class="built_in">printf</span>(<span class="string">&quot;None&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-137-Average"><a href="#7-137-Average" class="headerlink" title="7-137 Average"></a><strong>7-137 Average</strong></h1><p>You are going to read a serial of none-negative integers, which ends with a negative number that does not count as one of the data. Your program calculates the average of all the none-negative integers, and prints the average which rounds to two decimal places.</p>
<p>When there’s no valid data at all, your program prints out:</p>
<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"><span class="built_in">None</span></span><br></pre></td></tr></table></figure>
<h2 id="输入格式：-30"><a href="#输入格式：-30" class="headerlink" title="输入格式："></a>输入格式：</h2><p>A serial of none-negative integers, ending with a negative number, which is not one of the valide data.</p>
<h2 id="输出格式：-30"><a href="#输出格式：-30" class="headerlink" title="输出格式："></a>输出格式：</h2><p>A number rounds to two decimal places, which is the average of the serial.</p>
<p>The printf for this case is:</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line">printf(<span class="string">&quot;%.2f\n&quot;</span>, (<span class="built_in">double</span>)<span class="keyword">sum</span>/<span class="keyword">count</span>);</span><br></pre></td></tr></table></figure>
<h2 id="输入例子-1"><a href="#输入例子-1" class="headerlink" title="输入例子"></a>输入例子</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 2 3 4 5 6 -1</span><br></pre></td></tr></table></figure>
<h2 id="输出例子-1"><a href="#输出例子-1" class="headerlink" title="输出例子"></a>输出例子</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3.50</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-134"><a href="#代码如下：-134" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>, count = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">while</span> (n &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">		sum += n;</span><br><span class="line">		count++;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (sum == <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;None&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>, (<span class="type">double</span>)sum / count);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-138-质因子分解"><a href="#7-138-质因子分解" class="headerlink" title="7-138 质因子分解"></a><strong>7-138 质因子分解</strong></h1><p>本题目要求读入一个大于1的整数，编程将其分解成若干个质因子（素数因子）积的形式。</p>
<h3 id="输入格式-35"><a href="#输入格式-35" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>大于1的整数一个。</p>
<h3 id="输出格式-35"><a href="#输出格式-35" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>将输入的正整数分解成若干个质因子积的形式，质因子的出现顺序按从小到大排列。如：40=2<em>2</em>2*5；如果整数本身为质数或素数，直接输出，如：13=13。</p>
<h3 id="输入样例-27"><a href="#输入样例-27" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12480</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-27"><a href="#输出样例-27" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12480=2*2*2*2*2*2*3*5*13</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-135"><a href="#代码如下：-135" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isPrime</span><span class="params">(<span class="type">int</span> n)</span> &#123;		<span class="comment">//1就代表是素数，0，就代表不是</span></span><br><span class="line">	<span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n / <span class="number">2</span>; ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (n % i == <span class="number">0</span>) &#123;</span><br><span class="line">			flag = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d=&quot;</span>, n);</span><br><span class="line">	<span class="keyword">while</span> (!isPrime(n)) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n / <span class="number">2</span>; ++i) &#123;</span><br><span class="line">			<span class="keyword">if</span> (n % i == <span class="number">0</span>) &#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d*&quot;</span>,i);</span><br><span class="line">				n = n / i;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, n);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-139-手机话费"><a href="#7-139-手机话费" class="headerlink" title="7-139 手机话费"></a><strong>7-139 手机话费</strong></h1><p>小明的手机每天消费1元，每消费K元就可以获赠1元，一开始小明有M元，问最多可以用多少天？</p>
<h3 id="输入格式-36"><a href="#输入格式-36" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>每个测试实例包括2个整数M，K（2&lt;=k&lt;=M&lt;=1000)。</p>
<h3 id="输出格式-36"><a href="#输出格式-36" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>对于每个测试实例输出一个整数，表示M元可以用的天数。</p>
<h3 id="输入样例-28"><a href="#输入样例-28" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 2</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-28"><a href="#输出样例-28" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-136"><a href="#代码如下：-136" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> m,k,i=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;m,&amp;k);</span><br><span class="line">    <span class="keyword">while</span>(m&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        m--;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i%k==<span class="number">0</span>)m++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,i);</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-140-斐波那契数列第n项"><a href="#7-140-斐波那契数列第n项" class="headerlink" title="7-140 斐波那契数列第n项"></a><strong>7-140 斐波那契数列第n项</strong></h1><p>输出斐波那契数列第n项（假设n&lt;1000）。斐波那契数列：0,1，1，2，3，5，8，13……</p>
<h3 id="输入格式-37"><a href="#输入格式-37" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>一个正整数n,表示斐波那契数列第n项。</p>
<h3 id="输出格式-37"><a href="#输出格式-37" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>斐波那契数列第n项的值</p>
<h3 id="输入样例-29"><a href="#输入样例-29" class="headerlink" title="输入样例:"></a>输入样例:</h3><p>在这里给出一组输入。例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-29"><a href="#输出样例-29" class="headerlink" title="输出样例:"></a>输出样例:</h3><p>在这里给出相应的输出。例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-137"><a href="#代码如下：-137" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">1</span>, j = <span class="number">1</span>,n=<span class="number">0</span>,t=<span class="number">0</span>,res=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">if</span> (n == <span class="number">1</span>)	<span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">2</span> || n == <span class="number">3</span>)	<span class="built_in">printf</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> z = <span class="number">4</span>; z &lt;= n; ++z) &#123;</span><br><span class="line">			res = i + j;</span><br><span class="line">			i = j;</span><br><span class="line">			j = res;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, res);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-141-统计一行文本的单词个数"><a href="#7-141-统计一行文本的单词个数" class="headerlink" title="7-141 统计一行文本的单词个数"></a><strong>7-141 统计一行文本的单词个数</strong></h1><p>本题目要求编写程序统计一行字符中单词的个数。所谓“单词”是指连续不含空格的字符串，各单词之间用空格分隔，空格数可以是多个。</p>
<h3 id="输入格式-38"><a href="#输入格式-38" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入给出一行字符。</p>
<h3 id="输出格式-38"><a href="#输出格式-38" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中输出单词个数。</p>
<h3 id="输入样例-30"><a href="#输入样例-30" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Let&#x27;s go to room 209.</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-30"><a href="#输出样例-30" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>
<p><strong>鸣谢用户 张麦麦 补充数据！</strong></p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-138"><a href="#代码如下：-138" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">char</span> str[<span class="number">9999</span>];</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>,flag=<span class="number">0</span>,t=<span class="number">0</span>;</span><br><span class="line">	fgets(str, <span class="keyword">sizeof</span>(str), <span class="built_in">stdin</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(str); ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (str[i] != <span class="string">&#x27; &#x27;</span>&amp;&amp;!flag&amp;&amp;str[i]!=<span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">			flag = <span class="number">1</span>;</span><br><span class="line">			t++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (str[i] == <span class="string">&#x27; &#x27;</span> &amp;&amp; flag)	flag = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, t);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-142-判断上三角矩阵"><a href="#7-142-判断上三角矩阵" class="headerlink" title="7-142 判断上三角矩阵"></a><strong>7-142 判断上三角矩阵</strong></h1><p>上三角矩阵指主对角线以下的元素都为0的矩阵；主对角线为从矩阵的左上角至右下角的连线。</p>
<p>本题要求编写程序，判断一个给定的方阵是否上三角矩阵。</p>
<h3 id="输入格式：-31"><a href="#输入格式：-31" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出一个正整数<em>T</em>，为待测矩阵的个数。接下来给出<em>T</em>个矩阵的信息：每个矩阵信息的第一行给出一个不超过10的正整数<em>n</em>。随后<em>n</em>行，每行给出<em>n</em>个整数，其间以空格分隔。</p>
<h3 id="输出格式：-31"><a href="#输出格式：-31" class="headerlink" title="输出格式："></a>输出格式：</h3><p>每个矩阵的判断结果占一行。如果输入的矩阵是上三角矩阵，输出“YES”，否则输出“NO”。</p>
<h3 id="输入样例：-17"><a href="#输入样例：-17" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">3</span><br><span class="line">1 2 3</span><br><span class="line">0 4 5</span><br><span class="line">0 0 6</span><br><span class="line">2</span><br><span class="line">1 0</span><br><span class="line">-8 2</span><br><span class="line">3</span><br><span class="line">1 2 3</span><br><span class="line">1 4 5</span><br><span class="line">0 -1 6</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-17"><a href="#输出样例：-17" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">YES</span><br><span class="line">NO</span><br><span class="line">NO</span><br></pre></td></tr></table></figure>
<p><strong>鸣谢中水七局机电安装分局喻春桥补充数据！</strong></p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-139"><a href="#代码如下：-139" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> t = <span class="number">0</span>, n = <span class="number">0</span>,p=<span class="number">0</span>,flag=<span class="number">1</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> z = <span class="number">1</span>; z &lt;= t; ++z) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">		flag = <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">				<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p);</span><br><span class="line">				<span class="keyword">if</span> (i &gt;= <span class="number">2</span> &amp;&amp; j &lt;= i - <span class="number">1</span> &amp;&amp; p != <span class="number">0</span> &amp;&amp; flag) 	flag = <span class="number">0</span>;	</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (flag)	<span class="built_in">printf</span>(<span class="string">&quot;YES\n&quot;</span>);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-143-字符串排序"><a href="#7-143-字符串排序" class="headerlink" title="7-143 字符串排序"></a><strong>7-143 字符串排序</strong></h1><p>本题要求编写程序，读入5个字符串，按由小到大的顺序输出。</p>
<h3 id="输入格式：-32"><a href="#输入格式：-32" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入为由空格分隔的5个非空字符串，每个字符串不包括空格、制表符、换行符等空白字符，长度小于80。</p>
<h3 id="输出格式：-32"><a href="#输出格式：-32" class="headerlink" title="输出格式："></a>输出格式：</h3><p>按照以下格式输出排序后的结果：</p>
<figure class="highlight inform7"><table><tr><td class="code"><pre><span class="line">After sorted:</span><br><span class="line">每行一个字符串</span><br></pre></td></tr></table></figure>
<h3 id="输入样例：-18"><a href="#输入样例：-18" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">red yellow blue black white</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-18"><a href="#输出样例：-18" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">After sorted:</span><br><span class="line">black</span><br><span class="line">blue</span><br><span class="line">red</span><br><span class="line">white</span><br><span class="line">yellow</span><br></pre></td></tr></table></figure>
<p><strong>鸣谢贵州民族大学张玉全老师修正数据！</strong></p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-140"><a href="#代码如下：-140" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">char</span> a[<span class="number">5</span>][<span class="number">100</span>],temp[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; ++i)	<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;a[i]);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span><span class="number">-1</span>; ++i) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span> - i - <span class="number">1</span>; ++j) &#123;</span><br><span class="line">			<span class="keyword">if</span> (<span class="built_in">strcmp</span>(a[j], a[j + <span class="number">1</span>]) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">				<span class="built_in">strcpy</span>(temp, a[j]);</span><br><span class="line">				<span class="built_in">strcpy</span>(a[j], a[j+<span class="number">1</span>]);</span><br><span class="line">				<span class="built_in">strcpy</span>(a[j+<span class="number">1</span>], temp);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;After sorted:\n&quot;</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; ++i)	<span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, a[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-144-藏头诗"><a href="#7-144-藏头诗" class="headerlink" title="7-144 藏头诗"></a><strong>7-144 藏头诗</strong></h1><p>本题要求编写一个解密藏头诗的程序。</p>
<p><em>注：在 2022 年 7 月 14 日 16 点 50 分以后，该题数据修改为 UTF-8 编码。</em></p>
<h3 id="输入格式：-33"><a href="#输入格式：-33" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入为一首中文藏头诗，一共四句，每句一行。注意：一个汉字占三个字节。</p>
<h3 id="输出格式：-33"><a href="#输出格式：-33" class="headerlink" title="输出格式："></a>输出格式：</h3><p>取出每句的第一个汉字并连接在一起形成一个字符串并输出。同时在末尾输入一个换行符。</p>
<h3 id="输入样例：-19"><a href="#输入样例：-19" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一叶轻舟向东流</span><br><span class="line">帆稍轻握杨柳手</span><br><span class="line">风纤碧波微起舞</span><br><span class="line">顺水任从雅客流</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-19"><a href="#输出样例：-19" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一帆风顺</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-141"><a href="#代码如下：-141" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> c[<span class="number">100</span>][<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, c);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c%c%c&quot;</span>, c[<span class="number">0</span>][<span class="number">0</span>], c[<span class="number">0</span>][<span class="number">1</span>], c[<span class="number">0</span>][<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-145-点赞"><a href="#7-145-点赞" class="headerlink" title="7-145 点赞"></a><strong>7-145 点赞</strong></h1><p>微博上有个“点赞”功能，你可以为你喜欢的博文点个赞表示支持。每篇博文都有一些刻画其特性的标签，而你点赞的博文的类型，也间接刻画了你的特性。本题就要求你写个程序，通过统计一个人点赞的纪录，分析这个人的特性。</p>
<h3 id="输入格式：-34"><a href="#输入格式：-34" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第一行给出一个正整数<em>N</em>（≤1000），是该用户点赞的博文数量。随后<em>N</em>行，每行给出一篇被其点赞的博文的特性描述，格式为“<em>K</em> <em>F</em>1⋯<em>F**K</em>”，其中1≤<em>K</em>≤10，<em>F**i</em>（<em>i</em>=1,⋯,<em>K</em>）是特性标签的编号，我们将所有特性标签从1到1000编号。数字间以空格分隔。</p>
<h3 id="输出格式：-34"><a href="#输出格式：-34" class="headerlink" title="输出格式："></a>输出格式：</h3><p>统计所有被点赞的博文中最常出现的那个特性标签，在一行中输出它的编号和出现次数，数字间隔1个空格。如果有并列，则输出编号最大的那个。</p>
<h3 id="输入样例：-20"><a href="#输入样例：-20" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">3 889 233 2</span><br><span class="line">5 100 3 233 2 73</span><br><span class="line">4 3 73 889 2</span><br><span class="line">2 233 123</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-20"><a href="#输出样例：-20" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">233 3</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>200 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-142"><a href="#代码如下：-142" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> Feature[<span class="number">1001</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">1000</span>; ++i)    Feature[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>, t = <span class="number">0</span>,temp=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= t; ++j) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;temp);</span><br><span class="line">            Feature[temp]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> max = INT_MIN,index=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">1000</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (Feature[i] &gt;= max) &#123;</span><br><span class="line">            index = i;</span><br><span class="line">            max = Feature[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, index, max);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-146-稳赢"><a href="#7-146-稳赢" class="headerlink" title="7-146 稳赢"></a><strong>7-146 稳赢</strong></h1><p>大家应该都会玩“锤子剪刀布”的游戏：两人同时给出手势，胜负规则如图所示：</p>
<p><img src="http://image.camilleferros.top/Image7_146.jpg" alt=""></p>
<p>现要求你编写一个稳赢不输的程序，根据对方的出招，给出对应的赢招。但是！为了不让对方输得太惨，你需要每隔<em>K</em>次就让一个平局。</p>
<h3 id="输入格式：-35"><a href="#输入格式：-35" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入首先在第一行给出正整数<em>K</em>（≤10），即平局间隔的次数。随后每行给出对方的一次出招：<code>ChuiZi</code>代表“锤子”、<code>JianDao</code>代表“剪刀”、<code>Bu</code>代表“布”。<code>End</code>代表输入结束，这一行不要作为出招处理。</p>
<h3 id="输出格式：-35"><a href="#输出格式：-35" class="headerlink" title="输出格式："></a>输出格式：</h3><p>对每一个输入的出招，按要求输出稳赢或平局的招式。每招占一行。</p>
<h3 id="输入样例：-21"><a href="#输入样例：-21" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">ChuiZi</span><br><span class="line">JianDao</span><br><span class="line">Bu</span><br><span class="line">JianDao</span><br><span class="line">Bu</span><br><span class="line">ChuiZi</span><br><span class="line">ChuiZi</span><br><span class="line">End</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-21"><a href="#输出样例：-21" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Bu</span><br><span class="line">ChuiZi</span><br><span class="line">Bu</span><br><span class="line">ChuiZi</span><br><span class="line">JianDao</span><br><span class="line">ChuiZi</span><br><span class="line">Bu</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-143"><a href="#代码如下：-143" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">100</span>];</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>,index=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">strcmp</span>(str,<span class="string">&quot;End&quot;</span>)!=<span class="number">0</span>) &#123;</span><br><span class="line">        index++;</span><br><span class="line">        <span class="keyword">if</span> (index % (n+<span class="number">1</span>) == <span class="number">0</span>)  <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, str);</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(str, <span class="string">&quot;ChuiZi&quot;</span>)==<span class="number">0</span>)  <span class="built_in">printf</span>(<span class="string">&quot;Bu\n&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(str, <span class="string">&quot;JianDao&quot;</span>)==<span class="number">0</span>)   <span class="built_in">printf</span>(<span class="string">&quot;ChuiZi\n&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;JianDao\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-147-比较大小"><a href="#7-147-比较大小" class="headerlink" title="7-147 比较大小"></a><strong>7-147 比较大小</strong></h1><p>本题要求将输入的任意3个整数从小到大输出。</p>
<h3 id="输入格式-39"><a href="#输入格式-39" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出3个整数，其间以空格分隔。</p>
<h3 id="输出格式-39"><a href="#输出格式-39" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中将3个整数从小到大输出，其间以“-&gt;”相连。</p>
<h3 id="输入样例-31"><a href="#输入样例-31" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 2 8</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-31"><a href="#输出样例-31" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2-&gt;4-&gt;8</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-144"><a href="#代码如下：-144" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>, c = <span class="number">0</span>,temp=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b) &#123;</span><br><span class="line">        temp = a;</span><br><span class="line">        a = b;</span><br><span class="line">        b = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; c) &#123;</span><br><span class="line">        temp = a;</span><br><span class="line">        a = c;</span><br><span class="line">        c = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (b &gt; c) &#123;</span><br><span class="line">        temp = b;</span><br><span class="line">        b = c;</span><br><span class="line">        c = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d-&gt;%d-&gt;%d&quot;</span>, a, b, c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-148-编程团体赛"><a href="#7-148-编程团体赛" class="headerlink" title="7-148 编程团体赛"></a><strong>7-148 编程团体赛</strong></h1><p>编程团体赛的规则为：每个参赛队由若干队员组成；所有队员独立比赛；参赛队的成绩为所有队员的成绩和；成绩最高的队获胜。</p>
<p>现给定所有队员的比赛成绩，请你编写程序找出冠军队。</p>
<h3 id="输入格式：-36"><a href="#输入格式：-36" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出一个正整数 <em>N</em>（≤104），即所有参赛队员总数。随后 <em>N</em> 行，每行给出一位队员的成绩，格式为：<code>队伍编号-队员编号 成绩</code>，其中<code>队伍编号</code>为 1 到 1000 的正整数，<code>队员编号</code>为 1 到 10 的正整数，<code>成绩</code>为 0 到 100 的整数。</p>
<h3 id="输出格式：-36"><a href="#输出格式：-36" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出冠军队的编号和总成绩，其间以一个空格分隔。注意：题目保证冠军队是唯一的。</p>
<h3 id="输入样例：-22"><a href="#输入样例：-22" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">3-10 99</span><br><span class="line">11-5 87</span><br><span class="line">102-1 0</span><br><span class="line">102-3 100</span><br><span class="line">11-9 89</span><br><span class="line">3-2 61</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-22"><a href="#输出样例：-22" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">11 176</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-145"><a href="#代码如下：-145" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> team[<span class="number">1001</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>, index = <span class="number">0</span>,max=INT_MIN;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">1000</span>; ++i)    team[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="type">int</span> teami = <span class="number">0</span>, peoplei = <span class="number">0</span>, grade = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d-%d %d&quot;</span>, &amp;teami, &amp;peoplei, &amp;grade);</span><br><span class="line">        team[teami] += grade;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">1000</span>; ++i) &#123;</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">if</span> (team[i] &gt; max) &#123;</span><br><span class="line">            max = team[i];</span><br><span class="line">            index = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, index, max);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-149-Hello-World"><a href="#7-149-Hello-World" class="headerlink" title="7-149 Hello World"></a><strong>7-149 Hello World</strong></h1><p>这道超级简单的题目没有任何输入。</p>
<p>你只需要在一行中输出著名短句“Hello World!”就可以了。</p>
<h3 id="输入样例：-23"><a href="#输入样例：-23" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-23"><a href="#输出样例：-23" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello World!</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-146"><a href="#代码如下：-146" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> team[<span class="number">1001</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-150-打印沙漏"><a href="#7-150-打印沙漏" class="headerlink" title="7-150 打印沙漏"></a><strong>7-150 打印沙漏</strong></h1><p>本题要求你写个程序把给定的符号打印成沙漏的形状。例如给定17个“*”，要求按下列格式打印</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">*****</span><br><span class="line"> ***</span><br><span class="line">  *</span><br><span class="line"> ***</span><br><span class="line">*****</span><br></pre></td></tr></table></figure>
<p>所谓“沙漏形状”，是指每行输出奇数个符号；各行符号中心对齐；相邻两行符号数差2；符号数先从大到小顺序递减到1，再从小到大顺序递增；首尾符号数相等。</p>
<p>给定任意N个符号，不一定能正好组成一个沙漏。要求打印出的沙漏能用掉尽可能多的符号。</p>
<h3 id="输入格式-40"><a href="#输入格式-40" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行给出1个正整数N（≤1000）和一个符号，中间以空格分隔。</p>
<h3 id="输出格式-40"><a href="#输出格式-40" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>首先打印出由给定符号组成的最大的沙漏形状，最后在一行中输出剩下没用掉的符号数。</p>
<h3 id="输入样例-32"><a href="#输入样例-32" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">19 *</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-32"><a href="#输出样例-32" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*****</span><br><span class="line"> ***</span><br><span class="line">  *</span><br><span class="line"> ***</span><br><span class="line">*****</span><br><span class="line">2</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-147"><a href="#代码如下：-147" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">num</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>)    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">            sum += (<span class="number">2</span> * i - <span class="number">1</span>) * <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>, index = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %c&quot;</span>, &amp;n,&amp;c);</span><br><span class="line">    <span class="keyword">while</span> (num(index) &lt; n) &#123;</span><br><span class="line">        index++;</span><br><span class="line">    &#125;</span><br><span class="line">    index--;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= index; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; i; ++j)    <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">2</span> * index - <span class="number">2</span> * i + <span class="number">1</span>; ++j)   <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,c);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= index - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= index<span class="number">-1</span>-i; ++j)   <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">2</span> * i + <span class="number">1</span>; ++j)   <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,c);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>)    <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>, c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, n - num(index));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-151-个位数统计"><a href="#7-151-个位数统计" class="headerlink" title="7-151 个位数统计"></a><strong>7-151 个位数统计</strong></h1><p>给定一个 <em>k</em> 位整数 <em>N</em>=<em>d**k</em>−110<em>k</em>−1+⋯+<em>d</em>1101+<em>d</em>0 (0≤<em>d**i</em>≤9, <em>i</em>=0,⋯,<em>k</em>−1, <em>d**k</em>−1&gt;0)，请编写程序统计每种不同的个位数字出现的次数。例如：给定 <em>N</em>=100311，则有 2 个 0，3 个 1，和 1 个 3。</p>
<h3 id="输入格式：-37"><a href="#输入格式：-37" class="headerlink" title="输入格式："></a>输入格式：</h3><p>每个输入包含 1 个测试用例，即一个不超过 1000 位的正整数 <em>N</em>。</p>
<h3 id="输出格式：-37"><a href="#输出格式：-37" class="headerlink" title="输出格式："></a>输出格式：</h3><p>对 <em>N</em> 中每一种不同的个位数字，以 <code>D:M</code> 的格式在一行中输出该位数字 <code>D</code> 及其在 <em>N</em> 中出现的次数 <code>M</code>。要求按 <code>D</code> 的升序输出。</p>
<h3 id="输入样例：-24"><a href="#输入样例：-24" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">100311</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-24"><a href="#输出样例：-24" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0:2</span><br><span class="line">1:3</span><br><span class="line">3:1</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-148"><a href="#代码如下：-148" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">char</span> num[<span class="number">1001</span>] = &#123; <span class="string">&#x27; &#x27;</span> &#125;;</span><br><span class="line"><span class="type">int</span> dig[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; ++i)   dig[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, num);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(num); ++i) &#123;</span><br><span class="line">        dig[num[i] - <span class="string">&#x27;0&#x27;</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (dig[i] != <span class="number">0</span>)  <span class="built_in">printf</span>(<span class="string">&quot;%d:%d\n&quot;</span>, i, dig[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-152-考试座位号"><a href="#7-152-考试座位号" class="headerlink" title="7-152 考试座位号"></a><strong>7-152 考试座位号</strong></h1><p>每个 PAT 考生在参加考试时都会被分配两个座位号，一个是试机座位，一个是考试座位。正常情况下，考生在入场时先得到试机座位号码，入座进入试机状态后，系统会显示该考生的考试座位号码，考试时考生需要换到考试座位就座。但有些考生迟到了，试机已经结束，他们只能拿着领到的试机座位号码求助于你，从后台查出他们的考试座位号码。</p>
<h3 id="输入格式：-38"><a href="#输入格式：-38" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出一个正整数 <em>N</em>（≤1000），随后 <em>N</em> 行，每行给出一个考生的信息：<code>准考证号 试机座位号 考试座位号</code>。其中<code>准考证号</code>由 16 位数字组成，座位从 1 到 <em>N</em> 编号。输入保证每个人的准考证号都不同，并且任何时候都不会把两个人分配到同一个座位上。</p>
<p>考生信息之后，给出一个正整数 <em>M</em>（≤<em>N</em>），随后一行中给出 <em>M</em> 个待查询的试机座位号码，以空格分隔。</p>
<h3 id="输出格式：-38"><a href="#输出格式：-38" class="headerlink" title="输出格式："></a>输出格式：</h3><p>对应每个需要查询的试机座位号码，在一行中输出对应考生的准考证号和考试座位号码，中间用 1 个空格分隔。</p>
<h3 id="输入样例：-25"><a href="#输入样例：-25" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">3310120150912233 2 4</span><br><span class="line">3310120150912119 4 1</span><br><span class="line">3310120150912126 1 3</span><br><span class="line">3310120150912002 3 2</span><br><span class="line">2</span><br><span class="line">3 4</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-25"><a href="#输出样例：-25" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3310120150912002 2</span><br><span class="line">3310120150912119 1</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>200 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-149"><a href="#代码如下：-149" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> d[<span class="number">1001</span>] = &#123; <span class="number">0</span> &#125;,n=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> num[<span class="number">1001</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1001</span>; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        num[i] = <span class="number">0</span>;</span><br><span class="line">        d[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> tean = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> tsn = <span class="number">0</span>, esn = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld %d %d&quot;</span>, &amp;tean, &amp;tsn, &amp;esn);</span><br><span class="line">        num[tsn] = tean;</span><br><span class="line">        d[tsn] = esn;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t; ++i) &#123;</span><br><span class="line">        <span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld %d\n&quot;</span>, num[p], d[p]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-153-念数字"><a href="#7-153-念数字" class="headerlink" title="7-153 念数字"></a><strong>7-153 念数字</strong></h1><p>输入一个整数，输出每个数字对应的拼音。当整数为负数时，先输出<code>fu</code>字。十个数字对应的拼音如下：</p>
<figure class="highlight ldif"><table><tr><td class="code"><pre><span class="line"><span class="attribute">0</span>: ling</span><br><span class="line"><span class="attribute">1</span>: yi</span><br><span class="line"><span class="attribute">2</span>: er</span><br><span class="line"><span class="attribute">3</span>: san</span><br><span class="line"><span class="attribute">4</span>: si</span><br><span class="line"><span class="attribute">5</span>: wu</span><br><span class="line"><span class="attribute">6</span>: liu</span><br><span class="line"><span class="attribute">7</span>: qi</span><br><span class="line"><span class="attribute">8</span>: ba</span><br><span class="line"><span class="attribute">9</span>: jiu</span><br></pre></td></tr></table></figure>
<h3 id="输入格式：-39"><a href="#输入格式：-39" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个整数，如：<code>1234</code>。</p>
<p><strong>提示：整数包括负数、零和正数。</strong></p>
<h3 id="输出格式：-39"><a href="#输出格式：-39" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出这个整数对应的拼音，每个数字的拼音之间用空格分开，行末没有最后的空格。如<br><code>yi er san si</code>。</p>
<h3 id="输入样例：-26"><a href="#输入样例：-26" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-600</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-26"><a href="#输出样例：-26" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fu liu ling ling</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-150"><a href="#代码如下：-150" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">prt</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>)    <span class="built_in">printf</span>(<span class="string">&quot;ling&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">1</span>)   <span class="built_in">printf</span>(<span class="string">&quot;yi&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">2</span>)   <span class="built_in">printf</span>(<span class="string">&quot;er&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">3</span>)   <span class="built_in">printf</span>(<span class="string">&quot;san&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">4</span>)   <span class="built_in">printf</span>(<span class="string">&quot;si&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">5</span>)   <span class="built_in">printf</span>(<span class="string">&quot;wu&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">6</span>)   <span class="built_in">printf</span>(<span class="string">&quot;liu&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">7</span>)   <span class="built_in">printf</span>(<span class="string">&quot;qi&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">8</span>)   <span class="built_in">printf</span>(<span class="string">&quot;ba&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span>    <span class="built_in">printf</span>(<span class="string">&quot;jiu&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> n[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(n); ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i)  <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (n[i] == <span class="string">&#x27;-&#x27;</span>)   <span class="built_in">printf</span>(<span class="string">&quot;fu&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> prt(n[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-154-求整数段和"><a href="#7-154-求整数段和" class="headerlink" title="7-154 求整数段和"></a><strong>7-154 求整数段和</strong></h1><p>给定两个整数<em>A</em>和<em>B</em>，输出从<em>A</em>到<em>B</em>的所有整数以及这些数的和。</p>
<h3 id="输入格式：-40"><a href="#输入格式：-40" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出2个整数<em>A</em>和<em>B</em>，其中−100≤<em>A</em>≤<em>B</em>≤100，其间以空格分隔。</p>
<h3 id="输出格式：-40"><a href="#输出格式：-40" class="headerlink" title="输出格式："></a>输出格式：</h3><p>首先顺序输出从<em>A</em>到<em>B</em>的所有整数，每5个数字占一行，每个数字占5个字符宽度，向右对齐。最后在一行中按<code>Sum = X</code>的格式输出全部数字的和<code>X</code>。</p>
<h3 id="输入样例：-27"><a href="#输入样例：-27" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-3 8</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-27"><a href="#输出样例：-27" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">   -3   -2   -1    0    1</span><br><span class="line">    2    3    4    5    6</span><br><span class="line">    7    8</span><br><span class="line">Sum = 30</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 M</p>
<h2 id="代码如下：-151"><a href="#代码如下：-151" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = a; i &lt;= b; ++i) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%5d&quot;</span>, i);</span><br><span class="line">        sum += i;</span><br><span class="line">        <span class="keyword">if</span> ((i + <span class="number">1</span> - a) % <span class="number">5</span> == <span class="number">0</span>)    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ((b - a + <span class="number">1</span>) % <span class="number">5</span> != <span class="number">0</span>)    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Sum = %d&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-155-N个数求和"><a href="#7-155-N个数求和" class="headerlink" title="7-155 N个数求和"></a><strong>7-155 N个数求和</strong></h1><p>本题的要求很简单，就是求<code>N</code>个数字的和。麻烦的是，这些数字是以有理数<code>分子/分母</code>的形式给出的，你输出的和也必须是有理数的形式。</p>
<h3 id="输入格式：-41"><a href="#输入格式：-41" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出一个正整数<code>N</code>（≤100）。随后一行按格式<code>a1/b1 a2/b2 ...</code>给出<code>N</code>个有理数。题目保证所有分子和分母都在长整型范围内。另外，负数的符号一定出现在分子前面。</p>
<h3 id="输出格式：-41"><a href="#输出格式：-41" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出上述数字和的最简形式 —— 即将结果写成<code>整数部分 分数部分</code>，其中分数部分写成<code>分子/分母</code>，要求分子小于分母，且它们没有公因子。如果结果的整数部分为0，则只输出分数部分。</p>
<h3 id="输入样例1：-9"><a href="#输入样例1：-9" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">2/5 4/15 1/30 -2/60 8/3</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1：-9"><a href="#输出样例1：-9" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 1/3</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2：-9"><a href="#输入样例2：-9" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">2</span></span><br><span class="line"><span class="attribute">4</span>/<span class="number">3</span> <span class="number">2</span>/<span class="number">3</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例2：-9"><a href="#输出样例2：-9" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>
<h3 id="输入样例3：-2"><a href="#输入样例3：-2" class="headerlink" title="输入样例3："></a>输入样例3：</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">3</span></span><br><span class="line"><span class="attribute">1</span>/<span class="number">3</span> -<span class="number">1</span>/<span class="number">6</span> <span class="number">1</span>/<span class="number">8</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例3：-2"><a href="#输出样例3：-2" class="headerlink" title="输出样例3："></a>输出样例3：</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">7</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-152"><a href="#代码如下：-152" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//求最大公倍数数</span></span><br><span class="line"><span class="type">long</span> <span class="title function_">lcd</span><span class="params">(<span class="type">long</span> a, <span class="type">long</span> b)</span> &#123;</span><br><span class="line">    <span class="type">long</span> m = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b) m = a;</span><br><span class="line">    <span class="keyword">else</span> m = b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">long</span> i = m; i &lt;= a * b; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i % a == <span class="number">0</span> &amp;&amp; i % b == <span class="number">0</span>)   <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//最小公约数</span></span><br><span class="line"><span class="type">long</span> <span class="title function_">gcd</span><span class="params">(<span class="type">long</span> a, <span class="type">long</span> b)</span> &#123;</span><br><span class="line">    <span class="type">long</span> m = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; <span class="number">0</span>)  a = -a;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; b) m = a;</span><br><span class="line">    <span class="keyword">else</span> m = b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">long</span> i = m; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a % i == <span class="number">0</span> &amp;&amp; b % i == <span class="number">0</span>)  <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//化简</span></span><br><span class="line"><span class="type">long</span> <span class="title function_">gcdmyself</span><span class="params">(<span class="type">long</span>* a, <span class="type">long</span>* b)</span> &#123;</span><br><span class="line">    <span class="type">long</span> mlcd = gcd(*a, *b);</span><br><span class="line">    <span class="comment">//printf(&quot;mcld is %ld\n&quot;, mlcd);</span></span><br><span class="line">    *a = *a / mlcd;</span><br><span class="line">    *b = *b / mlcd;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">long</span>* n, <span class="type">long</span>* a, <span class="type">long</span>* b, <span class="type">long</span>* a1, <span class="type">long</span>* b1)</span> &#123;</span><br><span class="line">    <span class="type">long</span> blcd = lcd(*b, *b1);</span><br><span class="line">    <span class="type">long</span> alcd = (blcd / *b) * (*a) + (blcd / *b1) * (*a1) + (*n) * blcd;</span><br><span class="line">    <span class="type">long</span> tgcd = gcd(alcd,blcd);</span><br><span class="line">    <span class="keyword">if</span> (alcd != <span class="number">0</span>) &#123;</span><br><span class="line">        *a = alcd / tgcd;</span><br><span class="line">        *b = blcd / tgcd;</span><br><span class="line">        *n = *a / (*b);</span><br><span class="line">        *a = *a - (*n) * (*b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        *n = <span class="number">0</span>;</span><br><span class="line">        *a = <span class="number">0</span>;</span><br><span class="line">        *b = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">put</span><span class="params">(<span class="type">long</span> num, <span class="type">long</span> a, <span class="type">long</span> b)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="number">0</span> &amp;&amp; num == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (num != <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%ld %ld/%ld&quot;</span>, num, a, b);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%ld/%ld&quot;</span>, a, b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%ld&quot;</span>, num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">long</span> a[<span class="number">101</span>] = &#123; <span class="number">0</span> &#125;, b[<span class="number">101</span>] = &#123; <span class="number">0</span> &#125;, num = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%ld/%ld&quot;</span>, &amp;a[<span class="number">1</span>], &amp;b[<span class="number">1</span>]);</span><br><span class="line">    gcdmyself(&amp;a[<span class="number">1</span>], &amp;b[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%ld/%ld&quot;</span>, &amp;a[i], &amp;b[i]);</span><br><span class="line">        gcdmyself(&amp;a[i], &amp;b[i]);    </span><br><span class="line">        add(&amp;num, &amp;a[<span class="number">1</span>], &amp;b[<span class="number">1</span>], &amp;a[i], &amp;b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    put(num, a[<span class="number">1</span>], b[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-156-A-B"><a href="#7-156-A-B" class="headerlink" title="7-156 A-B"></a><strong>7-156 A-B</strong></h1><p>本题要求你计算<em>A</em>−<em>B</em>。不过麻烦的是，<em>A</em>和<em>B</em>都是字符串 —— 即从字符串<em>A</em>中把字符串<em>B</em>所包含的字符全删掉，剩下的字符组成的就是字符串<em>A</em>−<em>B</em>。</p>
<h3 id="输入格式：-42"><a href="#输入格式：-42" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在2行中先后给出字符串<em>A</em>和<em>B</em>。两字符串的长度都不超过104，并且保证每个字符串都是由可见的ASCII码和空白字符组成，最后以换行符结束。</p>
<h3 id="输出格式：-42"><a href="#输出格式：-42" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中打印出<em>A</em>−<em>B</em>的结果字符串。</p>
<h3 id="输入样例：-28"><a href="#输入样例：-28" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">I love GPLT!  It&#x27;s a fun game!</span><br><span class="line">aeiou</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-28"><a href="#输出样例：-28" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">I lv GPLT!  It&#x27;s  fn gm!</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>150 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-153"><a href="#代码如下：-153" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">containsAny</span><span class="params">(<span class="type">char</span>* a, <span class="type">char</span> c)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a); ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] == c) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> a[<span class="number">99999</span>], b[<span class="number">99999</span>], c[<span class="number">99999</span>];</span><br><span class="line">    fgets(a, <span class="keyword">sizeof</span>(a), <span class="built_in">stdin</span>);</span><br><span class="line">    fgets(b, <span class="keyword">sizeof</span>(b), <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a); ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!containsAny(b,a[i])) &#123;</span><br><span class="line">            c[index] = a[i];</span><br><span class="line">            index++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    c[index] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-157-计算指数"><a href="#7-157-计算指数" class="headerlink" title="7-157 计算指数"></a><strong>7-157 计算指数</strong></h1><p>真的没骗你，这道才是简单题 —— 对任意给定的不超过 10 的正整数 <em>n</em>，要求你输出 2<em>n</em>。不难吧？</p>
<h3 id="输入格式：-43"><a href="#输入格式：-43" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个不超过 10 的正整数 <em>n</em>。</p>
<h3 id="输出格式：-43"><a href="#输出格式：-43" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中按照格式 <code>2^n = 计算结果</code> 输出 2<em>n</em> 的值。</p>
<h3 id="输入样例：-29"><a href="#输入样例：-29" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-29"><a href="#输出样例：-29" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2^5 = 32</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-154"><a href="#代码如下：-154" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>, res = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        res *= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2^%d = %d&quot;</span>, n, res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-158-计算阶乘和"><a href="#7-158-计算阶乘和" class="headerlink" title="7-158 计算阶乘和"></a><strong>7-158 计算阶乘和</strong></h1><p>对于给定的正整数<em>N</em>，需要你计算 <em>S</em>=1!+2!+3!+…+<em>N</em>!。</p>
<h3 id="输入格式：-44"><a href="#输入格式：-44" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个不超过10的正整数<em>N</em>。</p>
<h3 id="输出格式：-44"><a href="#输出格式：-44" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出<em>S</em>的值。</p>
<h3 id="输入样例：-30"><a href="#输入样例：-30" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-30"><a href="#输出样例：-30" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-155"><a href="#代码如下：-155" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fac</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)   res *= i;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        sum += fac(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-159-简单题"><a href="#7-159-简单题" class="headerlink" title="7-159 简单题"></a><strong>7-159 简单题</strong></h1><p>这次真的没骗你 —— 这道超级简单的题目没有任何输入。</p>
<p>你只需要在一行中输出事实：<code>This is a simple problem.</code> 就可以了。</p>
<h3 id="输入样例：-31"><a href="#输入样例：-31" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-31"><a href="#输出样例：-31" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">This is a simple problem.</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h3 id="代码如下：-156"><a href="#代码如下：-156" class="headerlink" title="代码如下："></a>代码如下：</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;This is a simple problem.&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-160-跟奥巴马一起画方块"><a href="#7-160-跟奥巴马一起画方块" class="headerlink" title="7-160 跟奥巴马一起画方块"></a><strong>7-160 跟奥巴马一起画方块</strong></h1><p>美国总统奥巴马不仅呼吁所有人都学习编程，甚至以身作则编写代码，成为美国历史上首位编写计算机代码的总统。2014年底，为庆祝“计算机科学教育周”正式启动，奥巴马编写了很简单的计算机代码：在屏幕上画一个正方形。现在你也跟他一起画吧！</p>
<h3 id="输入格式：-45"><a href="#输入格式：-45" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出正方形边长<em>N</em>（3≤<em>N</em>≤21）和组成正方形边的某种字符<code>C</code>，间隔一个空格。</p>
<h3 id="输出格式：-45"><a href="#输出格式：-45" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出由给定字符<code>C</code>画出的正方形。但是注意到行间距比列间距大，所以为了让结果看上去更像正方形，我们输出的行数实际上是列数的50%（四舍五入取整）。</p>
<h3 id="输入样例：-32"><a href="#输入样例：-32" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10 a</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-32"><a href="#输出样例：-32" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">aaaaaaaaaa</span><br><span class="line">aaaaaaaaaa</span><br><span class="line">aaaaaaaaaa</span><br><span class="line">aaaaaaaaaa</span><br><span class="line">aaaaaaaaaa</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-157"><a href="#代码如下：-157" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>,t=<span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> c = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %c&quot;</span>, &amp;n, &amp;c);</span><br><span class="line">    t = n % <span class="number">2</span> == <span class="number">0</span> ? n / <span class="number">2</span> : n / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; ++j)   <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, c);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-161-帅到没朋友"><a href="#7-161-帅到没朋友" class="headerlink" title="7-161 帅到没朋友"></a><strong>7-161 帅到没朋友</strong></h1><p>当芸芸众生忙着在朋友圈中发照片的时候，总有一些人因为太帅而没有朋友。本题就要求你找出那些帅到没有朋友的人。</p>
<h3 id="输入格式：-46"><a href="#输入格式：-46" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出一个正整数<code>N</code>（≤100），是已知朋友圈的个数；随后<code>N</code>行，每行首先给出一个正整数<code>K</code>（≤1000），为朋友圈中的人数，然后列出一个朋友圈内的所有人——为方便起见，每人对应一个ID号，为5位数字（从00000到99999），ID间以空格分隔；之后给出一个正整数<code>M</code>（≤10000），为待查询的人数；随后一行中列出<code>M</code>个待查询的ID，以空格分隔。</p>
<p>注意：没有朋友的人可以是根本没安装“朋友圈”，也可以是只有自己一个人在朋友圈的人。虽然有个别自恋狂会自己把自己反复加进朋友圈，但题目保证所有<code>K</code>超过1的朋友圈里都至少有2个不同的人。</p>
<h3 id="输出格式：-46"><a href="#输出格式：-46" class="headerlink" title="输出格式："></a>输出格式：</h3><p>按输入的顺序输出那些帅到没朋友的人。ID间用1个空格分隔，行的首尾不得有多余空格。如果没有人太帅，则输出<code>No one is handsome</code>。</p>
<p>注意：同一个人可以被查询多次，但只输出一次。</p>
<h3 id="输入样例1：-10"><a href="#输入样例1：-10" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">3 11111 22222 55555</span><br><span class="line">2 33333 44444</span><br><span class="line">4 55555 66666 99999 77777</span><br><span class="line">8</span><br><span class="line">55555 44444 10000 88888 22222 11111 23333 88888</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1：-10"><a href="#输出样例1：-10" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10000 88888 23333</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2：-10"><a href="#输入样例2：-10" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">11111</span> <span class="number">22222</span> <span class="number">55555</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">33333</span> <span class="number">44444</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">55555</span> <span class="number">66666</span> <span class="number">99999</span> <span class="number">77777</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="symbol">55555 </span><span class="number">44444</span> <span class="number">22222</span> <span class="number">11111</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例2：-10"><a href="#输出样例2：-10" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">No</span> one <span class="keyword">is</span> handsome</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>200 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-158"><a href="#代码如下：-158" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> people[<span class="number">1000000</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000000</span>; ++i)   people[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= k; ++j) &#123;</span><br><span class="line">            <span class="type">int</span>  temp = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;temp);</span><br><span class="line">            <span class="keyword">if</span>(k&gt;=<span class="number">2</span>)    people[temp] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> m = <span class="number">0</span>,flag=<span class="number">0</span>,judge=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">        <span class="type">int</span> temp = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;temp);</span><br><span class="line">        <span class="keyword">if</span> (!people[temp]) &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag)    <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> flag = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%05d&quot;</span>, temp);</span><br><span class="line">            people[temp] = <span class="number">1</span>;</span><br><span class="line">            judge = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!judge)  <span class="built_in">printf</span>(<span class="string">&quot;No one is handsome&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-162-检查密码"><a href="#7-162-检查密码" class="headerlink" title="7-162 检查密码"></a><strong>7-162 检查密码</strong></h1><p>本题要求你帮助某网站的用户注册模块写一个密码合法性检查的小功能。该网站要求用户设置的密码必须由不少于6个字符组成，并且只能有英文字母、数字和小数点 <code>.</code>，还必须既有字母也有数字。</p>
<h3 id="输入格式：-47"><a href="#输入格式：-47" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出一个正整数 N（≤ 100），随后 N 行，每行给出一个用户设置的密码，为不超过 80 个字符的非空字符串，以回车结束。</p>
<p><strong>注意：</strong> 题目保证不存在只有小数点的输入。</p>
<h3 id="输出格式：-47"><a href="#输出格式：-47" class="headerlink" title="输出格式："></a>输出格式：</h3><p>对每个用户的密码，在一行中输出系统反馈信息，分以下5种：</p>
<ul>
<li>如果密码合法，输出<code>Your password is wan mei.</code>；</li>
<li>如果密码太短，不论合法与否，都输出<code>Your password is tai duan le.</code>；</li>
<li>如果密码长度合法，但存在不合法字符，则输出<code>Your password is tai luan le.</code>；</li>
<li>如果密码长度合法，但只有字母没有数字，则输出<code>Your password needs shu zi.</code>；</li>
<li>如果密码长度合法，但只有数字没有字母，则输出<code>Your password needs zi mu.</code>。</li>
</ul>
<h3 id="输入样例：-33"><a href="#输入样例：-33" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">123s</span><br><span class="line">zheshi.wodepw</span><br><span class="line">1234.5678</span><br><span class="line">WanMei23333</span><br><span class="line">pass*word.6</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-33"><a href="#输出样例：-33" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Your password is tai duan le.</span><br><span class="line">Your password needs shu zi.</span><br><span class="line">Your password needs zi mu.</span><br><span class="line">Your password is wan mei.</span><br><span class="line">Your password is tai luan le.</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-159"><a href="#代码如下：-159" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">//1代表就是合法的，0代表没有</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">legal</span><span class="params">(<span class="type">char</span>* a)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a) ; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">isdigit</span>(a[i]) &amp;&amp; !<span class="built_in">isalpha</span>(a[i]) &amp;&amp; a[i] != <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//1就代表有数字，0代表没有</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">checkdig</span><span class="params">(<span class="type">char</span>* a)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a) ; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isdigit</span>(a[i]))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//1就代表有字母，0代表没有</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">checkalpha</span><span class="params">(<span class="type">char</span>* a)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a) ; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isalpha</span>(a[i]))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">100</span>];</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d\n&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        gets(str);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strlen</span>(str) &lt; <span class="number">6</span>)   <span class="built_in">printf</span>(<span class="string">&quot;Your password is tai duan le.\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!legal(str)) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Your password is tai luan le.\n&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (checkdig(str) &amp;&amp; !checkalpha(str)) <span class="built_in">printf</span>(<span class="string">&quot;Your password needs zi mu.\n&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (!checkdig(str) &amp;&amp; checkalpha(str))   <span class="built_in">printf</span>(<span class="string">&quot;Your password needs shu zi.\n&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (legal(str) &amp;&amp; checkdig(str) &amp;&amp; checkalpha(str))</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Your password is wan mei.\n&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (legal(str) &amp;&amp; !checkdig(str) &amp;&amp; !checkalpha(str))</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Your password is wan mei.\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//printf(&quot;\n&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-163-谷歌的招聘"><a href="#7-163-谷歌的招聘" class="headerlink" title="7-163 谷歌的招聘"></a><strong>7-163 谷歌的招聘</strong></h1><p>2004 年 7 月，谷歌在硅谷的 101 号公路边竖立了一块巨大的广告牌（如下图）用于招聘。内容超级简单，就是一个以 .com 结尾的网址，而前面的网址是一个 10 位素数，这个素数是自然常数 e 中最早出现的 10 位连续数字。能找出这个素数的人，就可以通过访问谷歌的这个网站进入招聘流程的下一步。</p>
<p><img src="http://image.camilleferros.top/Image7_163.jpg" alt=""></p>
<p>自然常数 e 是一个著名的超越数，前面若干位写出来是这样的：e = 2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642<strong>7427466391</strong>932003059921… 其中粗体标出的 10 位数就是答案。</p>
<p>本题要求你编程解决一个更通用的问题：从任一给定的长度为 L 的数字中，找出最早出现的 K 位连续数字所组成的素数。</p>
<h3 id="输入格式：-48"><a href="#输入格式：-48" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第一行给出 2 个正整数，分别是 L（不超过 1000 的正整数，为数字长度）和 K（小于 10 的正整数）。接下来一行给出一个长度为 L 的正整数 N。</p>
<h3 id="输出格式：-48"><a href="#输出格式：-48" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出 N 中最早出现的 K 位连续数字所组成的素数。如果这样的素数不存在，则输出 <code>404</code>。注意，原始数字中的前导零也计算在位数之内。例如在 200236 中找 4 位素数，0023 算是解；但第一位 2 不能被当成 0002 输出，因为在原始数字中不存在这个 2 的前导零。</p>
<h3 id="输入样例-1：-1"><a href="#输入样例-1：-1" class="headerlink" title="输入样例 1："></a>输入样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">20 5</span><br><span class="line">23654987725541023819</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-1：-1"><a href="#输出样例-1：-1" class="headerlink" title="输出样例 1："></a>输出样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">49877</span><br></pre></td></tr></table></figure>
<h3 id="输入样例-2：-1"><a href="#输入样例-2：-1" class="headerlink" title="输入样例 2："></a>输入样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10 3</span><br><span class="line">2468001680</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-2：-1"><a href="#输出样例-2：-1" class="headerlink" title="输出样例 2："></a>输出样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">404</span><br></pre></td></tr></table></figure>
<p><strong>鸣谢用户 大冰 补充数据！</strong></p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>200 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-160"><a href="#代码如下：-160" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">//1就代表是素数，0代表不是</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">prime</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;<span class="number">2</span> )    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i*i&lt;= n ; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n % i == <span class="number">0</span>)  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> temp = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> l = <span class="number">0</span>, k = <span class="number">0</span>, flag = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">1001</span>];</span><br><span class="line">    <span class="type">char</span> tc[<span class="number">1001</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d &quot;</span>, &amp;l, &amp;k);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i + k &lt;= l; ++i) &#123;</span><br><span class="line">        <span class="built_in">strncpy</span>(tc, str + i, k);</span><br><span class="line">        tc[k]=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (prime(atoi(tc))) &#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, tc);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;404&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-164-冠军魔术"><a href="#7-164-冠军魔术" class="headerlink" title="7-164 冠军魔术"></a><strong>7-164 冠军魔术</strong></h1><p>2018年FISM（世界魔术大会）近景总冠军简纶廷的表演中有一个情节：以桌面上一根带子为界，当他将纸牌从带子的一边推到另一边时，纸牌会变成硬币；把硬币推回另一边会变成纸牌。</p>
<p>这里我们假设纸牌会变成等量的硬币，而硬币变成纸牌时，纸牌的数量会加倍。那么给定纸牌的初始数量，当他来回推了 N 次（来/回各算一次）后，手里拿的是纸牌还是硬币？数量是多少？</p>
<h3 id="输入格式：-49"><a href="#输入格式：-49" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行里给出两个正整数，分别是纸牌的初始数量和魔术师推送的次数。这里假设初始状态下魔术师手里全是纸牌。</p>
<h3 id="输出格式：-49"><a href="#输出格式：-49" class="headerlink" title="输出格式："></a>输出格式：</h3><p>如果最后魔术师手里是纸牌，输出 0 和纸牌数量；如果是硬币，则输出 1 和硬币数量。数字间须有 1 个空格。题目保证结果数值不超出整型范围（即 231−1）。</p>
<h3 id="输入样例-1：-2"><a href="#输入样例-1：-2" class="headerlink" title="输入样例 1："></a>输入样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 7</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-1：-2"><a href="#输出样例-1：-2" class="headerlink" title="输出样例 1："></a>输出样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 24</span><br></pre></td></tr></table></figure>
<h3 id="输入样例-2：-2"><a href="#输入样例-2：-2" class="headerlink" title="输入样例 2："></a>输入样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8 4</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-2：-2"><a href="#输出样例-2：-2" class="headerlink" title="输出样例 2："></a>输出样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0 32</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-161"><a href="#代码如下：-161" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">pow</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)    sum *= <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> coins = <span class="number">0</span>, card = <span class="number">0</span>,n=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;card, &amp;n);</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;1 %d&quot;</span>, card * <span class="built_in">pow</span>(n / <span class="number">2</span>));</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;0 %d&quot;</span>, card * <span class="built_in">pow</span>(n / <span class="number">2</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-165-不变初心数"><a href="#7-165-不变初心数" class="headerlink" title="7-165 不变初心数"></a><strong>7-165 不变初心数</strong></h1><p>不变初心数是指这样一种特别的数，它分别乘 2、3、4、5、6、7、8、9 时，所得乘积各位数之和却不变。例如 18 就是这样的数：18 的 2 倍是 36，3+6=9；18 的 3 倍是 54，5+4=9；…… 18 的 9 倍是 162，1+6+2=9。对于 18 而言，9 就是它的初心。本题要求你判断任一个给定的数是否有不变的初心。</p>
<h3 id="输入格式：-50"><a href="#输入格式：-50" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第一行中给出一个正整数 N（≤ 100）。随后 N 行，每行给出一个不超过 105 的正整数。</p>
<h3 id="输出格式：-50"><a href="#输出格式：-50" class="headerlink" title="输出格式："></a>输出格式：</h3><p>对每个给定的数字，如果它有不变的初心，就在一行中输出它的初心；否则输出 <code>NO</code>。</p>
<h3 id="输入样例：-34"><a href="#输入样例：-34" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">18</span><br><span class="line">256</span><br><span class="line">99792</span><br><span class="line">88672</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-34"><a href="#输出样例：-34" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9</span><br><span class="line">NO</span><br><span class="line">36</span><br><span class="line">NO</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下-2"><a href="#代码如下-2" class="headerlink" title="代码如下:"></a>代码如下:</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">digsum</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n) &#123;</span><br><span class="line">        sum += n % <span class="number">10</span>;</span><br><span class="line">        n /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">judge</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (digsum(n * <span class="number">2</span>) == digsum(n * <span class="number">3</span>) &amp;&amp; digsum(n * <span class="number">3</span>) == digsum(n * <span class="number">4</span>) &amp;&amp; digsum(n * <span class="number">4</span>) == digsum(n * <span class="number">5</span>) &amp;&amp; digsum(n * <span class="number">5</span>) == digsum(n * <span class="number">6</span>) &amp;&amp; digsum(n * <span class="number">6</span>) == digsum(n * <span class="number">7</span>) &amp;&amp; digsum(n * <span class="number">7</span>) == digsum(n * <span class="number">8</span>) &amp;&amp; digsum(n * <span class="number">8</span>) == digsum(n * <span class="number">9</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n=<span class="number">0</span>, t = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);</span><br><span class="line">        <span class="keyword">if</span> (judge(t))    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, digsum(t));</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-166-均是素数"><a href="#7-166-均是素数" class="headerlink" title="7-166 均是素数"></a><strong>7-166 均是素数</strong></h1><p>在给定的区间 [<em>m</em>,<em>n</em>] 内，是否存在素数 <em>p</em>、<em>q</em>、<em>r</em>（<em>p</em>&lt;<em>q</em>&lt;<em>r</em>），使得 <em>pq</em>+<em>r</em>、<em>q**r</em>+<em>p</em>、<em>r**p</em>+<em>q</em> 均是素数？</p>
<h3 id="输入格式：-51"><a href="#输入格式：-51" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入给出区间的两个端点 0&lt;<em>m</em>&lt;<em>n</em>≤1000，其间以空格分隔。</p>
<h3 id="输出格式：-51"><a href="#输出格式：-51" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出满足条件的素数三元组的个数。</p>
<h3 id="输入样例：-35"><a href="#输入样例：-35" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 35</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-35"><a href="#输出样例：-35" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure>
<p><strong>样例解读</strong></p>
<p>满足条件的 10 组解为：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">2</span>, <span class="number">3</span>, <span class="number">5</span></span><br><span class="line"><span class="attribute">2</span>, <span class="number">3</span>, <span class="number">7</span></span><br><span class="line"><span class="attribute">2</span>, <span class="number">3</span>, <span class="number">13</span></span><br><span class="line"><span class="attribute">2</span>, <span class="number">3</span>, <span class="number">17</span></span><br><span class="line"><span class="attribute">2</span>, <span class="number">5</span>, <span class="number">7</span></span><br><span class="line"><span class="attribute">2</span>, <span class="number">5</span>, <span class="number">13</span></span><br><span class="line"><span class="attribute">2</span>, <span class="number">5</span>, <span class="number">19</span></span><br><span class="line"><span class="attribute">2</span>, <span class="number">5</span>, <span class="number">31</span></span><br><span class="line"><span class="attribute">2</span>, <span class="number">7</span>, <span class="number">23</span></span><br><span class="line"><span class="attribute">2</span>, <span class="number">13</span>, <span class="number">17</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-162"><a href="#代码如下：-162" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isprime</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">2</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i * i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n % i == <span class="number">0</span>)  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// p、q、r（p&lt;q&lt;r） pq+r、qr+p、rp+q </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> m = <span class="number">0</span>, n = <span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> p = m; p &lt;=n - <span class="number">2</span>; p++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (isprime(p)) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> q = p + <span class="number">1</span>; q &lt;= n - <span class="number">2</span>; q++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (isprime(q)) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> r = q + <span class="number">1</span>; r &lt;= n; ++r) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (isprime(r) &amp;&amp; isprime(p * q + r) &amp;&amp; isprime(q * r + p) &amp;&amp; isprime(r * p + q))</span><br><span class="line">                            sum++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-167-考试周"><a href="#7-167-考试周" class="headerlink" title="7-167 考试周"></a><strong>7-167 考试周</strong></h1><p>考试周快到了，浙江大学的电子屏又调皮了…… 本题请你帮小编写一个自动倒计时的程序，对给定的日期（例如“腊八”就对应 8）和倒计时天数（例如电子屏上的“四天之后”就对应 4），自动调整公式里的分母（例如 8/2=4 里面的那个 2）。</p>
<h3 id="输入格式：-52"><a href="#输入格式：-52" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出两个正整数：<em>A</em> 是给定的日期，不超过 30；<em>B</em> 是倒计时天数，不超过 10。</p>
<h3 id="输出格式：-52"><a href="#输出格式：-52" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出公式 <em>A</em>/<em>X</em>=<em>B</em>，其中 <em>X</em> 是满足等式的数字，输出时保留小数点后 1 位即可。</p>
<h3 id="输入样例：-36"><a href="#输入样例：-36" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8 3</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-36"><a href="#输出样例：-36" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8/2.7=3</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-163"><a href="#代码如下：-163" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">// p、q、r（p&lt;q&lt;r） pq+r、qr+p、rp+q </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d/%.01lf=%d&quot;</span>, a,(<span class="type">double</span>)a / b,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-168-Cassels方程"><a href="#7-168-Cassels方程" class="headerlink" title="7-168 Cassels方程"></a><strong>7-168 Cassels方程</strong></h1><p>Cassels方程是一个在数论界产生了巨大影响的不定方程：<em>x</em>2+<em>y</em>2+<em>z</em>2=3<em>x**yz</em>。该方程有无穷多自然数解。</p>
<p>本题并不是要你求解这个方程，只是判断给定的一组 (<em>x</em>,<em>y</em>,<em>z</em>) 是不是这个方程的解。</p>
<h3 id="输入格式：-53"><a href="#输入格式：-53" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第一行给出一个不超过 10 的正整数 <em>N</em>，随后 <em>N</em> 行，每行给出 3 个正整数 0&lt;<em>x</em>≤<em>y</em>≤<em>z</em>≤1000。</p>
<h3 id="输出格式：-53"><a href="#输出格式：-53" class="headerlink" title="输出格式："></a>输出格式：</h3><p>对于每一组输入，如果是一组解，就在一行中输出 <code>Yes</code>，否则输出 <code>No</code>。</p>
<h3 id="输入样例：-37"><a href="#输入样例：-37" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">1 1 1</span><br><span class="line">5 6 7</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-37"><a href="#输出样例：-37" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Yes</span><br><span class="line">No</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-164"><a href="#代码如下：-164" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">// p、q、r（p&lt;q&lt;r） pq+r、qr+p、rp+q </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="type">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>, z = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;x, &amp;y, &amp;z);</span><br><span class="line">        <span class="keyword">if</span> (x * x + y * y + z * z == <span class="number">3</span> * x * y * z)<span class="built_in">printf</span>(<span class="string">&quot;Yes\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;No\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-169-矩阵列平移"><a href="#7-169-矩阵列平移" class="headerlink" title="7-169 矩阵列平移"></a><strong>7-169 矩阵列平移</strong></h1><p>给定一个 <em>n</em>×<em>n</em> 的整数矩阵。对任一给定的正整数 <em>k</em>&lt;<em>n</em>，我们将矩阵的偶数列的元素整体向下依次平移 1、……、<em>k</em>、1、……、<em>k</em>、…… 个位置，平移空出的位置用整数 <em>x</em> 补。你需要计算出结果矩阵的每一行元素的和。</p>
<h3 id="输入格式：-54"><a href="#输入格式：-54" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出 3 个正整数：<em>n</em>（&lt;100）、<em>k</em>（&lt;<em>n</em>）、<em>x</em>（&lt;100），分别如题面所述。</p>
<p>接下来 <em>n</em> 行，每行给出 <em>n</em> 个不超过 100 的正整数，为矩阵元素的值。数字间以空格分隔。</p>
<h3 id="输出格式：-54"><a href="#输出格式：-54" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出平移后第 1 到 <em>n</em> 行元素的和。数字间以 1 个空格分隔，行首尾不得有多余空格。</p>
<h3 id="输入样例：-38"><a href="#输入样例：-38" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7 2 99</span><br><span class="line">11 87 23 67 20 75 89</span><br><span class="line">37 94 27 91 63 50 11</span><br><span class="line">44 38 50 26 40 26 24</span><br><span class="line">73 85 63 28 62 18 68</span><br><span class="line">15 83 27 97 88 25 43</span><br><span class="line">23 78 98 20 30 81 99</span><br><span class="line">77 36 48 59 25 34 22</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-38"><a href="#输出样例：-38" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">440 399 369 421 302 386 428</span><br></pre></td></tr></table></figure>
<p><strong>样例解读</strong></p>
<p>需要平移的是第 2、4、6 列。给定 <em>k</em>=2，应该将这三列顺次整体向下平移 1、2、1 位（如果有更多列，就应该按照 1、2、1、2 …… 这个规律顺次向下平移），顶端的空位用 99 来填充。平移后的矩阵变成：</p>
<figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">11 </span><span class="number">99</span> <span class="number">23</span> <span class="number">99</span> <span class="number">20</span> <span class="number">99</span> <span class="number">89</span></span><br><span class="line"><span class="symbol">37 </span><span class="number">87</span> <span class="number">27</span> <span class="number">99</span> <span class="number">63</span> <span class="number">75</span> <span class="number">11</span></span><br><span class="line"><span class="symbol">44 </span><span class="number">94</span> <span class="number">50</span> <span class="number">67</span> <span class="number">40</span> <span class="number">50</span> <span class="number">24</span></span><br><span class="line"><span class="symbol">73 </span><span class="number">38</span> <span class="number">63</span> <span class="number">91</span> <span class="number">62</span> <span class="number">26</span> <span class="number">68</span></span><br><span class="line"><span class="symbol">15 </span><span class="number">85</span> <span class="number">27</span> <span class="number">26</span> <span class="number">88</span> <span class="number">18</span> <span class="number">43</span></span><br><span class="line"><span class="symbol">23 </span><span class="number">83</span> <span class="number">98</span> <span class="number">28</span> <span class="number">30</span> <span class="number">25</span> <span class="number">99</span></span><br><span class="line"><span class="symbol">77 </span><span class="number">78</span> <span class="number">48</span> <span class="number">97</span> <span class="number">25</span> <span class="number">81</span> <span class="number">22</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-165"><a href="#代码如下：-165" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Max_N 101</span></span><br><span class="line"><span class="type">int</span> arr[Max_N][Max_N];</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; Max_N; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; Max_N; ++j) &#123;</span><br><span class="line">            arr[i][j] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>, k = <span class="number">0</span>, x = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;k, &amp;x);</span><br><span class="line">    <span class="type">int</span> p_arr[Max_N];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; Max_N; ++i)    p_arr[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; ++j)   <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arr[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//printf(&quot;\n\n&quot;);</span></span><br><span class="line">    <span class="comment">//for (int i = 1; i &lt;= n; ++i) &#123;</span></span><br><span class="line">    <span class="comment">//    for (int j = 1; j &lt;= n; ++j)   printf(&quot;%d &quot;, arr[i][j]);</span></span><br><span class="line">    <span class="comment">//    printf(&quot;\n&quot;);</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line">    <span class="type">int</span> p_k = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> t = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">2</span>; j &lt;= n; j += <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)   p_arr[i] = arr[i][j];    <span class="comment">//一个一个的赋值</span></span><br><span class="line">        <span class="type">int</span> p = (t<span class="number">-1</span>) % k+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= p; ++i) &#123;</span><br><span class="line">            arr[i][j] = x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> new_i = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = p + <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">            arr[i][j] = p_arr[new_i];</span><br><span class="line">            new_i++;</span><br><span class="line">        &#125;</span><br><span class="line">        t++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//测试代码</span></span><br><span class="line">    <span class="comment">//printf(&quot;\n\n&quot;);</span></span><br><span class="line">    <span class="comment">//for (int i = 1; i &lt;= n; ++i) &#123;</span></span><br><span class="line">    <span class="comment">//    for (int j = 1; j &lt;= n; ++j)   printf(&quot;%d &quot;, arr[i][j]);</span></span><br><span class="line">    <span class="comment">//    printf(&quot;\n&quot;);</span></span><br><span class="line">    <span class="comment">//&#125; </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; ++j)   sum += arr[i][j];</span><br><span class="line">        <span class="keyword">if</span> (i != <span class="number">1</span>)    <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, sum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-170-真的恭喜你"><a href="#7-170-真的恭喜你" class="headerlink" title="7-170 真的恭喜你"></a><strong>7-170 真的恭喜你</strong></h1><p>当别人告诉你自己考了 x 分的时候，你要回答说：“恭喜你考了 x 分！”比如小明告诉你他考了90分，你就用汉语拼音打出来 <code>gong xi ni kao le 90 fen!</code>。</p>
<p>但是如果小明没考好，比如只考了 20 分，你也“恭喜”人家就不对了。这时候你应该安慰他说：“考了 20 分别泄气！”用汉语拼音写出来就是 <code>kao le 20 fen bie xie qi!</code>。</p>
<h3 id="输入格式：-55"><a href="#输入格式：-55" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行里给出一位小朋友的分数。这个分数是一个 0 到 100 之间的整数。</p>
<h3 id="输出格式：-55"><a href="#输出格式：-55" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出你对这位小朋友说的话。如果人家考到不低于 90 分，就说 <code>gong xi ni kao le X fen!</code>；如果不到 90 分，就说 <code>kao le X fen bie xie qi!</code>。其中 <code>X</code> 是小朋友输入的分数。</p>
<h3 id="输入样例-1：-3"><a href="#输入样例-1：-3" class="headerlink" title="输入样例 1："></a>输入样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">95</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-1：-3"><a href="#输出样例-1：-3" class="headerlink" title="输出样例 1："></a>输出样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gong xi ni kao le 95 fen!</span><br></pre></td></tr></table></figure>
<h3 id="输入样例-2：-3"><a href="#输入样例-2：-3" class="headerlink" title="输入样例 2："></a>输入样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">89</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-2：-3"><a href="#输出样例-2：-3" class="headerlink" title="输出样例 2："></a>输出样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kao le 89 fen bie xie qi!</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-166"><a href="#代码如下：-166" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">if</span> (n &gt;= <span class="number">90</span>)   <span class="built_in">printf</span>(<span class="string">&quot;gong xi ni kao le %d fen!&quot;</span>, n);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;kao le %d fen bie xie qi!&quot;</span>, n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="7-171-判断一个三位数是否为水仙花数"><a href="#7-171-判断一个三位数是否为水仙花数" class="headerlink" title="7-171 判断一个三位数是否为水仙花数"></a><strong>7-171 判断一个三位数是否为水仙花数</strong></h2><p>本题要求编写程序，判断一个给定的三位数是否为水仙花数。三位水仙花数，即其个位、十位、百位数字的立方和等于该数本身。</p>
<h3 id="输入格式-41"><a href="#输入格式-41" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出一个需要判断的整数 <em>N</em>（100≤<em>N</em>≤999）。</p>
<h3 id="输出格式-41"><a href="#输出格式-41" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>如果<em>N</em>是水仙花数，则在一行中输出<code>Yes</code>，否则输出<code>No</code>。如果<em>N</em>不是三位数，则输出<code>Invalid Value.</code>。</p>
<h3 id="输入样例1-6"><a href="#输入样例1-6" class="headerlink" title="输入样例1:"></a>输入样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">153</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1-6"><a href="#输出样例1-6" class="headerlink" title="输出样例1:"></a>输出样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Yes</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2-6"><a href="#输入样例2-6" class="headerlink" title="输入样例2:"></a>输入样例2:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">500</span><br></pre></td></tr></table></figure>
<h3 id="输出样例2-6"><a href="#输出样例2-6" class="headerlink" title="输出样例2:"></a>输出样例2:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">No</span><br></pre></td></tr></table></figure>
<h3 id="输入样例3-1"><a href="#输入样例3-1" class="headerlink" title="输入样例3:"></a>输入样例3:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-2</span><br></pre></td></tr></table></figure>
<h3 id="输出样例3-1"><a href="#输出样例3-1" class="headerlink" title="输出样例3:"></a>输出样例3:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Invalid Value.</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-167"><a href="#代码如下：-167" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">mi</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> n * n * n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>,sum=<span class="number">0</span>,n_copy=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    n_copy = n;</span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">100</span> || n&gt;<span class="number">999</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Invalid Value.&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (n) &#123;</span><br><span class="line">        sum += mi(n % <span class="number">10</span>);</span><br><span class="line">        n /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum == n_copy) <span class="built_in">printf</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-172-简单求阶乘问题"><a href="#7-172-简单求阶乘问题" class="headerlink" title="7-172 简单求阶乘问题"></a><strong>7-172 简单求阶乘问题</strong></h1><p>本题要求编写程序，计算<em>N</em>的阶乘。</p>
<h3 id="输入格式-42"><a href="#输入格式-42" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出一个不超过12的正整数<em>N</em>。</p>
<h3 id="输出格式-42"><a href="#输出格式-42" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中输出阶乘的值。</p>
<h3 id="输入样例-33"><a href="#输入样例-33" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-33"><a href="#输出样例-33" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">24</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-168"><a href="#代码如下：-168" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">mi</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)   sum *= i;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, mi(n));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-173-英文字母替换加密（大小写转换-后移1位）"><a href="#7-173-英文字母替换加密（大小写转换-后移1位）" class="headerlink" title="7-173 英文字母替换加密（大小写转换+后移1位）"></a><strong>7-173 英文字母替换加密（大小写转换+后移1位）</strong></h1><p>本题要求编写程序，将英文字母替换加密。为了防止信息被别人轻易窃取，需要把电码明文通过加密方式变换成为密文。变换规则是：将明文中的所有英文字母替换为字母表中的后一个字母，同时将小写字母转换为大写字母，大写字母转换为小写字母。例如，字母a-&gt;B、b-&gt;C、…、z-&gt;A、A-&gt;b、B-&gt;c、…、Z-&gt;a。输入一行字符，将其中的英文字母按照以上规则转换后输出，其他字符按原样输出。</p>
<h3 id="输入格式-43"><a href="#输入格式-43" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入一行字符，以回车符 ‘\n’作为 结束符。</p>
<h3 id="输出格式-43"><a href="#输出格式-43" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>将输入的一行字符中的所有英文字母替换为字母表中的后一个字母，同时将小写字母转换为大写字母，大写字母转换为小写字母后输出，其他字符按原样输出。</p>
<h3 id="输入样例-34"><a href="#输入样例-34" class="headerlink" title="输入样例:"></a>输入样例:</h3><p>在这里给出一组输入。例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Reold  Z123?</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-34"><a href="#输出样例-34" class="headerlink" title="输出样例:"></a>输出样例:</h3><p>在这里给出相应的输出。例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sFPME  a123?</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-169"><a href="#代码如下：-169" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Max_arr 99999</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> arr[Max_arr] = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="type">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;c);</span><br><span class="line">    <span class="keyword">while</span> (c != <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">        arr[i] = c;</span><br><span class="line">        ++i;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;c);</span><br><span class="line">    &#125;</span><br><span class="line">    arr[i] = <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="comment">//for (int i = 0; i &lt; Max_arr; ++i) &#123;</span></span><br><span class="line">    <span class="comment">//    if (arr[i] &gt;= &#x27;a&#x27; &amp;&amp; arr[i] &lt;= &#x27;z&#x27;)    arr[i] = (arr[i] - 95) % 26 + 64;</span></span><br><span class="line">    <span class="comment">//    else if(arr[i] &gt;= &#x27;A&#x27; &amp;&amp; arr[i] &lt;= &#x27;Z&#x27;) arr[i] = (arr[i] - 63) % 26 + 96;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (arr[i] != <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; arr[i] &lt;= <span class="string">&#x27;z&#x27;</span>)    arr[i] = ((arr[i] - <span class="number">97</span>) + <span class="number">1</span>) % <span class="number">26</span> + <span class="number">65</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (arr[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; arr[i] &lt;= <span class="string">&#x27;Z&#x27;</span>) arr[i] = ((arr[i] - <span class="number">65</span>) + <span class="number">1</span>) % <span class="number">26</span> + <span class="number">97</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, arr[i]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-174-字母串"><a href="#7-174-字母串" class="headerlink" title="7-174 字母串"></a><strong>7-174 字母串</strong></h1><p>英语老师要求学生按照如下规则写一串字母：</p>
<ul>
<li>如果写了某个大写字母，下一个就必须写同个字母的小写，或者写字母表中下一个字母的大写；</li>
<li>如果写了某个小写字母，下一个就必须写同个字母的大写，或者写字母表中前一个字母的小写；</li>
<li>当然也可以什么都不写，就结束这个字母串。</li>
</ul>
<p>例如 <code>aAaABCDdcbBC</code> 就是一个合法的字母串；而 <code>dEFfeFGhI</code> 就是非法的。注意 <code>a</code> 没有前一个字母， <code>Z</code> 也没有下一个字母。</p>
<p>现在面对全班学生交上来的作业，老师请你写个程序自动批改。</p>
<h3 id="输入格式：-56"><a href="#输入格式：-56" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第一行给出一个不超过 100 的正整数 N。随后 N 行，每行给出一位学生的作业，即仅由英文字母组成的非空字母串，长度不超过 2×106。</p>
<h3 id="输出格式：-56"><a href="#输出格式：-56" class="headerlink" title="输出格式："></a>输出格式：</h3><p>对每位学生的作业，如果正确就在一行中输出 <code>Y</code>，否则输出 <code>N</code>。</p>
<h3 id="输入样例：-39"><a href="#输入样例：-39" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">aAaABCDdcbBC</span><br><span class="line">dEFfeFGhI</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-39"><a href="#输出样例：-39" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Y</span><br><span class="line">N</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>800 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="代码如下：-170"><a href="#代码如下：-170" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">judge</span><span class="params">(<span class="type">char</span> a, <span class="type">char</span> b)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (a &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; a &lt;= <span class="string">&#x27;z&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b == a - <span class="number">32</span> || (b == a - <span class="number">1</span> &amp;&amp; a &gt;= <span class="string">&#x27;b&#x27;</span>))  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; a &lt;= <span class="string">&#x27;Z&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b == a + <span class="number">32</span> || (b == a + <span class="number">1</span> &amp;&amp; a &lt;= <span class="string">&#x27;Y&#x27;</span>))  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;  <span class="comment">//学生的人数</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">while</span> (n) &#123;</span><br><span class="line">        <span class="type">char</span> a[<span class="number">3000000</span>];</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, a);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a) - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">            <span class="type">char</span> b = a[i];</span><br><span class="line">            <span class="type">char</span> c = a[i + <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (judge(b, c) == <span class="number">0</span>) &#123;</span><br><span class="line">                res = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (res == <span class="number">0</span>)  <span class="built_in">printf</span>(<span class="string">&quot;Y\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;N\n&quot;</span>);</span><br><span class="line">        n--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-175-口罩发放"><a href="#7-175-口罩发放" class="headerlink" title="7-175 口罩发放"></a><strong>7-175 口罩发放</strong></h1><p>为了抗击来势汹汹的 COVID19 新型冠状病毒，全国各地均启动了各项措施控制疫情发展，其中一个重要的环节是口罩的发放。</p>
<p>某市出于给市民发放口罩的需要，推出了一款小程序让市民填写信息，方便工作的开展。小程序收集了各种信息，包括市民的姓名、身份证、身体情况、提交时间等，但因为数据量太大，需要根据一定规则进行筛选和处理，请你编写程序，按照给定规则输出口罩的寄送名单。</p>
<h3 id="输入格式-44"><a href="#输入格式-44" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入第一行是两个正整数 <em>D</em> 和 <em>P</em>（1≤<em>D</em>,<em>P</em>≤30），表示有 <em>D</em> 天的数据，市民两次获得口罩的时间至少需要间隔 <em>P</em> 天。</p>
<p>接下来 <em>D</em> 块数据，每块给出一天的申请信息。第 <em>i</em> 块数据（<em>i</em>=1,⋯,<em>D</em>）的第一行是两个整数 <em>T**i</em> 和 <em>S**i</em>（1≤<em>T**i</em>,<em>S**i</em>≤1000），表示在第 <em>i</em> 天有 <em>T**i</em> 条申请，总共有 <em>S**i</em> 个口罩发放名额。随后 <em>T**i</em> 行，每行给出一条申请信息，格式如下：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">姓名 身份证号 身体情况 提交时间</span><br></pre></td></tr></table></figure>
<p>给定数据约束如下：</p>
<ul>
<li><code>姓名</code> 是一个长度不超过 10 的不包含空格的非空字符串；</li>
<li><code>身份证号</code> 是一个长度不超过 20 的非空字符串；</li>
<li><code>身体情况</code> 是 0 或者 1，0 表示自觉良好，1 表示有相关症状；</li>
<li><code>提交时间</code> 是 hh:mm，为24小时时间（由 <code>00:00</code> 到 <code>23:59</code>。例如 09:08。）。注意，给定的记录的提交时间不一定有序；</li>
<li><code>身份证号</code> 各不相同，同一个身份证号被认为是同一个人，数据保证同一个身份证号姓名是相同的。</li>
</ul>
<p>能发放口罩的记录要求如下：</p>
<ul>
<li><code>身份证号</code> 必须是 18 位的<strong>数字</strong>（可以包含前导0）；</li>
<li>同一个身份证号若在第 <em>i</em> 天申请成功，则接下来的 <em>P</em> 天不能再次申请。也就是说，若第 <em>i</em> 天申请成功，则等到第 <em>i</em>+<em>P</em>+1 天才能再次申请；</li>
<li>在上面两条都符合的情况下，按照提交时间的先后顺序发放，直至全部记录处理完毕或 <em>S**i</em> 个名额用完。如果提交时间相同，则按照在列表中出现的先后顺序决定。</li>
</ul>
<h3 id="输出格式-44"><a href="#输出格式-44" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>对于每一天的申请记录，每行输出一位得到口罩的人的姓名及身份证号，用一个空格隔开。顺序按照发放顺序确定。</p>
<p>在输出完发放记录后，你还需要输出有合法记录的、身体状况为 1 的申请人的姓名及身份证号，用空格隔开。顺序按照申请记录中出现的顺序确定，同一个人只需要输出一次。</p>
<h3 id="输入样例-35"><a href="#输入样例-35" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 2</span><br><span class="line">5 3</span><br><span class="line">A 123456789012345670 1 13:58</span><br><span class="line">B 123456789012345671 0 13:58</span><br><span class="line">C 12345678901234567 0 13:22</span><br><span class="line">D 123456789012345672 0 03:24</span><br><span class="line">C 123456789012345673 0 13:59</span><br><span class="line">4 3</span><br><span class="line">A 123456789012345670 1 13:58</span><br><span class="line">E 123456789012345674 0 13:59</span><br><span class="line">C 123456789012345673 0 13:59</span><br><span class="line">F F 0 14:00</span><br><span class="line">1 3</span><br><span class="line">E 123456789012345674 1 13:58</span><br><span class="line">1 1</span><br><span class="line">A 123456789012345670 0 14:11</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-35"><a href="#输出样例-35" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D 123456789012345672</span><br><span class="line">A 123456789012345670</span><br><span class="line">B 123456789012345671</span><br><span class="line">E 123456789012345674</span><br><span class="line">C 123456789012345673</span><br><span class="line">A 123456789012345670</span><br><span class="line">A 123456789012345670</span><br><span class="line">E 123456789012345674</span><br></pre></td></tr></table></figure>
<h3 id="样例解释："><a href="#样例解释：" class="headerlink" title="样例解释："></a>样例解释：</h3><p>输出中，第一行到第三行是第一天的部分；第四、五行是第二天的部分；第三天没有符合要求的市民；第六行是第四天的部分。最后两行按照出现顺序输出了可能存在身体不适的人员。</p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-171"><a href="#代码如下：-171" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_PEOPLE 1010     <span class="comment">// 每天最多申请口罩的人数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_MAYBE 30010     <span class="comment">// 总共可能有症状的人的最大数量</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_NAME 11         <span class="comment">// 姓名的最大长度</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_ID 21           <span class="comment">// 身份证号的最大长度</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HASH_SIZE 10007     <span class="comment">// 哈希表的大小</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义存储每个申请人的信息的结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> name[MAX_NAME];  <span class="comment">// 申请人的姓名</span></span><br><span class="line">    <span class="type">char</span> id[MAX_ID];      <span class="comment">// 申请人的身份证号</span></span><br><span class="line">    <span class="type">int</span> st;               <span class="comment">// 身体状况 (0: 良好, 1: 有症状)</span></span><br><span class="line">    <span class="type">int</span> h;                <span class="comment">// 提交时间的小时部分</span></span><br><span class="line">    <span class="type">int</span> m;                <span class="comment">// 提交时间的分钟部分</span></span><br><span class="line">    <span class="type">int</span> no;               <span class="comment">// 申请人在当天的序号</span></span><br><span class="line">&#125; People;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义存储可能有症状的人的信息的结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> name[MAX_NAME];  <span class="comment">// 可能有症状的人的姓名</span></span><br><span class="line">    <span class="type">char</span> id[MAX_ID];      <span class="comment">// 可能有症状的人的身份证号</span></span><br><span class="line">&#125; Maybe;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义存储申请记录的结构体，用于哈希表</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Record</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> id[MAX_ID];      <span class="comment">// 申请人的身份证号</span></span><br><span class="line">    <span class="type">int</span> day;              <span class="comment">// 最后一次领取口罩的天数</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Record</span> *<span class="title">next</span>;</span>  <span class="comment">// 指向下一个记录的指针</span></span><br><span class="line">&#125; Record;</span><br><span class="line"></span><br><span class="line">People people[MAX_PEOPLE];      <span class="comment">// 存储每天申请人的信息</span></span><br><span class="line">Maybe maybe[MAX_MAYBE];         <span class="comment">// 存储所有可能有症状的人的信息</span></span><br><span class="line">Record *hash_table[HASH_SIZE];  <span class="comment">// 哈希表，用于快速查找申请记录</span></span><br><span class="line"><span class="type">int</span> idx = <span class="number">0</span>;                    <span class="comment">// 记录可能有症状的人的数量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 比较函数，用于qsort对申请人按时间和序号进行排序</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">compare_people</span><span class="params">(<span class="type">const</span> <span class="type">void</span> *a, <span class="type">const</span> <span class="type">void</span> *b)</span> &#123;</span><br><span class="line">    People *pa = (People *)a;</span><br><span class="line">    People *pb = (People *)b;</span><br><span class="line">    <span class="comment">// 先按小时排序</span></span><br><span class="line">    <span class="keyword">if</span> (pa-&gt;h != pb-&gt;h) <span class="keyword">return</span> pa-&gt;h - pb-&gt;h;</span><br><span class="line">    <span class="comment">// 小时相同则按分钟排序</span></span><br><span class="line">    <span class="keyword">if</span> (pa-&gt;m != pb-&gt;m) <span class="keyword">return</span> pa-&gt;m - pb-&gt;m;</span><br><span class="line">    <span class="comment">// 时间相同则按当天的序号排序</span></span><br><span class="line">    <span class="keyword">return</span> pa-&gt;no - pb-&gt;no;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查身份证号是否有效，必须为18位且全为数字</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">check</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *id)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strlen</span>(id) != <span class="number">18</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">18</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (id[i] &lt; <span class="string">&#x27;0&#x27;</span> || id[i] &gt; <span class="string">&#x27;9&#x27;</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将时间字符串转换为小时和分钟</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">convert</span><span class="params">(<span class="type">int</span> *h, <span class="type">int</span> *m, <span class="type">const</span> <span class="type">char</span> *str)</span> &#123;</span><br><span class="line">    <span class="built_in">sscanf</span>(str, <span class="string">&quot;%d:%d&quot;</span>, h, m);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 哈希函数，将字符串转换为哈希值</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">hash</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *str)</span> &#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> hash = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (*str) &#123;</span><br><span class="line">        hash = (hash * <span class="number">31</span>) + *str++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> hash % HASH_SIZE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在哈希表中查找记录</span></span><br><span class="line">Record* <span class="title function_">find_record</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *id)</span> &#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> index = hash(id);</span><br><span class="line">    Record *entry = hash_table[index];</span><br><span class="line">    <span class="keyword">while</span> (entry != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(entry-&gt;id, id) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> entry;</span><br><span class="line">        &#125;</span><br><span class="line">        entry = entry-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向哈希表中插入记录</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">insert_record</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *id, <span class="type">int</span> day)</span> &#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> index = hash(id);</span><br><span class="line">    Record *entry = (Record *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Record));</span><br><span class="line">    <span class="built_in">strcpy</span>(entry-&gt;id, id);</span><br><span class="line">    entry-&gt;day = day;</span><br><span class="line">    entry-&gt;next = hash_table[index];</span><br><span class="line">    hash_table[index] = entry;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 清空哈希表，释放内存</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">clear_records</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; HASH_SIZE; i++) &#123;</span><br><span class="line">        Record *entry = hash_table[i];</span><br><span class="line">        <span class="keyword">while</span> (entry != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            Record *temp = entry;</span><br><span class="line">            entry = entry-&gt;next;</span><br><span class="line">            <span class="built_in">free</span>(temp);</span><br><span class="line">        &#125;</span><br><span class="line">        hash_table[i] = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> d = <span class="number">0</span>, p = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 读取天数d和最少间隔天数p</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;d, &amp;p);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 处理每一天的数据</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= d; i++) &#123;</span><br><span class="line">        <span class="type">int</span> n = <span class="number">0</span>, cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 读取当天申请人数n和可发放口罩的数量cnt</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;cnt);</span><br><span class="line">        <span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取每个申请人的信息</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="type">char</span> name[MAX_NAME], id[MAX_ID], str[<span class="number">10</span>];</span><br><span class="line">            <span class="type">int</span> h = <span class="number">0</span>, m = <span class="number">0</span>, st = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">// 读取申请人的姓名、身份证号、身体状况和提交时间</span></span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s %s %d %s&quot;</span>, name, id, &amp;st, str);</span><br><span class="line">            <span class="comment">// 将时间字符串转换为小时和分钟</span></span><br><span class="line">            convert(&amp;h, &amp;m, str);</span><br><span class="line">            <span class="comment">// 检查身份证号是否有效</span></span><br><span class="line">            <span class="keyword">if</span> (check(id)) &#123;</span><br><span class="line">                <span class="comment">// 将有效申请人的信息存储到people数组中</span></span><br><span class="line">                <span class="built_in">strcpy</span>(people[k].name, name);</span><br><span class="line">                <span class="built_in">strcpy</span>(people[k].id, id);</span><br><span class="line">                people[k].st = st;</span><br><span class="line">                people[k].h = h;</span><br><span class="line">                people[k].m = m;</span><br><span class="line">                people[k].no = j;</span><br><span class="line">                k++;</span><br><span class="line">                <span class="comment">// 如果有症状，将信息存储到maybe数组中</span></span><br><span class="line">                <span class="keyword">if</span> (st) &#123;</span><br><span class="line">                    <span class="built_in">strcpy</span>(maybe[idx].name, name);</span><br><span class="line">                    <span class="built_in">strcpy</span>(maybe[idx].id, id);</span><br><span class="line">                    idx++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 按提交时间和顺序对申请人进行排序</span></span><br><span class="line">        qsort(people, k, <span class="keyword">sizeof</span>(People), compare_people);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发放口罩</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; k &amp;&amp; cnt &gt; <span class="number">0</span>; j++) &#123;</span><br><span class="line">            Record *record = find_record(people[j].id);</span><br><span class="line">            <span class="comment">// 检查是否符合发放条件</span></span><br><span class="line">            <span class="keyword">if</span> (record == <span class="literal">NULL</span> || i &gt;= record-&gt;day + p + <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="comment">// 打印领取口罩的人的姓名和身份证号</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%s %s\n&quot;</span>, people[j].name, people[j].id);</span><br><span class="line">                <span class="keyword">if</span> (record == <span class="literal">NULL</span>) &#123;</span><br><span class="line">                    insert_record(people[j].id, i);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    record-&gt;day = i;</span><br><span class="line">                &#125;</span><br><span class="line">                cnt--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出可能有症状的人的信息，去重</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; idx; j++) &#123;</span><br><span class="line">        Record *record = find_record(maybe[j].id);</span><br><span class="line">        <span class="keyword">if</span> (record == <span class="literal">NULL</span> || record-&gt;day != d + <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">// 打印可能有症状的人的姓名和身份证号</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s %s\n&quot;</span>, maybe[j].name, maybe[j].id);</span><br><span class="line">            <span class="keyword">if</span> (record == <span class="literal">NULL</span>) &#123;</span><br><span class="line">                insert_record(maybe[j].id, d + <span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                record-&gt;day = d + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 清空记录，释放内存</span></span><br><span class="line">    clear_records();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-176-降价提醒机器人"><a href="#7-176-降价提醒机器人" class="headerlink" title="7-176 降价提醒机器人"></a><strong>7-176 降价提醒机器人</strong></h1><p>小 T 想买一个玩具很久了，但价格有些高，他打算等便宜些再买。但天天盯着购物网站很麻烦，请你帮小 T 写一个降价提醒机器人，当玩具的当前价格比他设定的价格便宜时发出提醒。</p>
<h3 id="输入格式：-57"><a href="#输入格式：-57" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行是两个正整数 <em>N</em> 和 <em>M</em> (1≤<em>N</em>≤100,0≤<em>M</em>≤1000)，表示有 <em>N</em> 条价格记录，小 T 设置的价格为 <em>M</em>。</p>
<p>接下来 <em>N</em> 行，每行有一个实数 <em>P**i</em>（−1000.0&lt;<em>P**i</em>&lt;1000.0），表示一条价格记录。</p>
<h3 id="输出格式：-57"><a href="#输出格式：-57" class="headerlink" title="输出格式："></a>输出格式：</h3><p>对每一条比设定价格 <em>M</em> 便宜的价格记录 <code>P</code>，在一行中输出 <code>On Sale! P</code>，其中 <code>P</code> 输出到小数点后 1 位。</p>
<h3 id="输入样例：-40"><a href="#输入样例：-40" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 99</span><br><span class="line">98.0</span><br><span class="line">97.0</span><br><span class="line">100.2</span><br><span class="line">98.9</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-40"><a href="#输出样例：-40" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">On Sale! 98.0</span><br><span class="line">On Sale! 97.0</span><br><span class="line">On Sale! 98.9</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>Java (javac)</p>
<p>时间限制</p>
<p>600 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>其他编译器</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-172"><a href="#代码如下：-172" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">float</span> n = <span class="number">0</span>, m = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%f%f&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="type">float</span> p = <span class="number">0</span>;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;p);</span><br><span class="line">		<span class="keyword">if</span> (p &lt; m)	<span class="built_in">printf</span>(<span class="string">&quot;On Sale! %.01f\n&quot;</span>, p);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-177-整数算术运算"><a href="#7-177-整数算术运算" class="headerlink" title="7-177 整数算术运算"></a><strong>7-177 整数算术运算</strong></h1><p>本题要求编写程序，计算并输出2个正整数的和、差、积、商与余数。题目保证输入和输出全部在整型范围内。</p>
<h3 id="输入格式-45"><a href="#输入格式-45" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出2个正整数A和B。</p>
<h3 id="输出格式-45"><a href="#输出格式-45" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在5行中按照格式“A 运算符 B = 结果”顺序输出和、差、积、商与余数。</p>
<h3 id="输入样例-36"><a href="#输入样例-36" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 3</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-36"><a href="#输出样例-36" class="headerlink" title="输出样例:"></a>输出样例:</h3><p>在这里给出相应的输出。例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 + 3 = 8</span><br><span class="line">5 - 3 = 2</span><br><span class="line">5 * 3 = 15</span><br><span class="line">5 / 3 = 1</span><br><span class="line">5 % 3 = 2</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-173"><a href="#代码如下：-173" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>, m = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d + %d = %d\n&quot;</span>, n, m, n + m);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d - %d = %d\n&quot;</span>, n, m, n - m);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d * %d = %d\n&quot;</span>, n, m, n * m);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d / %d = %d\n&quot;</span>, n, m, n / m);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d %% %d = %d\n&quot;</span>, n, m, n % m);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-178-找出三位水仙花数"><a href="#7-178-找出三位水仙花数" class="headerlink" title="7-178 找出三位水仙花数"></a><strong>7-178 找出三位水仙花数</strong></h1><p>本题要求编写程序，输出给定正整数<em>M</em>和<em>N</em>区间内的所有三位水仙花数。三位水仙花数，即其个位、十位、百位数字的立方和等于该数本身。</p>
<h3 id="输入格式-46"><a href="#输入格式-46" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出两个正整数<em>M</em>和<em>N</em>（100≤<em>M</em>≤<em>N</em>≤999）。</p>
<h3 id="输出格式-46"><a href="#输出格式-46" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>顺序输出<em>M</em>和<em>N</em>区间内所有三位水仙花数，每一行输出一个数。若该区间内没有三位水仙花数，则无输出。</p>
<p>如果<em>M</em>或者<em>N</em>不符合题目的要求，则输出<code>Invalid Value.</code>。</p>
<h3 id="输入样例1-7"><a href="#输入样例1-7" class="headerlink" title="输入样例1:"></a>输入样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">100 400</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1-7"><a href="#输出样例1-7" class="headerlink" title="输出样例1:"></a>输出样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">153</span><br><span class="line">370</span><br><span class="line">371</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2-7"><a href="#输入样例2-7" class="headerlink" title="输入样例2:"></a>输入样例2:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">500 600</span><br></pre></td></tr></table></figure>
<h3 id="输出样例2-7"><a href="#输出样例2-7" class="headerlink" title="输出样例2:"></a>输出样例2:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="输入样例3：-3"><a href="#输入样例3：-3" class="headerlink" title="输入样例3："></a>输入样例3：</h3><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">990 </span><span class="number">101</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例3：-3"><a href="#输出样例3：-3" class="headerlink" title="输出样例3："></a>输出样例3：</h3><figure class="highlight erlang"><table><tr><td class="code"><pre><span class="line">Invalid Value.</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-174"><a href="#代码如下：-174" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Narcissistic</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> t = n;</span><br><span class="line">	<span class="keyword">while</span> (n) &#123;</span><br><span class="line">		<span class="type">int</span> i = n % <span class="number">10</span>;</span><br><span class="line">		sum += i * i * i;</span><br><span class="line">		n /= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (sum == t)	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> m = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line">	<span class="keyword">if</span> (m &gt;= <span class="number">100</span> &amp;&amp; n &lt;= <span class="number">999</span> &amp;&amp; n &gt;= m) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = m; i &lt;= n; ++i) &#123;</span><br><span class="line">			<span class="keyword">if</span> (Narcissistic(i))	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Invalid Value.&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-179-统计MOOC证书"><a href="#7-179-统计MOOC证书" class="headerlink" title="7-179 统计MOOC证书"></a><strong>7-179 统计MOOC证书</strong></h1><p>本题要求编写程序，输入<em>N</em>个学生的MOOC成绩，统计优秀、合格证书的数量，以及没有获得证书的数量。学生修读程序设计MOOC，<code>85</code>分及以上获得优秀证书，不到<code>85</code>分但是<code>60</code>分及以上获得合格证书，不到<code>60</code>分则没有证书。</p>
<h3 id="输入格式-47"><a href="#输入格式-47" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在第一行中给出非负整数<em>N</em>，即学生人数。第二行给出<em>N</em>个非负整数，即这<em>N</em>位学生的成绩，其间以空格分隔。</p>
<h3 id="输出格式-47"><a href="#输出格式-47" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中依次输出优秀证书、合格证书、没有获得证书的数量，中间以空格分隔。请注意，最后一个数字后没有空格。</p>
<h3 id="输入样例1-8"><a href="#输入样例1-8" class="headerlink" title="输入样例1:"></a>输入样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7</span><br><span class="line">85 59 86 60 84 61 45</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1-8"><a href="#输出样例1-8" class="headerlink" title="输出样例1:"></a>输出样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 3 2</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2-8"><a href="#输入样例2-8" class="headerlink" title="输入样例2:"></a>输入样例2:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">91  100  88 75</span><br></pre></td></tr></table></figure>
<h3 id="输出样例2-8"><a href="#输出样例2-8" class="headerlink" title="输出样例2:"></a>输出样例2:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 1 0</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-175"><a href="#代码如下：-175" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> m = <span class="number">0</span>, per = <span class="number">0</span>, good = <span class="number">0</span>, bad = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">		<span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);</span><br><span class="line">		<span class="keyword">if</span> (t &gt;= <span class="number">85</span>)	per++;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (t &gt;= <span class="number">60</span>)	good++;</span><br><span class="line">		<span class="keyword">else</span>  bad++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d %d %d&quot;</span>, per, good, bad);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-180-嫑废话上代码"><a href="#7-180-嫑废话上代码" class="headerlink" title="7-180 嫑废话上代码"></a><strong>7-180 嫑废话上代码</strong></h1><p>Linux 之父 Linus Torvalds 的名言是：“Talk is cheap. Show me the code.”（嫑废话，上代码）。本题就请你直接在屏幕上输出这句话。</p>
<h3 id="输入格式：-58"><a href="#输入格式：-58" class="headerlink" title="输入格式："></a>输入格式：</h3><p>本题没有输入。</p>
<h3 id="输出格式：-58"><a href="#输出格式：-58" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出 <code>Talk is cheap. Show me the code.</code>。</p>
<h3 id="输入样例：-41"><a href="#输入样例：-41" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-41"><a href="#输出样例：-41" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Talk is cheap. Show me the code.</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-176"><a href="#代码如下：-176" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;Talk is cheap. Show me the code.&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-181-猫是液体"><a href="#7-181-猫是液体" class="headerlink" title="7-181 猫是液体"></a><strong>7-181 猫是液体</strong></h1><p>测量一个人的体积是很难的，但猫就不一样了。因为猫是液体，所以可以很容易地通过测量一个长方体容器的容积来得到容器里猫的体积。本题就请你完成这个计算。</p>
<h3 id="输入格式：-59"><a href="#输入格式：-59" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第一行中给出 3 个不超过 100 的正整数，分别对应容器的长、宽、高。</p>
<h3 id="输出格式：-59"><a href="#输出格式：-59" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出猫的体积。</p>
<h3 id="输入样例：-42"><a href="#输入样例：-42" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">23 15 20</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-42"><a href="#输出样例：-42" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6900</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-177"><a href="#代码如下：-177" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>, c = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a * b * c);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-182-洛希极限"><a href="#7-182-洛希极限" class="headerlink" title="7-182 洛希极限"></a><strong>7-182 洛希极限</strong></h1><p>科幻电影《流浪地球》中一个重要的情节是地球距离木星太近时，大气开始被木星吸走，而随着不断接近地木“刚体洛希极限”，地球面临被彻底撕碎的危险。但实际上，这个计算是错误的。</p>
<p>洛希极限（Roche limit）是一个天体自身的引力与第二个天体造成的潮汐力相等时的距离。当两个天体的距离少于洛希极限，天体就会倾向碎散，继而成为第二个天体的环。它以首位计算这个极限的人爱德华·洛希命名。（摘自百度百科）</p>
<p>大天体密度与小天体的密度的比值开 3 次方后，再乘以大天体的半径以及一个倍数（流体对应的倍数是 2.455，刚体对应的倍数是 1.26），就是洛希极限的值。例如木星与地球的密度比值开 3 次方是 0.622，如果假设地球是流体，那么洛希极限就是 0.622×2.455=1.52701 倍木星半径；但地球是刚体，对应的洛希极限是 0.622×1.26=0.78372 倍木星半径，这个距离比木星半径小，即只有当地球位于木星内部的时候才会被撕碎，换言之，就是地球不可能被撕碎。</p>
<p>本题就请你判断一个小天体会不会被一个大天体撕碎。</p>
<h3 id="输入格式：-60"><a href="#输入格式：-60" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出 3 个数字，依次为：大天体密度与小天体的密度的比值开 3 次方后计算出的值（≤1）、小天体的属性（0 表示流体、1 表示刚体）、两个天体的距离与大天体半径的比值（&gt;1 但不超过 10）。</p>
<h3 id="输出格式：-60"><a href="#输出格式：-60" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中首先输出小天体的洛希极限与大天体半径的比值（输出小数点后2位）；随后空一格；最后输出 <code>^_^</code> 如果小天体不会被撕碎，否则输出 <code>T_T</code>。</p>
<h3 id="输入样例-1：-4"><a href="#输入样例-1：-4" class="headerlink" title="输入样例 1："></a>输入样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0.622 0 1.4</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-1：-4"><a href="#输出样例-1：-4" class="headerlink" title="输出样例 1："></a>输出样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.53 T_T</span><br></pre></td></tr></table></figure>
<h3 id="输入样例-2：-4"><a href="#输入样例-2：-4" class="headerlink" title="输入样例 2："></a>输入样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0.622 1 1.4</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-2：-4"><a href="#输出样例-2：-4" class="headerlink" title="输出样例 2："></a>输出样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0.78 ^_^</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-178"><a href="#代码如下：-178" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">double</span> a = <span class="number">0</span>, b = <span class="number">0</span>,c=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf%lf&quot;</span>, &amp;a, &amp;b,&amp;c);</span><br><span class="line">	<span class="keyword">if</span> (b == <span class="number">0</span>)	a *= <span class="number">2.455</span>;</span><br><span class="line">	<span class="keyword">else</span> a *= <span class="number">1.26</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%.02lf &quot;</span>, a);</span><br><span class="line">	<span class="keyword">if</span> (a &gt; c)	<span class="built_in">printf</span>(<span class="string">&quot;T_T&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;^_^&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-183-调和平均"><a href="#7-183-调和平均" class="headerlink" title="7-183 调和平均"></a><strong>7-183 调和平均</strong></h1><p><em>N</em> 个正数的<strong>算数平均</strong>是这些数的和除以 <em>N</em>，它们的<strong>调和平均</strong>是它们倒数的算数平均的倒数。本题就请你计算给定的一系列正数的调和平均值。</p>
<h3 id="输入格式：-61"><a href="#输入格式：-61" class="headerlink" title="输入格式："></a>输入格式：</h3><p>每个输入包含 1 个测试用例。每个测试用例第 1 行给出正整数 <em>N</em> (≤1000)；第 2 行给出 <em>N</em> 个正数，都在区间 [0.1,100] 内。</p>
<h3 id="输出格式：-61"><a href="#输出格式：-61" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出给定数列的调和平均值，输出小数点后2位。</p>
<h3 id="输入样例：-43"><a href="#输入样例：-43" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">10 15 12.7 0.3 4 13 1 15.6</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-43"><a href="#输出样例：-43" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.61</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-179"><a href="#代码如下：-179" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="type">double</span> m = <span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;m);</span><br><span class="line">		sum += <span class="number">1.0</span> / m;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%.02lf&quot;</span>, <span class="number">1</span>/(sum/n));</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-184-胎压监测"><a href="#7-184-胎压监测" class="headerlink" title="7-184 胎压监测"></a><strong>7-184 胎压监测</strong></h1><p>小轿车中有一个系统随时监测四个车轮的胎压，如果四轮胎压不是很平衡，则可能对行车造成严重的影响。</p>
<p>让我们把四个车轮 —— 左前轮、右前轮、右后轮、左后轮 —— 顺次编号为 1、2、3、4。本题就请你编写一个监测程序，随时监测四轮的胎压，并给出正确的报警信息。报警规则如下：</p>
<ul>
<li>如果所有轮胎的压力值与它们中的最大值误差在一个给定阈值内，并且都不低于系统设定的最低报警胎压，则说明情况正常，不报警；</li>
<li>如果存在一个轮胎的压力值与它们中的最大值误差超过了阈值，或者低于系统设定的最低报警胎压，则不仅要报警，而且要给出可能漏气的轮胎的准确位置；</li>
<li>如果存在两个或两个以上轮胎的压力值与它们中的最大值误差超过了阈值，或者低于系统设定的最低报警胎压，则报警要求检查所有轮胎。</li>
</ul>
<h3 id="输入格式：-62"><a href="#输入格式：-62" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出 6 个 [0, 400] 范围内的整数，依次为 1~4 号轮胎的胎压、最低报警胎压、以及胎压差的阈值。</p>
<h3 id="输出格式：-62"><a href="#输出格式：-62" class="headerlink" title="输出格式："></a>输出格式：</h3><p>根据输入的胎压值给出对应信息：</p>
<ul>
<li>如果不用报警，输出 <code>Normal</code>；</li>
<li>如果有一个轮胎需要报警，输出 <code>Warning: please check #X!</code>，其中 <code>X</code> 是出问题的轮胎的编号；</li>
<li>如果需要检查所有轮胎，输出 <code>Warning: please check all the tires!</code>。</li>
</ul>
<h3 id="输入样例-1：-5"><a href="#输入样例-1：-5" class="headerlink" title="输入样例 1："></a>输入样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">242 251 231 248 230 20</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-1：-5"><a href="#输出样例-1：-5" class="headerlink" title="输出样例 1："></a>输出样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Normal</span><br></pre></td></tr></table></figure>
<h3 id="输入样例-2：-5"><a href="#输入样例-2：-5" class="headerlink" title="输入样例 2："></a>输入样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">242 251 232 248 230 10</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-2：-5"><a href="#输出样例-2：-5" class="headerlink" title="输出样例 2："></a>输出样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Warning: please check #3!</span><br></pre></td></tr></table></figure>
<h3 id="输入样例-3："><a href="#输入样例-3：" class="headerlink" title="输入样例 3："></a>输入样例 3：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">240 251 232 248 240 10</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-3："><a href="#输出样例-3：" class="headerlink" title="输出样例 3："></a>输出样例 3：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Warning: please check all the tires!</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-180"><a href="#代码如下：-180" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> ary[<span class="number">4</span>] = &#123;<span class="number">0</span>&#125;, min = <span class="number">0</span>, min_n = <span class="number">0</span>,max=INT_MIN;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;ary[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;min, &amp;min_n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (ary[i] &gt; max)	max = ary[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> wrong[<span class="number">4</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)	wrong[i] = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (ary[i]&lt;min || max - ary[i]&gt;min_n)	wrong[i] = <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (wrong[<span class="number">0</span>] + wrong[<span class="number">1</span>] + wrong[<span class="number">2</span>] + wrong[<span class="number">3</span>] &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Warning: please check all the tires!&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(wrong[<span class="number">0</span>] + wrong[<span class="number">1</span>] + wrong[<span class="number">2</span>] + wrong[<span class="number">3</span>] &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">			<span class="keyword">if</span>(wrong[i])</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;Warning: please check #%d!\n&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Normal&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-185-吃火锅"><a href="#7-185-吃火锅" class="headerlink" title="7-185 吃火锅"></a><strong>7-185 吃火锅</strong></h1><p>这种天气你有什么破事打电话给我基本没用。但是如果你说“吃火锅”，那就厉害了，我们的故事就开始了。</p>
<p>本题要求你实现一个程序，自动检查你朋友给你发来的信息里有没有 <code>chi1 huo3 guo1</code>。</p>
<h3 id="输入格式：-63"><a href="#输入格式：-63" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入每行给出一句不超过 80 个字符的、以回车结尾的朋友信息，信息为非空字符串，仅包括字母、数字、空格、可见的半角标点符号。当读到某一行只有一个英文句点 <code>.</code> 时，输入结束，此行不算在朋友信息里。</p>
<h3 id="输出格式：-63"><a href="#输出格式：-63" class="headerlink" title="输出格式："></a>输出格式：</h3><p>首先在一行中输出朋友信息的总条数。然后对朋友的每一行信息，检查其中是否包含 <code>chi1 huo3 guo1</code>，并且统计这样厉害的信息有多少条。在第二行中首先输出第一次出现 <code>chi1 huo3 guo1</code> 的信息是第几条（从 1 开始计数），然后输出这类信息的总条数，其间以一个空格分隔。题目保证输出的所有数字不超过 100。</p>
<p>如果朋友从头到尾都没提 <code>chi1 huo3 guo1</code> 这个关键词，则在第二行输出一个表情 <code>-_-#</code>。</p>
<h3 id="输入样例-1：-6"><a href="#输入样例-1：-6" class="headerlink" title="输入样例 1："></a>输入样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello!</span><br><span class="line">are you there?</span><br><span class="line">wantta chi1 huo3 guo1?</span><br><span class="line">that&#x27;s so li hai le</span><br><span class="line">our story begins from chi1 huo3 guo1 le</span><br><span class="line">.</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-1：-6"><a href="#输出样例-1：-6" class="headerlink" title="输出样例 1："></a>输出样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">3 2</span><br></pre></td></tr></table></figure>
<h3 id="输入样例-2：-6"><a href="#输入样例-2：-6" class="headerlink" title="输入样例 2："></a>输入样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello!</span><br><span class="line">are you there?</span><br><span class="line">wantta qi huo3 guo1 chi1huo3guo1?</span><br><span class="line">that&#x27;s so li hai le</span><br><span class="line">our story begins from ci1 huo4 guo2 le</span><br><span class="line">.</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-2：-6"><a href="#输出样例-2：-6" class="headerlink" title="输出样例 2："></a>输出样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">-_-#</span><br></pre></td></tr></table></figure>
<p><strong>题目引用自团体程序设计天梯赛真题（2020年）。</strong></p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-181"><a href="#代码如下：-181" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">char</span> str[<span class="number">82</span>], substr[] = <span class="string">&quot;chi1 huo3 guo1&quot;</span>;</span><br><span class="line">	<span class="type">int</span> time = <span class="number">0</span>, begin = <span class="number">0</span>,all=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">do</span> &#123;</span><br><span class="line">		time++;</span><br><span class="line">		<span class="comment">//读入一行字符串的函数</span></span><br><span class="line">		fgets(str, <span class="keyword">sizeof</span>(str), <span class="built_in">stdin</span>);</span><br><span class="line">		<span class="type">char</span>* pos = <span class="built_in">strstr</span>(str, substr);</span><br><span class="line">		<span class="comment">//printf(&quot;%s&quot;, ary);</span></span><br><span class="line">		<span class="keyword">if</span> (pos != <span class="literal">NULL</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span>(begin==<span class="number">0</span>)&#123;</span><br><span class="line">				begin=time;</span><br><span class="line">			&#125;</span><br><span class="line">			all++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">while</span> (<span class="built_in">strcmp</span>(str,<span class="string">&quot;.\n&quot;</span>)!=<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">if</span> (begin != <span class="number">0</span>) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n%d %d&quot;</span>, time - <span class="number">1</span>, begin, all);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n-_-#&quot;</span>, time - <span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-186-前世档案"><a href="#7-186-前世档案" class="headerlink" title="7-186 前世档案"></a><strong>7-186 前世档案</strong></h1><p><img src="http://image.camilleferros.top/Image7_186_01.jpg" alt=""></p>
<p>网络世界中时常会遇到这类滑稽的算命小程序，实现原理很简单，随便设计几个问题，根据玩家对每个问题的回答选择一条判断树中的路径（如下图所示），结论就是路径终点对应的那个结点。</p>
<p><img src="http://image.camilleferros.top/Image7_186_02.jpg" alt=""></p>
<p>现在我们把结论从左到右顺序编号，编号从 1 开始。这里假设回答都是简单的“是”或“否”，又假设回答“是”对应向左的路径，回答“否”对应向右的路径。给定玩家的一系列回答，请你返回其得到的结论的编号。</p>
<h3 id="输入格式：-64"><a href="#输入格式：-64" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出两个正整数：<em>N</em>（≤30）为玩家做一次测试要回答的问题数量；<em>M</em>（≤100）为玩家人数。</p>
<p>随后 <em>M</em> 行，每行顺次给出玩家的 <em>N</em> 个回答。这里用 <code>y</code> 代表“是”，用 <code>n</code> 代表“否”。</p>
<h3 id="输出格式：-64"><a href="#输出格式：-64" class="headerlink" title="输出格式："></a>输出格式：</h3><p>对每个玩家，在一行中输出其对应的结论的编号。</p>
<h3 id="输入样例：-44"><a href="#输入样例：-44" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 4</span><br><span class="line">yny</span><br><span class="line">nyy</span><br><span class="line">nyn</span><br><span class="line">yyn</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-44"><a href="#输出样例：-44" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">2</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-182"><a href="#代码如下：-182" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// input</span></span><br><span class="line">    <span class="type">int</span> n, m; <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;m; i++)&#123;</span><br><span class="line">        <span class="comment">// 读走换行符</span></span><br><span class="line">        getchar();</span><br><span class="line">        <span class="comment">// input + process</span></span><br><span class="line">        <span class="comment">// 叶子结点从1开始编号</span></span><br><span class="line">        <span class="type">int</span> sum = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>; j&lt;n; j++)&#123;</span><br><span class="line">            <span class="type">char</span> ch = getchar();</span><br><span class="line">            <span class="keyword">if</span> (ch == <span class="string">&#x27;n&#x27;</span>)</span><br><span class="line">              sum += <span class="built_in">pow</span>(<span class="number">2</span>, n<span class="number">-1</span>-j); <span class="comment">// 计数</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// output</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-187-统计字符-2"><a href="#7-187-统计字符-2" class="headerlink" title="7-187 统计字符[2]"></a><strong>7-187 统计字符[2]</strong></h1><p>本题要求编写程序，输入N个字符，统计其中英文字母、空格或回车、数字字符和其他字符的个数。</p>
<h3 id="输入格式-48"><a href="#输入格式-48" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在第一行中给出正整数N，第二行输入N个字符，最后一个回车表示输入结束，不算在内。</p>
<h3 id="输出格式-48"><a href="#输出格式-48" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行内按照</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">letter</span> = 英文字母个数, blank = 空格或回车个数, digit = 数字字符个数, other = 其他字符个数</span><br></pre></td></tr></table></figure>
<p>的格式输出。请注意，等号的左右各有一个空格，逗号后有一个空格。</p>
<h3 id="输入样例-37"><a href="#输入样例-37" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">aZ &amp;</span><br><span class="line">09 Az</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-37"><a href="#输出样例-37" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">letter = 4, blank = 3, digit = 2, other = 1</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-183"><a href="#代码如下：-183" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> m = <span class="number">0</span>, letter = <span class="number">0</span>, blank = <span class="number">0</span>, digit = <span class="number">0</span>, other = <span class="number">0</span>,i;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">	<span class="type">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">	c = getchar();</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;=m; ++i) &#123;</span><br><span class="line">		c = getchar();</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">isdigit</span>(c))	digit++;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27; &#x27;</span>||c==<span class="string">&#x27;\n&#x27;</span>)	blank++;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">isalpha</span>(c))	letter++;</span><br><span class="line">		<span class="keyword">else</span> other++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//printf(&quot;\n%d\n&quot;, i);</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;letter = %d, blank = %d, digit = %d, other = %d&quot;</span>, letter, blank, digit, other);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-188-统计数字字符和空格"><a href="#7-188-统计数字字符和空格" class="headerlink" title="7-188 统计数字字符和空格"></a><strong>7-188 统计数字字符和空格</strong></h1><p>本题要求编写程序，输入一行字符，统计其中数字字符、空格和其他字符的个数。建议使用switch语句编写。</p>
<h3 id="输入格式-49"><a href="#输入格式-49" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出若干字符，最后一个回车表示输入结束，不算在内。</p>
<h3 id="输出格式-49"><a href="#输出格式-49" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行内按照</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">blank</span> = 空格个数, digit = 数字字符个数, other = 其他字符个数</span><br></pre></td></tr></table></figure>
<p>的格式输出。请注意，等号的左右各有一个空格，逗号后有一个空格。</p>
<h3 id="输入样例-38"><a href="#输入样例-38" class="headerlink" title="输入样例:"></a>输入样例:</h3><p>在这里给出一组输入。例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Reold 12 or 45T</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-38"><a href="#输出样例-38" class="headerlink" title="输出样例:"></a>输出样例:</h3><p>在这里给出相应的输出。例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">blank = 3, digit = 4, other = 8</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-184"><a href="#代码如下：-184" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">char</span> str[<span class="number">100</span>];</span><br><span class="line">	<span class="type">int</span> blank = <span class="number">0</span>, digit = <span class="number">0</span>, other = <span class="number">0</span>,i;</span><br><span class="line">	fgets(str, <span class="number">100</span>, <span class="built_in">stdin</span>);</span><br><span class="line">	<span class="comment">//printf(&quot;%s&quot;, str);</span></span><br><span class="line">	<span class="comment">//printf(&quot;%d\n&quot;, strlen(str));</span></span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;<span class="built_in">strlen</span>(str); ++i) &#123;</span><br><span class="line">		<span class="type">char</span> c = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">		c = str[i];</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">isdigit</span>(c))	digit++;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27; &#x27;</span>)	blank++;</span><br><span class="line">		<span class="comment">//else if (isalpha(c))	letter++;</span></span><br><span class="line">		<span class="keyword">else</span> other++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//printf(&quot;\n%d\n&quot;, i);</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;blank = %d, digit = %d, other = %d&quot;</span>, blank, digit, other<span class="number">-1</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-189-西安距离"><a href="#7-189-西安距离" class="headerlink" title="7-189 西安距离"></a><strong>7-189 西安距离</strong></h1><p>小明来到了古都西安，想去参观大唐西市！</p>
<p>西安的道路可以看做是与x轴或y轴垂直的直线，小明位于(a,b)，而目的地位于(c,d)，问最少几步可以到达。</p>
<h3 id="输入格式-50"><a href="#输入格式-50" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>一行中四个整数，a,b,c,d，表示坐标为(a,b)与(c,d)，这里0&lt;=a,b,c,d&lt;=1000</p>
<h3 id="输出格式-50"><a href="#输出格式-50" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>输出这两个点的西安距离。</p>
<h3 id="输入样例-39"><a href="#输入样例-39" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0 0 3 4</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-39"><a href="#输出样例-39" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>1 KB</p>
<p>时间限制</p>
<p>200 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-185"><a href="#代码如下：-185" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>, c = <span class="number">0</span>, d = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c, &amp;d);</span><br><span class="line">	<span class="comment">//printf(&quot;%d%d%d%d\n&quot;, a, b, c, d);</span></span><br><span class="line">	res = <span class="built_in">abs</span>(d - b) + <span class="built_in">abs</span>(c - a);</span><br><span class="line">	<span class="comment">//printf(&quot;%d\n&quot;, res);</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, res);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-190-凯撒密码"><a href="#7-190-凯撒密码" class="headerlink" title="7-190 凯撒密码"></a><strong>7-190 凯撒密码</strong></h1><p>为了防止信息被别人轻易窃取，需要把电码明文通过加密方式变换成为密文。输入一个以回车符为结束标志的字符串（少于80个字符），再输入一个整数offset，用凯撒密码将其加密后输出。恺撒密码是一种简单的替换加密技术，将明文中的所有字母都在字母表上偏移offset位后被替换成密文，当offset大于零时，表示向后偏移；当offset小于零时，表示向前偏移。</p>
<h3 id="输入格式-51"><a href="#输入格式-51" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入第一行给出一个以回车结束的非空字符串（少于80个字符）；第二行输入一个整数offset。</p>
<h3 id="输出格式-51"><a href="#输出格式-51" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>输出加密后的结果字符串。</p>
<h3 id="输入样例1-9"><a href="#输入样例1-9" class="headerlink" title="输入样例1:"></a>输入样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello Hangzhou</span><br><span class="line">2</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1-9"><a href="#输出样例1-9" class="headerlink" title="输出样例1:"></a>输出样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Jgnnq Jcpibjqw</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2-9"><a href="#输入样例2-9" class="headerlink" title="输入样例2:"></a>输入样例2:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a=x+y</span><br><span class="line">-1</span><br></pre></td></tr></table></figure>
<h3 id="输出样例2-9"><a href="#输出样例2-9" class="headerlink" title="输出样例2:"></a>输出样例2:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">z=w+x</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-186"><a href="#代码如下：-186" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> off = <span class="number">0</span>;</span><br><span class="line">	<span class="type">char</span> str[<span class="number">82</span>] = <span class="string">&quot; &quot;</span>;</span><br><span class="line">	fgets(str, <span class="keyword">sizeof</span>(str), <span class="built_in">stdin</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;off);</span><br><span class="line">	<span class="keyword">if</span> (off &lt; <span class="number">0</span>) &#123;</span><br><span class="line">		off = -off;</span><br><span class="line">		off = off - off / <span class="number">26</span> * <span class="number">26</span>;</span><br><span class="line">		off = ((off<span class="number">-1</span>) % <span class="number">25</span>) + <span class="number">1</span>;</span><br><span class="line">		off = <span class="number">26</span> - off;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//printf(&quot;\n%d\n&quot;, off);</span></span><br><span class="line">	<span class="comment">//printf(&quot;%s%d&quot;, str, off);</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(str) - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">		<span class="type">char</span> c = str[i];</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">islower</span>(c)) &#123;</span><br><span class="line">			c = (c - <span class="string">&#x27;a&#x27;</span> + off) % <span class="number">26</span> + <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, c);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">isupper</span>(c)) &#123;</span><br><span class="line">			c = (c - <span class="string">&#x27;A&#x27;</span> + off) % <span class="number">26</span> + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, c);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, c);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-191-吉老师的回归"><a href="#7-191-吉老师的回归" class="headerlink" title="7-191 吉老师的回归"></a><strong>7-191 吉老师的回归</strong></h1><p>曾经在天梯赛大杀四方的吉老师决定回归天梯赛赛场啦！</p>
<p>为了简化题目，我们不妨假设天梯赛的每道题目可以用一个不超过 500 的、只包括可打印符号的字符串描述出来，如：<code>Problem A: Print &quot;Hello world!&quot;</code>。</p>
<p>众所周知，吉老师的竞赛水平非常高超，你可以认为他每道题目都会做（事实上也是……）。因此，吉老师会按照顺序看题并做题。但吉老师水平太高了，所以签到题他就懒得做了（浪费时间），具体来说，假如题目的字符串里有 <code>qiandao</code> 或者 <code>easy</code>（区分大小写）的话，吉老师看完题目就会跳过这道题目不做。</p>
<p>现在给定这次天梯赛总共有几道题目以及吉老师已经做完了几道题目，请你告诉大家吉老师现在正在做哪个题，或者吉老师已经把所有他打算做的题目做完了。</p>
<p><em>提醒：天梯赛有分数升级的规则，如果不做签到题可能导致团队总分不足以升级，一般的选手请千万不要学习吉老师的酷炫行为！</em></p>
<h3 id="输入格式：-65"><a href="#输入格式：-65" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行是两个正整数 <em>N</em>,<em>M</em> (1≤<em>M</em>≤<em>N</em>≤30)，表示本次天梯赛有 <em>N</em> 道题目，吉老师现在做完了 <em>M</em> 道。</p>
<p>接下来 <em>N</em> 行，每行是一个符合题目描述的字符串，表示天梯赛的题目内容。吉老师会按照给出的顺序看题——第一行就是吉老师看的第一道题，第二行就是第二道，以此类推。</p>
<h3 id="输出格式：-65"><a href="#输出格式：-65" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出吉老师当前正在做的题目对应的题面（即做完了 <em>M</em> 道题目后，吉老师正在做哪个题）。如果吉老师已经把所有他打算做的题目做完了，输出一行 <code>Wo AK le</code>。</p>
<h3 id="输入样例-1：-7"><a href="#输入样例-1：-7" class="headerlink" title="输入样例 1："></a>输入样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 1</span><br><span class="line">L1-1 is a qiandao problem.</span><br><span class="line">L1-2 is so...easy.</span><br><span class="line">L1-3 is Easy.</span><br><span class="line">L1-4 is qianDao.</span><br><span class="line">Wow, such L1-5, so easy.</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-1：-7"><a href="#输出样例-1：-7" class="headerlink" title="输出样例 1："></a>输出样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">L1-4 is qianDao.</span><br></pre></td></tr></table></figure>
<h3 id="输入样例-2：-7"><a href="#输入样例-2：-7" class="headerlink" title="输入样例 2："></a>输入样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 4</span><br><span class="line">L1-1 is a-qiandao problem.</span><br><span class="line">L1-2 is so easy.</span><br><span class="line">L1-3 is Easy.</span><br><span class="line">L1-4 is qianDao.</span><br><span class="line">Wow, such L1-5, so!!easy.</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-2：-7"><a href="#输出样例-2：-7" class="headerlink" title="输出样例 2："></a>输出样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Wo AK le</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-187"><a href="#代码如下：-187" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">char</span> str1[] = <span class="string">&quot;qiandao&quot;</span>, str2[] = <span class="string">&quot;easy&quot;</span>;</span><br><span class="line">	<span class="type">char</span> ary[<span class="number">510</span>] = <span class="string">&quot;&quot;</span>,res[<span class="number">510</span>]=<span class="string">&quot;&quot;</span>;</span><br><span class="line">	<span class="type">int</span> n=<span class="number">0</span>, m = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		fgets(ary, <span class="keyword">sizeof</span>(ary), <span class="built_in">stdin</span>);</span><br><span class="line">		ary[<span class="built_in">strlen</span>(ary) - <span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;	</span><br><span class="line">		<span class="keyword">if</span> (!(<span class="built_in">strstr</span>(ary, str1))&amp;&amp; !(<span class="built_in">strstr</span>(ary, str2))) &#123;</span><br><span class="line">			cnt++;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(ary); ++i)	res[i] = ary[i];</span><br><span class="line">			<span class="comment">//printf(&quot;%s&quot;, res);</span></span><br><span class="line">			<span class="comment">//printf(&quot;%s&quot;, res);</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//printf(&quot;cnt is %d\n&quot;, cnt);</span></span><br><span class="line">	<span class="keyword">if</span> (cnt &lt;= m) &#123;</span><br><span class="line">		<span class="built_in">strcpy</span>(res, <span class="string">&quot;Wo AK le&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, res);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-192-人与神"><a href="#7-192-人与神" class="headerlink" title="7-192 人与神"></a><strong>7-192 人与神</strong></h1><p>跨界大神 L. Peter Deutsch 有一句名言：“To iterate is human, to recurse divine.”（迭代的是人，递归的是神）。本题就请你直接在屏幕上输出这句话。</p>
<h3 id="输入格式：-66"><a href="#输入格式：-66" class="headerlink" title="输入格式："></a>输入格式：</h3><p>本题没有输入。</p>
<h3 id="输出格式：-66"><a href="#输出格式：-66" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出 <code>To iterate is human, to recurse divine.</code>。</p>
<h3 id="输入样例：-45"><a href="#输入样例：-45" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-45"><a href="#输出样例：-45" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">To iterate is human, to recurse divine.</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-188"><a href="#代码如下：-188" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;To iterate is human, to recurse divine.&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-193-两小时学完C语言"><a href="#7-193-两小时学完C语言" class="headerlink" title="7-193 两小时学完C语言"></a><strong>7-193 两小时学完C语言</strong></h1><p>知乎上有个宝宝问：“两个小时内如何学完 C 语言？”当然，问的是“学完”并不是“学会”。</p>
<p>假设一本 C 语言教科书有 N 个字，这个宝宝每分钟能看 K 个字，看了 M 分钟。还剩多少字没有看？</p>
<h3 id="输入格式：-67"><a href="#输入格式：-67" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出 3 个正整数，分别是 N（不超过 400 000），教科书的总字数；K（不超过 3 000），是宝宝每分钟能看的字数；M（不超过 120），是宝宝看书的分钟数。</p>
<p>题目保证宝宝看完的字数不超过 N。</p>
<h3 id="输出格式：-67"><a href="#输出格式：-67" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出宝宝还没有看的字数。</p>
<h3 id="输入样例：-46"><a href="#输入样例：-46" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">100000 1000 72</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-46"><a href="#输出样例：-46" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">28000</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-189"><a href="#代码如下：-189" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>, k = <span class="number">0</span>, m = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;k, &amp;m);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, n - k * m);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-194-强迫症"><a href="#7-194-强迫症" class="headerlink" title="7-194 强迫症"></a><strong>7-194 强迫症</strong></h1><p>小强在统计一个小区里居民的出生年月，但是发现大家填写的生日格式不统一，例如有的人写 <code>199808</code>，有的人只写 <code>9808</code>。有强迫症的小强请你写个程序，把所有人的出生年月都整理成 <code>年年年年-月月</code> 格式。对于那些只写了年份后两位的信息，我们默认小于 <code>22</code> 都是 <code>20</code> 开头的，其他都是 <code>19</code> 开头的。</p>
<h3 id="输入格式：-68"><a href="#输入格式：-68" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个出生年月，为一个 6 位或者 4 位数，题目保证是 1000 年 1 月到 2021 年 12 月之间的合法年月。</p>
<h3 id="输出格式：-68"><a href="#输出格式：-68" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中按标准格式 <code>年年年年-月月</code> 将输入的信息整理输出。</p>
<h3 id="输入样例-1：-8"><a href="#输入样例-1：-8" class="headerlink" title="输入样例 1："></a>输入样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9808</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-1：-8"><a href="#输出样例-1：-8" class="headerlink" title="输出样例 1："></a>输出样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1998-08</span><br></pre></td></tr></table></figure>
<h3 id="输入样例-2：-8"><a href="#输入样例-2：-8" class="headerlink" title="输入样例 2："></a>输入样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0510</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-2：-8"><a href="#输出样例-2：-8" class="headerlink" title="输出样例 2："></a>输出样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2005-10</span><br></pre></td></tr></table></figure>
<h3 id="输入样例-3：-1"><a href="#输入样例-3：-1" class="headerlink" title="输入样例 3："></a>输入样例 3：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">196711</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-3：-1"><a href="#输出样例-3：-1" class="headerlink" title="输出样例 3："></a>输出样例 3：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1967-11</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-190"><a href="#代码如下：-190" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> c;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;c);</span><br><span class="line">	<span class="keyword">if</span> (c &gt; <span class="number">100000</span>) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%02d-%02d&quot;</span>, c / <span class="number">100</span>, c % <span class="number">100</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="comment">//int a = 0;</span></span><br><span class="line">		<span class="comment">//a = c / 100;</span></span><br><span class="line">		<span class="keyword">if</span> (c / <span class="number">100</span> &lt; <span class="number">22</span>)	<span class="built_in">printf</span>(<span class="string">&quot;20%02d-%02d&quot;</span>, c / <span class="number">100</span>, c % <span class="number">100</span>);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;19%02d-%02d&quot;</span>, c / <span class="number">100</span>, c % <span class="number">100</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-195-大笨钟的心情"><a href="#7-195-大笨钟的心情" class="headerlink" title="7-195 大笨钟的心情"></a><strong>7-195 大笨钟的心情</strong></h1><p>有网友问：未来还会有更多大笨钟题吗？笨钟回复说：看心情……</p>
<p>本题就请你替大笨钟写一个程序，根据心情自动输出回答。</p>
<h3 id="输入格式：-69"><a href="#输入格式：-69" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出 24 个 [0, 100] 区间内的整数，依次代表大笨钟在一天 24 小时中，每个小时的心情指数。</p>
<p>随后若干行，每行给出一个 [0, 23] 之间的整数，代表网友询问笨钟这个问题的时间点。当出现非法的时间点时，表示输入结束，这个非法输入不要处理。题目保证至少有 1 次询问。</p>
<h3 id="输出格式：-69"><a href="#输出格式：-69" class="headerlink" title="输出格式："></a>输出格式：</h3><p>对每一次提问，如果当时笨钟的心情指数大于 50，就在一行中输出 <code>心情指数 Yes</code>，否则输出 <code>心情指数 No</code>。</p>
<h3 id="输入样例：-47"><a href="#输入样例：-47" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">80 75 60 50 20 20 20 20 55 62 66 51 42 33 47 58 67 52 41 20 35 49 50 63</span><br><span class="line">17</span><br><span class="line">7</span><br><span class="line">3</span><br><span class="line">15</span><br><span class="line">-1</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-47"><a href="#输出样例：-47" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">52 Yes</span><br><span class="line">20 No</span><br><span class="line">50 No</span><br><span class="line">58 Yes</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>Java (javac)</p>
<p>时间限制</p>
<p>600 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>其他编译器</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-191"><a href="#代码如下：-191" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> a[<span class="number">24</span>] = &#123; <span class="number">0</span> &#125;,c=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">24</span>; ++i)	a[i] = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">23</span>; ++i)	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">	<span class="keyword">do</span> &#123;</span><br><span class="line">		<span class="comment">//int c = 0;</span></span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;c);</span><br><span class="line">		<span class="keyword">if</span> (c &gt;= <span class="number">0</span> &amp;&amp; c &lt;= <span class="number">23</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (a[c] &gt; <span class="number">50</span>)	<span class="built_in">printf</span>(<span class="string">&quot;%d Yes\n&quot;</span>,a[c]);</span><br><span class="line">			<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d No\n&quot;</span>,a[c]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">while</span> (c &gt;= <span class="number">0</span> &amp;&amp; c &lt;= <span class="number">23</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-196-天梯赛的善良"><a href="#7-196-天梯赛的善良" class="headerlink" title="7-196 天梯赛的善良"></a><strong>7-196 天梯赛的善良</strong></h1><p>天梯赛是个善良的比赛。善良的命题组希望将题目难度控制在一个范围内，使得每个参赛的学生都有能做出来的题目，并且最厉害的学生也要非常努力才有可能得到高分。</p>
<p>于是命题组首先将编程能力划分成了 106 个等级（太疯狂了，这是假的），然后调查了每个参赛学生的编程能力。现在请你写个程序找出所有参赛学生的最小和最大能力值，给命题组作为出题的参考。</p>
<h3 id="输入格式：-70"><a href="#输入格式：-70" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第一行中给出一个正整数 <em>N</em>（≤2×104），即参赛学生的总数。随后一行给出 <em>N</em> 个不超过 106 的正整数，是参赛学生的能力值。</p>
<h3 id="输出格式：-70"><a href="#输出格式：-70" class="headerlink" title="输出格式："></a>输出格式：</h3><p>第一行输出所有参赛学生的最小能力值，以及具有这个能力值的学生人数。第二行输出所有参赛学生的最大能力值，以及具有这个能力值的学生人数。同行数字间以 1 个空格分隔，行首尾不得有多余空格。</p>
<h3 id="输入样例：-48"><a href="#输入样例：-48" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line">86 75 233 888 666 75 886 888 75 666</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-48"><a href="#输出样例：-48" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">75 3</span><br><span class="line">888 2</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>200 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-192"><a href="#代码如下：-192" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> ary[<span class="number">1000001</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> min = INT_MAX, max = INT_MIN;</span><br><span class="line">	<span class="comment">//printf(&quot;%d %d&quot;, min, max);</span></span><br><span class="line">	<span class="type">int</span> n=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000001</span>; ++i) &#123;</span><br><span class="line">		ary[i] = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> c = <span class="number">0</span>;</span><br><span class="line">	<span class="comment">//for (int i = 0; i &lt; 1000001; ++i)	printf(&quot;%d&quot;, ary[i]);</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="comment">//int c = 0;</span></span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;c);</span><br><span class="line">		<span class="keyword">if</span> (c &gt; max)max = c;</span><br><span class="line">		<span class="keyword">if</span> (c &lt; min)min = c;</span><br><span class="line">		ary[c]++;</span><br><span class="line">		<span class="comment">//ary[min]++;</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d %d\n%d %d&quot;</span>, min, ary[min], max, ary[max]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-197-乘法口诀数列"><a href="#7-197-乘法口诀数列" class="headerlink" title="7-197 乘法口诀数列"></a><strong>7-197 乘法口诀数列</strong></h1><p>本题要求你从任意给定的两个 1 位数字 <em>a</em>1 和 <em>a</em>2 开始，用乘法口诀生成一个数列 {<em>a**n</em>}，规则为从 <em>a</em>1 开始顺次进行，每次将当前数字与后面一个数字相乘，将结果贴在数列末尾。如果结果不是 1 位数，则其每一位都应成为数列的一项。</p>
<h3 id="输入格式：-71"><a href="#输入格式：-71" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出 3 个整数，依次为 <em>a</em>1、<em>a</em>2 和 <em>n</em>，满足 0≤<em>a</em>1,<em>a</em>2≤9，0&lt;<em>n</em>≤103。</p>
<h3 id="输出格式：-71"><a href="#输出格式：-71" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出数列的前 <em>n</em> 项。数字间以 1 个空格分隔，行首尾不得有多余空格。</p>
<h3 id="输入样例：-49"><a href="#输入样例：-49" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 3 10</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-49"><a href="#输出样例：-49" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 3 6 1 8 6 8 4 8 4</span><br></pre></td></tr></table></figure>
<h3 id="样例解释：-1"><a href="#样例解释：-1" class="headerlink" title="样例解释："></a>样例解释：</h3><p>数列前 2 项为 2 和 3。从 2 开始，因为 2×3=6，所以第 3 项是 6。因为 3×6=18，所以第 4、5 项分别是 1、8。依次类推…… 最后因为第 6 项有 6×8=48，对应第 10、11 项应该是 4、8。而因为只要求输出前 10 项，所以在输出 4 后结束。</p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-193"><a href="#代码如下：-193" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> ary[<span class="number">1001</span>];</span><br><span class="line">	<span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;n);</span><br><span class="line">	ary[<span class="number">1</span>] = a;</span><br><span class="line">	ary[<span class="number">2</span>] = b;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">3</span>,index=<span class="number">3</span>;</span><br><span class="line">	<span class="keyword">while</span> (i &lt;= n) &#123;</span><br><span class="line">		<span class="keyword">if</span> (ary[index - <span class="number">1</span>] * ary[index - <span class="number">2</span>] &lt; <span class="number">10</span>) &#123;</span><br><span class="line">			ary[i] = ary[index- <span class="number">1</span>] * ary[index - <span class="number">2</span>];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="type">int</span> c = ary[index - <span class="number">1</span>] * ary[index - <span class="number">2</span>];</span><br><span class="line">			ary[i] = c / <span class="number">10</span>;</span><br><span class="line">			i++;</span><br><span class="line">			ary[i] = c % <span class="number">10</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		i++;</span><br><span class="line">		index++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ary[i]);</span><br><span class="line">		<span class="keyword">if</span> (i != n)<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-198-自动编程"><a href="#7-198-自动编程" class="headerlink" title="7-198 自动编程"></a><strong>7-198 自动编程</strong></h1><p>输出语句是每个程序员首先要掌握的语句。Python 的输出语句很简单，只要写一个 <code>print(X)</code> 即可，其中 <code>X</code> 是需要输出的内容。</p>
<p>本题就请你写一个自动编程机，对任何一个要输出的整数 N，给出输出这个整数的 Python 语句。</p>
<h3 id="输入格式：-72"><a href="#输入格式：-72" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入给出一个不超过 105 的正整数。</p>
<h3 id="输出格式：-72"><a href="#输出格式：-72" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中打印输出这个整数的 Python 语句，其中不包含任何空格。</p>
<h3 id="输入样例：-50"><a href="#输入样例：-50" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">520</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-50"><a href="#输出样例：-50" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">print(520)</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-194"><a href="#代码如下：-194" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;i);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;print(%d)\n&quot;</span>, i);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-199-太神奇了"><a href="#7-199-太神奇了" class="headerlink" title="7-199 太神奇了"></a><strong>7-199 太神奇了</strong></h1><p>“告诉大家一个神奇的消息，太神奇了：明年全世界所有的人都同岁，全部都等于2022。明年的日子很特别，大概每1000年才会有一次。明年你的周岁年龄+你的出生年，每个人都是2022年。例如：你明年57加上1965年生的，加起来就是2022年。特别奇怪，连中外专家都无法解释！你计算一下，看看是不是2022。真是千年等一回呀！真准！转朋友圈，让大伙都算一下吧！”</p>
<p>据说这个“电子包浆”贴每年都会出现。本题就请你根据发贴人提到的周岁年龄和出生年，判断其发贴的时候是哪一年。</p>
<h3 id="输入格式：-73"><a href="#输入格式：-73" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第一行中给出两个正整数，即周岁年龄和出生年，其中年龄在 (0, 200) 区间内，出生年在 (1900, 2022) 区间内。</p>
<h3 id="输出格式：-73"><a href="#输出格式：-73" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出发贴年份。</p>
<h3 id="输入样例：-51"><a href="#输入样例：-51" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">57 1965</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-51"><a href="#输出样例：-51" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2021</span><br></pre></td></tr></table></figure>
<h3 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h3><p>因为贴子里说“<strong>明年</strong>全世界所有的人都同岁”，所以发贴是在<strong>今年</strong>，即 2021 年。</p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-195"><a href="#代码如下：-195" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> age = <span class="number">0</span>, bri = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;age, &amp;bri);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, age + bri - <span class="number">1</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-200-今天我要赢"><a href="#7-200-今天我要赢" class="headerlink" title="7-200 今天我要赢"></a><strong>7-200 今天我要赢</strong></h1><p>2018 年我们曾经出过一题，是输出“2018 我们要赢”。今年是 2022 年，你要输出的句子变成了“我要赢！就在今天！”然后以比赛当天的日期落款。</p>
<h3 id="输入格式：-74"><a href="#输入格式：-74" class="headerlink" title="输入格式："></a>输入格式：</h3><p>本题没有输入。</p>
<h3 id="输出格式：-74"><a href="#输出格式：-74" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出分 2 行。在第一行中输出 <code>I&#39;m gonna win! Today!</code>，在第二行中用 <code>年年年年-月月-日日</code> 的格式输出比赛当天的日期。已知比赛的前一天是 <code>2022-04-22</code>。</p>
<h3 id="输入样例：-52"><a href="#输入样例：-52" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure>
<h3 id="输出样例（第二行的内容要你自己想一想，这里不给出）："><a href="#输出样例（第二行的内容要你自己想一想，这里不给出）：" class="headerlink" title="输出样例（第二行的内容要你自己想一想，这里不给出）："></a>输出样例（第二行的内容要你自己想一想，这里不给出）：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">I&#x27;m gonna win! Today!</span><br><span class="line">这一行的内容我不告诉你…… 你要自己输出正确的日期呀~</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-196"><a href="#代码如下：-196" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> age = <span class="number">0</span>, bri = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;I&#x27;m gonna win! Today!\n2022-04-23&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-201-种钻石"><a href="#7-201-种钻石" class="headerlink" title="7-201 种钻石"></a><strong>7-201 种钻石</strong></h1><p>2019年10月29日，中央电视台专题报道，中国科学院在培育钻石领域，取得科技突破。科学家们用金刚石的籽晶片作为种子，利用甲烷气体在能量作用下形成碳的等离子体，慢慢地沉积到钻石种子上，一周“种”出了一颗 1 克拉大小的钻石。</p>
<p>本题给出钻石的需求量和人工培育钻石的速度，请你计算出货需要的时间。</p>
<h3 id="输入格式：-75"><a href="#输入格式：-75" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出钻石的需求量 <em>N</em>（不超过 107 的正整数，以<code>微克拉</code>为单位）和人工培育钻石的速度 <em>v</em>（1≤<em>v</em>≤200，以<code>微克拉/天</code>为单位的整数）。</p>
<h3 id="输出格式：-75"><a href="#输出格式：-75" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出培育 <em>N</em> 微克拉钻石需要的整数天数。不到一天的时间不算在内。</p>
<h3 id="输入样例：-53"><a href="#输入样例：-53" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">102000 130</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-52"><a href="#输出样例：-52" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">784</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-197"><a href="#代码如下：-197" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>, v = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;v);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, n / v);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-202-谁能进图书馆"><a href="#7-202-谁能进图书馆" class="headerlink" title="7-202 谁能进图书馆"></a><strong>7-202 谁能进图书馆</strong></h1><p>为了保障安静的阅读环境，有些公共图书馆对儿童入馆做出了限制。例如“12 岁以下儿童禁止入馆，除非有 18 岁以上（包括 18 岁）的成人陪同”。现在有两位小/大朋友跑来问你，他们能不能进去？请你写个程序自动给他们一个回复。</p>
<h3 id="输入格式：-76"><a href="#输入格式：-76" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出 4 个整数：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">禁入年龄线 陪同年龄线 询问者1的年龄 询问者2的年龄</span><br></pre></td></tr></table></figure>
<p>这里的<code>禁入年龄线</code>是指严格小于该年龄的儿童禁止入馆；<code>陪同年龄线</code>是指大于等于该年龄的人士可以陪同儿童入馆。默认两个询问者的编号依次分别为 <code>1</code> 和 <code>2</code>；年龄和年龄线都是 [1, 200] 区间内的整数，并且保证 <code>陪同年龄线</code> 严格大于 <code>禁入年龄线</code>。</p>
<h3 id="输出格式：-76"><a href="#输出格式：-76" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出对两位询问者的回答，如果可以进就输出 <code>年龄-Y</code>，否则输出 <code>年龄-N</code>，中间空 1 格，行首尾不得有多余空格。</p>
<p>在第二行根据两个询问者的情况输出一句话：</p>
<ul>
<li>如果两个人必须一起进，则输出 <code>qing X zhao gu hao Y</code>，其中 <code>X</code> 是陪同人的编号， <code>Y</code> 是小孩子的编号；</li>
<li>如果两个人都可以进但不是必须一起的，则输出 <code>huan ying ru guan</code>；</li>
<li>如果两个人都进不去，则输出 <code>zhang da zai lai ba</code>；</li>
<li>如果一个人能进一个不能，则输出 <code>X: huan ying ru guan</code>，其中 <code>X</code> 是可以入馆的那个人的编号。</li>
</ul>
<h3 id="输入样例-1：-9"><a href="#输入样例-1：-9" class="headerlink" title="输入样例 1："></a>输入样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12 18 18 8</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-1：-9"><a href="#输出样例-1：-9" class="headerlink" title="输出样例 1："></a>输出样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">18-Y 8-Y</span><br><span class="line">qing 1 zhao gu hao 2</span><br></pre></td></tr></table></figure>
<h3 id="输入样例-2：-9"><a href="#输入样例-2：-9" class="headerlink" title="输入样例 2："></a>输入样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12 18 10 15</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-2：-9"><a href="#输出样例-2：-9" class="headerlink" title="输出样例 2："></a>输出样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10-N 15-Y</span><br><span class="line">2: huan ying ru guan</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-198"><a href="#代码如下：-198" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> yang = <span class="number">0</span>, old = <span class="number">0</span>, a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;yang, &amp;old, &amp;a, &amp;b);</span><br><span class="line">	<span class="keyword">if</span> (yang &gt; a &amp;&amp; yang &gt; b)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d-N %d-N\nzhang da zai lai ba&quot;</span>, a, b);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (a &gt;= yang &amp;&amp; b &gt;=yang)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d-Y %d-Y\nhuan ying ru guan&quot;</span>, a, b);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (a &gt;= yang &amp;&amp; a &lt; old&amp;&amp;b&lt;yang ) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d-Y %d-N\n1: huan ying ru guan&quot;</span>, a, b);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>( b &gt;= yang &amp;&amp; b &lt; old&amp;&amp;a&lt;yang)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d-N %d-Y\n2: huan ying ru guan&quot;</span>, a, b);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d-Y %d-Y&quot;</span>, a, b);</span><br><span class="line">		<span class="keyword">if</span> (a &gt; b)	<span class="built_in">printf</span>(<span class="string">&quot;\nqing 1 zhao gu hao 2&quot;</span>);</span><br><span class="line">		<span class="keyword">if</span> (b &gt; a)	<span class="built_in">printf</span>(<span class="string">&quot;\nqing 2 zhao gu hao 1&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">		</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-203-拯救外星人"><a href="#7-203-拯救外星人" class="headerlink" title="7-203 拯救外星人"></a><strong>7-203 拯救外星人</strong></h1><p>你的外星人朋友不认得地球上的加减乘除符号，但是会算阶乘 —— 正整数 N 的阶乘记为 “N!”，是从 1 到 N 的连乘积。所以当他不知道“5+7”等于多少时，如果你告诉他等于“12!”，他就写出了“479001600”这个答案。</p>
<p>本题就请你写程序模仿外星人的行为。</p>
<h3 id="输入格式：-77"><a href="#输入格式：-77" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出两个正整数 A 和 B。</p>
<h3 id="输出格式：-77"><a href="#输出格式：-77" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出 (A+B) 的阶乘。题目保证 (A+B) 的值小于 12。</p>
<h3 id="输入样例：-54"><a href="#输入样例：-54" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 6</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-53"><a href="#输出样例：-53" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">362880</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-199"><a href="#代码如下：-199" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>,sum=<span class="number">1</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= a + b; ++i) &#123;</span><br><span class="line">		sum *= i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-204-试试手气"><a href="#7-204-试试手气" class="headerlink" title="7-204 试试手气"></a><strong>7-204 试试手气</strong></h1><p>我们知道一个骰子有 6 个面，分别刻了 1 到 6 个点。下面给你 6 个骰子的初始状态，即它们朝上一面的点数，让你一把抓起摇出另一套结果。假设你摇骰子的手段特别精妙，每次摇出的结果都满足以下两个条件：</p>
<ul>
<li>1、每个骰子摇出的点数都跟它之前任何一次出现的点数不同；</li>
<li>2、在满足条件 1 的前提下，每次都能让每个骰子得到可能得到的最大点数。</li>
</ul>
<p>那么你应该可以预知自己第 <em>n</em> 次（1≤<em>n</em>≤5）摇出的结果。</p>
<h3 id="输入格式：-78"><a href="#输入格式：-78" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出 6 个骰子的初始点数，即 [1,6] 之间的整数，数字间以空格分隔；第二行给出摇的次数 <em>n</em>（1≤<em>n</em>≤5）。</p>
<h3 id="输出格式：-78"><a href="#输出格式：-78" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中顺序列出第 <em>n</em> 次摇出的每个骰子的点数。数字间必须以 1 个空格分隔，行首位不得有多余空格。</p>
<h3 id="输入样例：-55"><a href="#输入样例：-55" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 6 5 4 1 4</span><br><span class="line">3</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-54"><a href="#输出样例：-54" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 3 3 3 4 3</span><br></pre></td></tr></table></figure>
<h3 id="样例解释：-2"><a href="#样例解释：-2" class="headerlink" title="样例解释："></a>样例解释：</h3><p>这 3 次摇出的结果依次为：</p>
<figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">6 </span><span class="number">5</span> <span class="number">6</span> <span class="number">6</span> <span class="number">6</span> <span class="number">6</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">4</span> <span class="number">4</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">3</span> <span class="number">3</span> <span class="number">3</span> <span class="number">4</span> <span class="number">3</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-200"><a href="#代码如下：-200" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> a[<span class="number">7</span>] = &#123; <span class="number">0</span> &#125;, n = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">6</span>; ++i)</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">6</span>; ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (a[i] &gt;=(<span class="number">6</span>-n+<span class="number">1</span>))	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="number">6</span> - n);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="number">6</span> - n+<span class="number">1</span>);</span><br><span class="line">		<span class="keyword">if</span> (i != <span class="number">6</span>)	<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-205-静静的推荐"><a href="#7-205-静静的推荐" class="headerlink" title="7-205 静静的推荐"></a><strong>7-205 静静的推荐</strong></h1><p>天梯赛结束后，某企业的人力资源部希望组委会能推荐一批优秀的学生，这个整理推荐名单的任务就由静静姐负责。企业接受推荐的流程是这样的：</p>
<ul>
<li>只考虑得分不低于 175 分的学生；</li>
<li>一共接受 <em>K</em> 批次的推荐名单；</li>
<li>同一批推荐名单上的学生的成绩原则上应严格递增；</li>
<li>如果有的学生天梯赛成绩虽然与前一个人相同，但其参加过 PAT 考试，且成绩达到了该企业的面试分数线，则也可以接受。</li>
</ul>
<p>给定全体参赛学生的成绩和他们的 PAT 考试成绩，请你帮静静姐算一算，她最多能向企业推荐多少学生？</p>
<h3 id="输入格式：-79"><a href="#输入格式：-79" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出 3 个正整数：<em>N</em>（≤105）为参赛学生人数，<em>K</em>（≤5×103）为企业接受的推荐批次，<em>S</em>（≤100）为该企业的 PAT 面试分数线。</p>
<p>随后 <em>N</em> 行，每行给出两个分数，依次为一位学生的天梯赛分数（最高分 290）和 PAT 分数（最高分 100）。</p>
<h3 id="输出格式：-79"><a href="#输出格式：-79" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出静静姐最多能向企业推荐的学生人数。</p>
<h3 id="输入样例：-56"><a href="#输入样例：-56" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10 2 90</span><br><span class="line">203 0</span><br><span class="line">169 91</span><br><span class="line">175 88</span><br><span class="line">175 0</span><br><span class="line">175 90</span><br><span class="line">189 0</span><br><span class="line">189 0</span><br><span class="line">189 95</span><br><span class="line">189 89</span><br><span class="line">256 100</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-55"><a href="#输出样例：-55" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8</span><br></pre></td></tr></table></figure>
<h3 id="样例解释：-3"><a href="#样例解释：-3" class="headerlink" title="样例解释："></a>样例解释：</h3><p>第一批可以选择 175、189、203、256 这四个分数的学生各一名，此外 175 分 PAT 分数达到 90 分的学生和 189 分 PAT 分数达到 95 分的学生可以额外进入名单。第二批就只剩下 175、189 两个分数的学生各一名可以进入名单了。最终一共 8 人进入推荐名单。</p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>Java (javac)</p>
<p>时间限制</p>
<p>1300 ms</p>
<p>内存限制</p>
<p>256 MB</p>
<p>Python (python3)</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>其他编译器</p>
<p>时间限制</p>
<p>200 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-201"><a href="#代码如下：-201" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> a[<span class="number">999</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">999</span>; ++i)	a[i] = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>, k = <span class="number">0</span>, s = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;k, &amp;s);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="type">int</span> all = <span class="number">0</span>, pta = <span class="number">0</span>;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;all, &amp;pta);</span><br><span class="line">		<span class="keyword">if</span> (all &gt;= <span class="number">175</span> &amp;&amp; pta &gt;= s)	sum++;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (all &gt;= <span class="number">175</span>)	a[all]++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= k;++j) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">175</span>; i &lt;= <span class="number">400</span>; ++i) &#123;</span><br><span class="line">			<span class="keyword">if</span> (a[i]) &#123;</span><br><span class="line">				sum++;</span><br><span class="line">				a[i]--;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-206-斯德哥尔摩火车上的题"><a href="#7-206-斯德哥尔摩火车上的题" class="headerlink" title="7-206 斯德哥尔摩火车上的题"></a><strong>7-206 斯德哥尔摩火车上的题</strong></h1><p>上图是新浪微博上的一则趣闻，是瑞典斯德哥尔摩火车上的一道题，看上去是段伪代码：</p>
<figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line">s = <span class="string">&#x27;&#x27;</span></span><br><span class="line">a = <span class="string">&#x27;1112031584&#x27;</span></span><br><span class="line">for (i = <span class="number">1</span>; i &lt; length(a); i++) &#123;</span><br><span class="line">  if (a[i] <span class="comment">% 2 == a[i-1] % 2) &#123;</span></span><br><span class="line">    s += max(a[i], a[i<span class="number">-1</span>])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">goto_url(<span class="string">&#x27;www.multisoft.se/&#x27;</span> + s)</span><br></pre></td></tr></table></figure>
<p>其中字符串的 <code>+</code> 操作是连接两个字符串的意思。所以这道题其实是让大家访问网站 <code>www.multisoft.se/112358</code>（<strong>注意：比赛中千万不要访问这个网址！！！</strong>）。</p>
<p>当然，能通过上述算法得到 <code>112358</code> 的原始字符串 <code>a</code> 是不唯一的。本题就请你判断，两个给定的原始字符串，能否通过上述算法得到相同的输出？</p>
<h3 id="输入格式：-80"><a href="#输入格式：-80" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入为两行仅由数字组成的非空字符串，长度均不超过 104，以回车结束。</p>
<h3 id="输出格式：-80"><a href="#输出格式：-80" class="headerlink" title="输出格式："></a>输出格式：</h3><p>对两个字符串分别采用上述斯德哥尔摩火车上的算法进行处理。如果两个结果是一样的，则在一行中输出那个结果；否则分别输出各自对应的处理结果，每个占一行。题目保证输出结果不为空。</p>
<h3 id="输入样例-1：-10"><a href="#输入样例-1：-10" class="headerlink" title="输入样例 1："></a>输入样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1112031584</span><br><span class="line">011102315849</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-1：-10"><a href="#输出样例-1：-10" class="headerlink" title="输出样例 1："></a>输出样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">112358</span><br></pre></td></tr></table></figure>
<h3 id="输入样例-2：-10"><a href="#输入样例-2：-10" class="headerlink" title="输入样例 2："></a>输入样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">111203158412334</span><br><span class="line">12341112031584</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-2：-10"><a href="#输出样例-2：-10" class="headerlink" title="输出样例 2："></a>输出样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1123583</span><br><span class="line">112358</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-202"><a href="#代码如下：-202" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i,la,lb,j=<span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> aa[<span class="number">10001</span>],aayi[<span class="number">10001</span>],bb[<span class="number">10001</span>],bbyi[<span class="number">10001</span>];</span><br><span class="line">    la=<span class="built_in">strlen</span>(gets(aa));       <span class="comment">//gets()获得键盘输入的字符串，以换行符结束；strlen()求字符串长度</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;la;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>((aa[i]-<span class="string">&#x27;0&#x27;</span>)%<span class="number">2</span>==(aa[i<span class="number">-1</span>]-<span class="string">&#x27;0&#x27;</span>)%<span class="number">2</span>)            <span class="comment">//减 ‘0’是为了把ASCII码转换成对应数字</span></span><br><span class="line">            aayi[j++]= aa[i]&gt;aa[i<span class="number">-1</span>]?aa[i]:aa[i<span class="number">-1</span>];   <span class="comment">//三目运算，取二者中大的那个</span></span><br><span class="line">    &#125;</span><br><span class="line">    lb=<span class="built_in">strlen</span>(gets(bb));</span><br><span class="line">    j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;lb;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>((bb[i]-<span class="string">&#x27;0&#x27;</span>)%<span class="number">2</span>==(bb[i<span class="number">-1</span>]-<span class="string">&#x27;0&#x27;</span>)%<span class="number">2</span>)            <span class="comment">//同上</span></span><br><span class="line">            bbyi[j++]= bb[i]&gt;bb[i<span class="number">-1</span>]?bb[i]:bb[i<span class="number">-1</span>];   <span class="comment">//同上     </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strcmp</span>(aayi,bbyi)==<span class="number">0</span>)        <span class="comment">//strcmp()函数是比较两个字符串是否相等</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,aayi);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n%s\n&quot;</span>,aayi,bbyi);    </span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure>
<h1 id="7-207-机工士姆斯塔迪奥"><a href="#7-207-机工士姆斯塔迪奥" class="headerlink" title="7-207 机工士姆斯塔迪奥"></a><strong>7-207 机工士姆斯塔迪奥</strong></h1><p>在 MMORPG《最终幻想14》的副本“乐欲之所瓯博讷修道院”里，BOSS 机工士姆斯塔迪奥将会接受玩家的挑战。</p>
<p>你需要处理这个副本其中的一个机制：<em>N</em>×<em>M</em> 大小的地图被拆分为了 <em>N</em>×<em>M</em> 个 1×1 的格子，BOSS 会选择若干行或/及若干列释放技能，玩家不能站在释放技能的方格上，否则就会被击中而失败。</p>
<p>给定 BOSS 所有释放技能的行或列信息，请你计算出最后有多少个格子是安全的。</p>
<h3 id="输入格式-52"><a href="#输入格式-52" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入第一行是三个整数 <em>N</em>,<em>M</em>,<em>Q</em> (1≤<em>N</em>×<em>M</em>≤105，0≤<em>Q</em>≤1000)，表示地图为 <em>N</em> 行 <em>M</em> 列大小以及选择的行/列数量。</p>
<p>接下来 <em>Q</em> 行，每行两个数 <em>T**i</em>,<em>C**i</em>，其中 <em>T**i</em>=0 表示 BOSS 选择的是一整行，<em>T**i</em>=1 表示选择的是一整列，<em>C**i</em> 为选择的行号/列号。行和列的编号均从 1 开始。</p>
<h3 id="输出格式-52"><a href="#输出格式-52" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>输出一个数，表示安全格子的数量。</p>
<h3 id="输入样例-40"><a href="#输入样例-40" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 5 3</span><br><span class="line">0 2</span><br><span class="line">0 4</span><br><span class="line">1 3</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-40"><a href="#输出样例-40" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>栈限制</p>
<p>8192 KB</p>
<h2 id="代码如下：-203"><a href="#代码如下：-203" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> line[<span class="number">100005</span>], fox[<span class="number">100005</span>];</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100005</span>; i++) &#123;</span><br><span class="line">		line[i] = <span class="number">0</span>;</span><br><span class="line">		fox[i] = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>, m = <span class="number">0</span>, q = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;m, &amp;q);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; ++i) &#123;</span><br><span class="line">		<span class="type">int</span> c = <span class="number">0</span>, q = <span class="number">0</span>;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;c, &amp;q);</span><br><span class="line">		<span class="keyword">if</span> (c == <span class="number">0</span> &amp;&amp; line[q] == <span class="number">0</span>) &#123;</span><br><span class="line">			a++;</span><br><span class="line">			line[q] = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="number">1</span> &amp;&amp; fox[q] == <span class="number">0</span>) &#123;</span><br><span class="line">			b++;</span><br><span class="line">			fox[q] = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//printf(&quot;a is %d\n&quot;, a);</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, n * m - (a * m + b * n) + a * b);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
</search>
