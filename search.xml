<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2023 _11 _08</title>
    <url>/2023/11/28/2023-11-08/</url>
    <content><![CDATA[<p>今天也是开心的一天</p>
<p>因为今天重新开始写日记了</p>
<p>这个东西忘记的有点多，重新会议一下</p>
<p>准备测试一下Hexo下划线的格式</p>
<p>下划线的格式，只能说有点奇怪</p>
<p>测试的格式走起来</p>
<hr>
<p>测试</p>
<hr>
<hr>
<hr>
<p>——</p>
<p>_</p>
<p>__</p>
<p>_</p>
<p>不停的的测试</p>
<p>这个B标题是真的麻烦</p>
<p>破折号，连在一起就会消失吗</p>
<p>这个是Bug还是特性a，我去</p>
<p>我想要解决一个问题</p>
<p>那就是2023_11_08</p>
<p>在这里我可以直接打出来，但是在Next的主题里面就不行，我觉得这可能是bug</p>
<p>但是如果加一个空格，就可以表示出来，甚至，- 符号也是可以的，但是就只有_不行</p>
]]></content>
      <categories>
        <category>-黄鹏宇</category>
      </categories>
  </entry>
  <entry>
    <title>Char,String类型类型大小写转换的函数</title>
    <url>/2020/10/08/C++%20%E9%87%8CChar-String%E7%B1%BB%E5%9E%8B%E7%B1%BB%E5%9E%8B%E5%A4%A7%E5%B0%8F%E5%86%99%E8%BD%AC%E6%8D%A2%E7%9A%84%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h2 id="Char转换"><a href="#Char转换" class="headerlink" title="Char转换"></a>Char转换</h2><p>可以使用tolower(char c)转换为小写，toupper(char c)转换为大写</p>
<p>例子如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> a = <span class="string">&#x27;a&#x27;</span>, b = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,<span class="built_in">tolower</span>(b));<span class="comment">//把字符转换为小写</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, <span class="built_in">toupper</span>(a)); <span class="comment">//把字符转换为大写 </span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="String转换"><a href="#String转换" class="headerlink" title="String转换"></a>String转换</h2><p>tolower 就是转换为小写</p>
<p>toupper就是转换为大写</p>
<p>例子如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s = <span class="string">&quot;ABCDEFGabcdefg&quot;</span>;</span><br><span class="line">    string result;</span><br><span class="line">    <span class="built_in">transform</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>(), s.<span class="built_in">begin</span>(),::tolower);</span><br><span class="line">    cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">transform</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>(), s.<span class="built_in">begin</span>(),::toupper);</span><br><span class="line">    cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>刷题小技巧</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>Char</tag>
        <tag>String</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言-翁恺-PTA-01-40课后练习题-01</title>
    <url>/2024/03/30/C%E8%AF%AD%E8%A8%80-%E7%BF%81%E6%81%BA-PTA-01-40%E8%AF%BE%E5%90%8E%E7%BB%83%E4%B9%A0%E9%A2%98-01/</url>
    <content><![CDATA[<p>  也是真的想吐槽，这个B练习题，网上一搜代码都是一样的，我是垃圾，不会写，所以上网抄别人的思路，不是，你们这些会写的，怎么思路都一摸一样啊。</p>
<p>PTA真的拉跨，试卷也是拉跨。吐槽完了，记录一下别人的思路，毕竟我是最菜的</p>
<h1 id="7-20-简单计算器（20-分）"><a href="#7-20-简单计算器（20-分）" class="headerlink" title="7-20 简单计算器（20 分）"></a>7-20 简单计算器（20 分）</h1><p>模拟简单运算器的工作。假设计算器只能进行加减乘除运算，运算数和结果都是整数，四种运算符的优先级相同，按从左到右的顺序计算。</p>
<h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h4><p>输入在一行中给出一个四则运算算式，没有空格，且至少有一个操作数。遇等号”=”说明输入结束。</p>
<h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h4><p>在一行中输出算式的运算结果，或者如果除法分母为0或有非法运算符，则输出错误信息“ERROR”。</p>
<h4 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1+2*10-10/2=</span><br></pre></td></tr></table></figure>
<h4 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure>
<h2 id="他人代码如下："><a href="#他人代码如下：" class="headerlink" title="他人代码如下："></a>他人代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n1, n2;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n1); <span class="comment">// 不管怎样先输入一个数</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;ch);</span><br><span class="line">        <span class="keyword">if</span>(ch==<span class="string">&#x27;=&#x27;</span>)&#123; </span><br><span class="line">        <span class="comment">// 如果输入的操作符为等号则直接输出而不必进行后续操作了</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, n1);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">// 否则继续输入第二个操作数</span></span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ch==<span class="string">&#x27;+&#x27;</span>)</span><br><span class="line">            n1 += n2;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">            n1 -= n2;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ch==<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">            n1 *= n2;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ch==<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(n2==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;ERROR\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                n1 /= n2;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;ERROR\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-27-兔子繁衍问题"><a href="#7-27-兔子繁衍问题" class="headerlink" title="7-27 兔子繁衍问题"></a><em>7-27 兔子繁衍问题</em></h1><p><strong>7-27 兔子繁衍问题</strong></p>
<p>分数 15</p>
<p>作者 徐镜春</p>
<p>单位 浙江大学</p>
<p>一对兔子，从出生后第3个月起每个月都生一对兔子。小兔子长到第3个月后每个月又生一对兔子。假如兔子都不死，请问第1个月出生的一对兔子，至少需要繁衍到第几个月时兔子总数才可以达到<em>N</em>对？</p>
<h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式:"></a>输入格式:</h4><p>输入在一行中给出一个不超过10000的正整数<em>N</em>。</p>
<h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式:"></a>输出格式:</h4><p>在一行中输出兔子总数达到<em>N</em>最少需要的月数。</p>
<h4 id="输入样例-1"><a href="#输入样例-1" class="headerlink" title="输入样例:"></a>输入样例:</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">30</span><br></pre></td></tr></table></figure>
<h4 id="输出样例-1"><a href="#输出样例-1" class="headerlink" title="输出样例:"></a>输出样例:</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>这个题目我也不会做，我也是有点抽象的，这个本质是一个<strong><em>斐波那契数列</em></strong></p>
<p>但是我没有发现，我也是一个纯纯的笨蛋了</p>
<h2 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">1</span>, temp, N, month = <span class="number">1</span>;<span class="comment">//b 代表累加的和（总兔子的只数），初始值为1</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (b &lt; N) &#123;</span><br><span class="line">        month++;</span><br><span class="line">        temp = a;<span class="comment">//a 表示新生的兔子对数</span></span><br><span class="line">        a = b;</span><br><span class="line">        b = b + temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, month);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-29-二分法求多项式单根"><a href="#7-29-二分法求多项式单根" class="headerlink" title="7-29 二分法求多项式单根"></a><strong>7-29 二分法求多项式单根</strong></h1><p>这题的一开始写的代码，运行超时了</p>
<p>这个是我写的代码，但是问题比较大，于是，学习一下，别人的代码</p>
<h2 id="错误代码"><a href="#错误代码" class="headerlink" title="错误代码"></a>错误代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">float</span> <span class="title function_">funct</span><span class="params">(<span class="type">int</span> a3,<span class="type">int</span> a2 ,<span class="type">int</span> a1 ,<span class="type">int</span> a,<span class="type">float</span> num)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a3 * num * num * num + a2 * num * num + a1 * num + a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> a3 = <span class="number">0</span>, a2 = <span class="number">0</span>, a1 = <span class="number">0</span>, a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">float</span> left = <span class="number">0</span>, right = <span class="number">0</span>,mid=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d %d&quot;</span>, &amp;a3, &amp;a2, &amp;a1, &amp;a);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f %f&quot;</span>, &amp;left, &amp;right);</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (funct(a3, a2, a1, a, mid) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%0.2f&quot;</span>, mid);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (funct(a3, a2, a1, a, left) * funct(a3, a2, a1, a, mid) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            left = mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>  right = mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="错误的点："><a href="#错误的点：" class="headerlink" title="错误的点："></a>错误的点：</h2><p>这题，我确实是哈皮，这题也只能找一些无限接近于0的点，所以是要人为设置极限的，但是我没有明白，所以就错的蛮多的</p>
<h2 id="改后的代码"><a href="#改后的代码" class="headerlink" title="改后的代码"></a>改后的代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//double a3 = 0, a2 = 0, a1 = 0, a = 0;</span></span><br><span class="line"><span class="type">double</span> <span class="title function_">funct</span><span class="params">(<span class="type">double</span> a3, <span class="type">double</span> a2, <span class="type">double</span> a1, <span class="type">double</span> a, <span class="type">double</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a3 * x * x * x + a2 * x * x + a1 * x + a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">double</span> left = <span class="number">0</span>, right = <span class="number">0</span>, mid = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> a3 = <span class="number">0</span>, a2 = <span class="number">0</span>, a1 = <span class="number">0</span>, a = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf %lf %lf %lf %lf&quot;</span>, &amp;a3, &amp;a2, &amp;a1, &amp;a, &amp;left, &amp;right);</span><br><span class="line">    <span class="keyword">while</span> (right - left &gt;= <span class="number">0.001</span> &amp;&amp; funct(a3,a2,a1,a,left) * funct(a3,a2,a1,a,right) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//right-left&gt;=0.001，就是我们人为设置的极限</span></span><br><span class="line">        <span class="keyword">if</span> (funct(a3,a2,a1,a,left) == <span class="number">0</span>) &#123;</span><br><span class="line">            mid = left;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (funct(a3,a2,a1,a,right) == <span class="number">0</span>) &#123;</span><br><span class="line">            mid = right;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mid = (left + right) / <span class="number">2.0</span>;</span><br><span class="line">        <span class="comment">//if (funct(a3,a2,a1,a,a3, a2, a1, a, mid) == 0) &#123;</span></span><br><span class="line">        <span class="comment">//    printf(&quot;%0.2f&quot;, mid);</span></span><br><span class="line">        <span class="comment">//    return 0;</span></span><br><span class="line">        <span class="comment">//&#125;</span></span><br><span class="line">        <span class="keyword">if</span> (funct(a3,a2,a1,a,left) * funct(a3,a2,a1,a,mid) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            left = mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>  right = mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>, mid);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="别人的代码好在哪里"><a href="#别人的代码好在哪里" class="headerlink" title="别人的代码好在哪里:"></a>别人的代码好在哪里:</h2><p>别人的代码，使用了一个全局变量，考虑到了这个人为设置极限的点：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">double</span> a3,a2,a1,a0;<span class="comment">//跨函数的变量弄成全局变量</span></span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="title function_">f</span><span class="params">(<span class="type">double</span> x)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a3*x*x*x+a2*x*x+a1*x+a0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">double</span> a,b,mid;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf %lf %lf&quot;</span>,&amp;a3,&amp;a2,&amp;a1,&amp;a0);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    <span class="keyword">while</span>(b-a&gt;=<span class="number">1e-4</span> &amp;&amp; f(a)*f(b)&lt;=<span class="number">0</span>)&#123;<span class="comment">//1e-4是10的（-4）次方，小于这个数是因为想到</span></span><br><span class="line">        <span class="keyword">if</span>(f(a)==<span class="number">0</span>)&#123;<span class="comment">//某个时间结束，而不是无限进行下去，不加会TLE</span></span><br><span class="line">            mid=a;<span class="comment">//mid代表是根</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f(b)==<span class="number">0</span>)&#123;</span><br><span class="line">            mid=b;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mid=(a+b)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(f(mid)==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(f(mid)*f(a)&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">                a=mid;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                b=mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>,mid);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-36-韩信点兵"><a href="#7-36-韩信点兵" class="headerlink" title="7-36 韩信点兵"></a><strong>7-36 韩信点兵</strong></h1><p>在中国数学史上，广泛流传着一个“韩信点兵”的故事：韩信是汉高祖刘邦手下的大将，他英勇善战，智谋超群，为汉朝建立了卓越的功劳。据说韩信的数学水平也非常高超，他在点兵的时候，为了知道有多少兵，同时又能保住军事机密，便让士兵排队报数：</p>
<ul>
<li>按从1至5报数，记下最末一个士兵报的数为1；</li>
<li>再按从1至6报数，记下最末一个士兵报的数为5；</li>
<li>再按从1至7报数，记下最末一个士兵报的数为4；</li>
<li>最后按从1至11报数，最末一个士兵报的数为10；</li>
</ul>
<p>请编写程序计算韩信至少有多少兵。</p>
<h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>本题无输入</p>
<h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出韩信至少拥有的士兵人数。</p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<p>这题是简单的，但是我的直觉告诉我，应该有更好的代码，这是我的暴力算法</p>
<h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>*<span class="number">6</span>*<span class="number">7</span>*<span class="number">11</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">5</span> == <span class="number">1</span> &amp;&amp; i % <span class="number">6</span> == <span class="number">5</span> &amp;&amp; i % <span class="number">7</span> == <span class="number">4</span> &amp;&amp; i % <span class="number">11</span> == <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>不过我简单的找了一下，不是LeetCode上，别人的好代码，没有显示出来</p>
<p>找到的，都是和我差不多的垃圾代码</p>
<h1 id="7-38-支票面额"><a href="#7-38-支票面额" class="headerlink" title="7-38 支票面额"></a><strong>7-38 支票面额</strong></h1><p>这题就是我不会的题目了，也是非常的讨厌的，这题就不会了，我也是一个纯纯的笨蛋</p>
<p>一个采购员去银行兑换一张<em>y</em>元<em>f</em>分的支票，结果出纳员错给了<em>f</em>元<em>y</em>分。采购员用去了<em>n</em>分之后才发觉有错，于是清点了余额尚有2<em>y</em>元2<em>f</em>分，问该支票面额是多少？</p>
<h3 id="输入格式：-1"><a href="#输入格式：-1" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出小于100的正整数<em>n</em>。</p>
<h3 id="输出格式：-1"><a href="#输出格式：-1" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中按格式<code>y.f</code>输出该支票的原始面额。如果无解，则输出<code>No Solution</code>。</p>
<h3 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">23</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">25.51</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">22</span><br></pre></td></tr></table></figure>
<h3 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">No Solution</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>64 MB</p>
<h2 id="错误原因："><a href="#错误原因：" class="headerlink" title="错误原因："></a>错误原因：</h2><p>这题我确实是应该错的，这题我没有一点点的思路，是真的一点点都没有，换算也不清楚，所以查看其它人的代码。</p>
<p>我真的是痴呆了，元和分的换算公式也能弄错，还有就是我考虑到了，兑换之前的和兑换之后的是两倍，但是我还是没有写出公式</p>
<p>大喊30遍，我是哈皮，题目看错了，我以为的是</p>
<p>采购员去银行兑换，出纳员给错了，然后出纳员用去了n元，余额也是出纳员的，这我怎么可能做的出来，这样有不等式的关系，其实就是可以做的，是我蠢猪了</p>
<p>然后就是这个是有公式的</p>
<script type="math/tex; mode=display">
100*f+y-n=200*y+2*f
\rightarrow</script><script type="math/tex; mode=display">
98*f-199*y=n</script><p>又因为f是分，所以</p>
<script type="math/tex; mode=display">
0<f<100</script><script type="math/tex; mode=display">
98*f-199*y=n</script><script type="math/tex; mode=display">
0<n<100</script><p>上面两个式子一结合等于</p>
<script type="math/tex; mode=display">
y<\frac{98*f}{199}</script><p>f的最大值，是100（无法取到），一算就是</p>
<script type="math/tex; mode=display">
0<=y<49</script><h2 id="综上所述，代码如下"><a href="#综上所述，代码如下" class="headerlink" title="综上所述，代码如下:"></a>综上所述，代码如下:</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> y = <span class="number">0</span>, f = <span class="number">0</span>, n = <span class="number">0</span>,flag=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> y = <span class="number">0</span>; y &lt; <span class="number">49</span>; y++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> f = <span class="number">0</span>; f &lt; <span class="number">100</span>; f++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">98</span> * f - <span class="number">199</span> * y == n) &#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d.%d&quot;</span>, y, f);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!flag)   <span class="built_in">printf</span>(<span class="string">&quot;No Solution&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-39-龟兔赛跑"><a href="#7-39-龟兔赛跑" class="headerlink" title="7-39 龟兔赛跑"></a><strong>7-39 龟兔赛跑</strong></h1><p>乌龟与兔子进行赛跑，跑场是一个矩型跑道，跑道边可以随地进行休息。乌龟每分钟可以前进3米，兔子每分钟前进9米；兔子嫌乌龟跑得慢，觉得肯定能跑赢乌龟，于是，每跑10分钟回头看一下乌龟，若发现自己超过乌龟，就在路边休息，每次休息30分钟，否则继续跑10分钟；而乌龟非常努力，一直跑，不休息。假定乌龟与兔子在同一起点同一时刻开始起跑，请问T分钟后乌龟和兔子谁跑得快？</p>
<h3 id="输入格式：-2"><a href="#输入格式：-2" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出比赛时间T（分钟）。</p>
<h3 id="输出格式：-2"><a href="#输出格式：-2" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出比赛的结果：乌龟赢输出<code>@_@</code>，兔子赢输出<code>^_^</code>，平局则输出<code>-_-</code>；后跟1空格，再输出胜利者跑完的距离。</p>
<h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">242</span><br></pre></td></tr></table></figure>
<h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@_@ 726</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<h2 id="错误原因，"><a href="#错误原因，" class="headerlink" title="错误原因，"></a>错误原因，</h2><p>这题我确实是一点思路都没有，这题，数学的问题，就感觉很头疼</p>
<p>这题的代码和思路，主要是Copy这个大佬的，地址如下，代码也如下：</p>
<p><a href="https://www.cnblogs.com/haimeng-lin/p/15427074.html">https://www.cnblogs.com/haimeng-lin/p/15427074.html</a></p>
<p>本题乌龟的路程很简单，计算兔子的路程关键就在怎么区分兔子跑步的时间。引入两个参数，run参数显示兔子状态，为1则在跑步，为0则在睡觉；参数sleeptime显示开始睡觉的时间。</p>
<p>当run = 1时，兔子路程计入；满足三个条件时开始睡觉：①时间为十的倍数；②兔子目前在跑步，也就是run = 1；③兔子路程大于乌龟路程。满足条件开始睡觉，记录睡觉时间，到时间后run改为1自动苏醒。</p>
<p>代码如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> turtle = <span class="number">0</span>, rabbit = <span class="number">0</span>, t = <span class="number">0</span>, run = <span class="number">0</span>, sleeptime = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//run代表兔子是否睡觉，兔子一开始不是睡觉的.sleeptime的意思是，一开始睡觉的时候</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        turtle += <span class="number">3</span>;        <span class="comment">//乌龟一定是在跑步的</span></span><br><span class="line">        <span class="keyword">if</span> (run == <span class="number">0</span>)       <span class="comment">//兔子不睡觉是0</span></span><br><span class="line">            rabbit += <span class="number">9</span>;</span><br><span class="line">        <span class="keyword">if</span> ((i % <span class="number">10</span> == <span class="number">0</span>) &amp;&amp; (rabbit &gt; turtle) &amp;&amp; (run == <span class="number">0</span>))   </span><br><span class="line">            <span class="comment">//如果兔子还在跑的状态，而且已经比乌龟快，正好在检查点上</span></span><br><span class="line">        &#123;</span><br><span class="line">            run = <span class="number">1</span>;    <span class="comment">//改变兔子的状态</span></span><br><span class="line">            sleeptime = i;  <span class="comment">//睡觉的时间，就等于i，目前的时间</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i == sleeptime + <span class="number">30</span>)    <span class="comment">//如果已经过了30分钟的话</span></span><br><span class="line">        &#123;</span><br><span class="line">            run = <span class="number">0</span>;                <span class="comment">//设置兔子醒过来继续跑</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (rabbit &gt; turtle)   <span class="built_in">printf</span>(<span class="string">&quot;^_^ %d&quot;</span>, rabbit);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (rabbit == turtle) <span class="built_in">printf</span>(<span class="string">&quot;-_- %d&quot;</span>, rabbit);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;@_@ %d&quot;</span>, turtle);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PTA</category>
        <category>C</category>
      </categories>
      <tags>
        <tag>PTA</tag>
        <tag>C</tag>
        <tag>中M24春C&amp;Java入门</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言-翁恺-PTA-41-80课后练习题-02</title>
    <url>/2024/04/02/C%E8%AF%AD%E8%A8%80-%E7%BF%81%E6%81%BA-PTA-41-80%E8%AF%BE%E5%90%8E%E7%BB%83%E4%B9%A0%E9%A2%98-02/</url>
    <content><![CDATA[<p>  第二个40题，还是</p>
<h1 id="7-42-整除光棍"><a href="#7-42-整除光棍" class="headerlink" title="7-42 整除光棍"></a><strong>7-42 整除光棍</strong></h1><p>这里所谓的“光棍”，并不是指单身汪啦~ 说的是全部由1组成的数字，比如1、11、111、1111等。传说任何一个光棍都能被一个不以5结尾的奇数整除。比如，111111就可以被13整除。 现在，你的程序要读入一个整数<code>x</code>，这个整数一定是奇数并且不以5结尾。然后，经过计算，输出两个数字：第一个数字<code>s</code>，表示<code>x</code>乘以<code>s</code>是一个光棍，第二个数字<code>n</code>是这个光棍的位数。这样的解当然不是唯一的,题目要求你输出最小的解。</p>
<p>提示：一个显然的办法是逐渐增加光棍的位数，直到可以整除<code>x</code>为止。但难点在于，<code>s</code>可能是个非常大的数 —— 比如，程序输入31，那么就输出3584229390681和15，因为31乘以3584229390681的结果是111111111111111，一共15个1。</p>
<h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个不以5结尾的正奇数<code>x</code>（&lt;1000）。</p>
<h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出相应的最小的<code>s</code>和<code>n</code>，其间以1个空格分隔。</p>
<h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">31</span><br></pre></td></tr></table></figure>
<h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3584229390681 15</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<h2 id="错误原因"><a href="#错误原因" class="headerlink" title="错误原因"></a>错误原因</h2><p>7-42这题也是一点思路都没有，这种是我最讨厌的题，没有思路，就不太会写。</p>
<p>这题数学题，我确实是笨蛋，一点点思路都没有</p>
<p>好吧，但是实际做起来，比我想象中的简单，也只要通过遍历即可，</p>
<p>11，111，1111，这样加上去，代码如下：</p>
<h2 id="别人的代码"><a href="#别人的代码" class="headerlink" title="别人的代码"></a>别人的代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> x, y = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);    <span class="comment">//读取X</span></span><br><span class="line">    <span class="type">int</span> s = <span class="number">1</span>;         <span class="comment">//用来表示光棍数</span></span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;         <span class="comment">//记录位数</span></span><br><span class="line">    <span class="keyword">while</span> (s &lt; x) &#123;</span><br><span class="line">        s = s * <span class="number">10</span> + <span class="number">1</span>;  <span class="comment">// 先找出大于x的最小光棍数</span></span><br><span class="line">        n++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        y = s % x;  <span class="comment">// 储存余数</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, s / x);</span><br><span class="line">        s = y * <span class="number">10</span> + <span class="number">1</span>;  <span class="comment">// 更新光棍数</span></span><br><span class="line">        n++;</span><br><span class="line">    &#125; <span class="keyword">while</span> (y != <span class="number">0</span>);  <span class="comment">// 如果余数为0，说明找到了光棍数字，直接结束循环</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, n);  <span class="comment">// 输出位数</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-43-Shuffling-Machine"><a href="#7-43-Shuffling-Machine" class="headerlink" title="7-43 Shuffling Machine"></a><strong>7-43 Shuffling Machine</strong></h1><p>看这个B题目，和看天书一样，我真的服我自己，英语学的别太烂</p>
<p>下面是原来的题目，我会通过翻译软件翻译一下</p>
<p>Shuffling is a procedure used to randomize a deck of playing cards. Because standard shuffling techniques are seen as weak, and in order to avoid “inside jobs” where employees collaborate with gamblers by performing inadequate shuffles, many casinos employ <strong>automatic shuffling machines</strong>. Your task is to simulate a shuffling machine.</p>
<p>The machine shuffles a deck of 54 cards according to a given random order and repeats for a given number of times. It is assumed that the initial status of a card deck is in the following order:</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">S1</span></span>, S2, ..., S13, </span><br><span class="line"><span class="function"><span class="title">H1</span></span>, H2, ..., H13, </span><br><span class="line"><span class="function"><span class="title">C1</span></span>, C2, ..., C13, </span><br><span class="line"><span class="function"><span class="title">D1</span></span>, D2, ..., D13, </span><br><span class="line">J1, J2</span><br></pre></td></tr></table></figure>
<p>where “S” stands for “Spade”, “H” for “Heart”, “C” for “Club”, “D” for “Diamond”, and “J” for “Joker”. A given order is a permutation of distinct integers in [1, 54]. If the number at the <em>i</em>-th position is <em>j</em>, it means to move the card from position <em>i</em> to position <em>j</em>. For example, suppose we only have 5 cards: S3, H5, C1, D13 and J2. Given a shuffling order {4, 2, 5, 3, 1}, the result will be: J2, H5, D13, S3, C1. If we are to repeat the shuffling again, the result will be: C1, H5, S3, J2, D13.</p>
<h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line contains a positive integer <em>K</em> (≤20) which is the number of repeat times. Then the next line contains the given order. All the numbers in a line are separated by a space.</p>
<h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, print the shuffling results in one line. All the cards are separated by a space, and there must be no extra space at the end of the line.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">36 52 37 38 3 39 40 53 54 41 11 12 13 42 43 44 2 4 23 24 25 26 27 6 7 8 48 49 50 51 9 10 14 15 16 5 17 18 19 1 20 21 22 28 29 30 31 32 33 34 35 45 46 47</span><br></pre></td></tr></table></figure>
<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">S7 C11 C10 C12 S1 H7 H8 H9 D8 D9 S11 S12 S13 D10 D11 D12 S3 S4 S6 S10 H1 H2 C13 D2 D3 D4 H6 H3 D13 J1 J2 C1 C2 C3 C4 D1 S5 H5 H11 H12 C6 C7 C8 C9 S2 S8 S9 H10 D5 D6 D7 H4 H13 C5</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<h3 id="错误原因-1"><a href="#错误原因-1" class="headerlink" title="错误原因"></a>错误原因</h3><p>不会看题，题目看不懂</p>
<p>Shuffling Machine</p>
<p><strong>洗牌机</strong></p>
<p>Shuffling is a procedure used to randomize a deck of playing cards.洗牌是将一副扑克牌随机化的过程。</p>
<p>Because standard shuffling techniques are seen as weak,</p>
<p>因为标准的洗牌技术被认为很薄弱、</p>
<p>and in order to avoid “inside jobs” where employees collaborate with gamblers by performing inadequate shuffles</p>
<p>以及为了避免员工通过不适当的洗牌与赌徒合作的 “内部工作”</p>
<p>many casinos employ automatic shuffling machines. Your task is to simulate a shuffling machine.</p>
<p>许多赌场都使用自动洗牌机。您的任务就是模拟洗牌机。</p>
<p>The machine shuffles a deck of 54 cards according to a given random order and repeats for a given number of times. It is assumed that the initial status of a card deck is in the following order:</p>
<p>该机器按照给定的随机顺序洗一副 54 张牌，并重复给定的次数。假设一副牌的初始状态按以下顺序排列：</p>
<p>where “S” stands for “Spade”, “H” for “Heart”, “C” for “Club”, “D” for “Diamond”, and “J” for “Joker”. A given order is a permutation of distinct integers in [1, 54]. If the number at the <em>i</em>-th position is <em>j</em>, it means to move the card from position <em>i</em> to position <em>j</em>. For example, suppose we only have 5 cards: S3, H5, C1, D13 and J2. Given a shuffling order {4, 2, 5, 3, 1}, the result will be: J2, H5, D13, S3, C1. If we are to repeat the shuffling again, the result will be: C1, H5, S3, J2, D13.</p>
<p>其中 “S “代表 “黑桃”，”H “代表 “红心”，”C “代表 “梅花”，”D “代表 “方块”，”J “代表 “小丑”。给定的顺序是[1, 54]中不同整数的排列。例如，假设我们只有 5 张牌： S3、H5、C1、D13 和 J2。给定一个洗牌顺序{4，2，5，3，1}，结果将是 J2、H5、D13、S3、C1。如果我们再重复一次洗牌，结果将是 C1、H5、S3、J2、D13。</p>
<p>这里很恶心的这个B翻译软件，有一句话，没有翻译出来</p>
<p>If the number at the i-th position is j, it means to move the card from position i to position j. </p>
<p>如果第 i 个位置的数字是 j，则表示将牌从第 i 个位置移动到第 j 个位置。这一句话，可以不翻译的是吧，B翻译软件</p>
<p>做反而是好做的</p>
<h2 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下:"></a>代码如下:</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> card[<span class="number">55</span>] = &#123; <span class="number">0</span> &#125;, pcard[<span class="number">55</span>] = &#123; <span class="number">0</span> &#125;, random[<span class="number">55</span>] = &#123; <span class="number">0</span> &#125;,k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">55</span>; ++i)   card[i] = i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">54</span>; ++i)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;random[i]);</span><br><span class="line">    <span class="keyword">while</span> (k) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">54</span>; ++i) &#123;</span><br><span class="line">            pcard[random[i]] = card[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">54</span>; ++i)</span><br><span class="line">            card[i] = pcard[i];</span><br><span class="line">        k--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">54</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (card[i] &gt;= <span class="number">1</span> &amp;&amp; card[i] &lt;= <span class="number">13</span>) <span class="built_in">printf</span>(<span class="string">&quot;S%d&quot;</span>, card[i]);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (card[i] &gt; <span class="number">13</span> &amp;&amp; card[i] &lt;= <span class="number">26</span>)   <span class="built_in">printf</span>(<span class="string">&quot;H%d&quot;</span>, card[i] - <span class="number">13</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (card[i] &gt; <span class="number">26</span> &amp;&amp; card[i] &lt;= <span class="number">39</span>)  <span class="built_in">printf</span>(<span class="string">&quot;C%d&quot;</span>, card[i] - <span class="number">26</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (card[i] &gt; <span class="number">39</span> &amp;&amp; card[i] &lt;= <span class="number">52</span>)  <span class="built_in">printf</span>(<span class="string">&quot;D%d&quot;</span>, card[i] - <span class="number">39</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;J%d&quot;</span>, card[i] - <span class="number">52</span>);</span><br><span class="line">        <span class="keyword">if</span> (i!=<span class="number">54</span>)    <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-49-Have-Fun-with-Numbers"><a href="#7-49-Have-Fun-with-Numbers" class="headerlink" title="7-49 Have Fun with Numbers"></a><strong>7-49 Have Fun with Numbers</strong></h1><p>Notice that the number 123456789 is a 9-digit number consisting exactly the numbers from 1 to 9, with no duplication. Double it we will obtain 246913578, which happens to be another 9-digit number consisting exactly the numbers from 1 to 9, only in a different permutation. Check to see the result if we double it again!</p>
<p>Now you are suppose to check if there are more numbers with this property. That is, double a given number with <em>k</em> digits, you are to tell if the resulting number consists of only a permutation of the digits in the original number.</p>
<h3 id="Input-Specification-1"><a href="#Input-Specification-1" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input contains one test case. Each case contains one positive integer with no more than 20 digits.</p>
<h3 id="Output-Specification-1"><a href="#Output-Specification-1" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, first print in a line “Yes” if doubling the input number gives a number that consists of only a permutation of the digits in the original number, or “No” if not. Then in the next line, print the doubled number.</p>
<h3 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1234567899</span><br></pre></td></tr></table></figure>
<h3 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Yes</span><br><span class="line">2469135798</span><br></pre></td></tr></table></figure>
<p>这题也是，题目看不太懂，但是比43题要好的多的多得多</p>
<h2 id="逐句翻译"><a href="#逐句翻译" class="headerlink" title="逐句翻译"></a>逐句翻译</h2><p>Notice that the number 123456789 is a 9-digit number consisting exactly the numbers from 1 to 9, with no duplication</p>
<p>请注意，数字 123456789 是一个 9 位数，正好由 1 到 9 的数字组成，没有重复的数字</p>
<p>Double it we will obtain 246913578, which happens to be another 9-digit number consisting exactly the numbers from 1 to 9, only in a different permutation</p>
<p>将它加倍，我们将得到 246913578，这恰好是另一个 9 位数，完全由 1 到 9 的数字组成，只是排列方式不同而已</p>
<p>Check to see the result if we double it again!</p>
<p>现在，您需要检查是否有更多数字具有此属性</p>
<p>也就是说，将一个有 k 位数字的给定数字加倍，你要知道得到的数字是否只由原始数字中的数字排列而成。</p>
<h3 id="错误原因-2"><a href="#错误原因-2" class="headerlink" title="错误原因"></a>错误原因</h3><p>一直在解决那个运算大小的问题，这个我一直不清楚</p>
<h3 id="错误代码"><a href="#错误代码" class="headerlink" title="错误代码"></a>错误代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> a[<span class="number">11</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">void</span> <span class="title function_">adda</span><span class="params">(<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">while</span> (x) &#123;</span><br><span class="line">        a[x % <span class="number">10</span>] = <span class="number">1</span>;</span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; ++i)  a[i] = <span class="number">0</span>;    <span class="comment">//初始化</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> x = <span class="number">0</span>, flag = <span class="number">1</span>, t = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;x);</span><br><span class="line">    adda(x);</span><br><span class="line">    t = x * <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] == <span class="number">0</span>) flag = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Yes\n%lld&quot;</span>, t);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (t) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[t % <span class="number">10</span>] == <span class="number">0</span>) &#123;</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            a[t % <span class="number">10</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        t /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] == <span class="number">1</span>) flag = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag)    <span class="built_in">printf</span>(<span class="string">&quot;Yes\n%lld&quot;</span>, x * <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;No\n%lld&quot;</span>, x * <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>正确代码如下：</p>
<p>思路如下：</p>
<p><strong>分析：使用char数组存储这个数，没个数的数位乘以2 + 进位，同时设立book来标记数位出现的情况。只有最后book的每个元素都是0的时候才说明这两个数字是相等的一个排列结果～</strong></p>
<p>代码地址</p>
<h3 id="正确代码"><a href="#正确代码" class="headerlink" title="正确代码"></a>正确代码</h3><p><a href="https://blog.csdn.net/liuchuo/article/details/52155928?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522171204890216800215051717%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&amp;request_id=171204890216800215051717&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-1-52155928-null-null.nonecase&amp;utm_term=Have%20Fun%20with%20Numbers&amp;spm=1018.2226.3001.4450">https://blog.csdn.net/liuchuo/article/details/52155928?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522171204890216800215051717%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&amp;request_id=171204890216800215051717&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-1-52155928-null-null.nonecase&amp;utm_term=Have%20Fun%20with%20Numbers&amp;spm=1018.2226.3001.4450</a></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> book[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> num[<span class="number">22</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, num);</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">0</span>, len = <span class="built_in">strlen</span>(num);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = len - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="type">int</span> temp = num[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        book[temp]++;</span><br><span class="line">        temp = temp * <span class="number">2</span> + flag;</span><br><span class="line">        flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (temp &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">            temp = temp - <span class="number">10</span>;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        num[i] = (temp + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        book[temp]--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> flag1 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (book[i] != <span class="number">0</span>)</span><br><span class="line">            flag1 = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, (flag == <span class="number">1</span> || flag1 == <span class="number">1</span>) ? <span class="string">&quot;No\n&quot;</span> : <span class="string">&quot;Yes\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (flag == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-50-输出华氏-摄氏温度转换表"><a href="#7-50-输出华氏-摄氏温度转换表" class="headerlink" title="7-50 输出华氏-摄氏温度转换表"></a><strong>7-50 输出华氏-摄氏温度转换表</strong></h1><p>题目如下：</p>
<p>输入2个正整数<code>lower</code>和<code>upper</code>（<code>lower</code>≤<code>upper</code>≤100），请输出一张取值范围为[<code>lower</code>，<code>upper</code>]、且每次增加2华氏度的华氏-摄氏温度转换表。</p>
<p>温度转换的计算公式：<em>C</em>=5×(<em>F</em>−32)/9，其中：<em>C</em>表示摄氏温度，<em>F</em>表示华氏温度。</p>
<h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>在一行中输入2个整数，分别表示<code>lower</code>和<code>upper</code>的值，中间用空格分开。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>第一行输出：”fahr celsius”</p>
<p>接着每行输出一个华氏温度fahr（整型）与一个摄氏温度celsius（占据6个字符宽度，靠右对齐，保留1位小数）。</p>
<p>若输入的范围不合法，则输出”Invalid.”。</p>
<h3 id="输入样例1"><a href="#输入样例1" class="headerlink" title="输入样例1:"></a>输入样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">32 35</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1"><a href="#输出样例1" class="headerlink" title="输出样例1:"></a>输出样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fahr celsius</span><br><span class="line">32   0.0</span><br><span class="line">34   1.1</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2"><a href="#输入样例2" class="headerlink" title="输入样例2:"></a>输入样例2:</h3><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">40 </span><span class="number">30</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例2"><a href="#输出样例2" class="headerlink" title="输出样例2:"></a>输出样例2:</h3><figure class="highlight erlang"><table><tr><td class="code"><pre><span class="line">Invalid.</span><br></pre></td></tr></table></figure>
<h2 id="错误原因-3"><a href="#错误原因-3" class="headerlink" title="错误原因"></a>错误原因</h2><p>温度是可以有负的，铁铁，我确实是傻逼了</p>
<p>正确代码</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> lower = <span class="number">0</span>, upper = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;lower, &amp;upper);</span><br><span class="line">	<span class="keyword">if</span> ( lower&gt;upper) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Invalid.\n&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;fahr celsius\n&quot;</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = lower; i &lt;= upper; i += <span class="number">2</span>) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d%6.1f\n&quot;</span>, i, <span class="number">5</span> * (i - <span class="number">32</span>) / <span class="number">9.0</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-56-求给定精度的简单交错序列部分和"><a href="#7-56-求给定精度的简单交错序列部分和" class="headerlink" title="7-56 求给定精度的简单交错序列部分和"></a><strong>7-56 求给定精度的简单交错序列部分和</strong></h1><p>本题要求编写程序，计算序列部分和 1 - 1/4 + 1/7 - 1/10 + … 直到最后一项的绝对值不大于给定精度eps。</p>
<h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出一个正实数eps。</p>
<h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>在一行中按照“sum = S”的格式输出部分和的值S，精确到小数点后六位。题目保证计算结果不超过双精度范围。</p>
<h3 id="输入样例1-1"><a href="#输入样例1-1" class="headerlink" title="输入样例1:"></a>输入样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4E-2</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1-1"><a href="#输出样例1-1" class="headerlink" title="输出样例1:"></a>输出样例1:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sum = 0.854457</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2-1"><a href="#输入样例2-1" class="headerlink" title="输入样例2:"></a>输入样例2:</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">0</span>.<span class="number">02</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例2-1"><a href="#输出样例2-1" class="headerlink" title="输出样例2:"></a>输出样例2:</h3><figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">sum</span> <span class="operator">=</span> <span class="number">0.826310</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p> 这题我是写出来了，但是我写的非常的糟糕，非常的糟糕</p>
<p>代码真的是又臭又长，也是真的抽象</p>
<h2 id="我自己写的代码，正确但是臭"><a href="#我自己写的代码，正确但是臭" class="headerlink" title="我自己写的代码，正确但是臭"></a>我自己写的代码，正确但是臭</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">//#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="type">double</span> <span class="title function_">Mi</span><span class="params">(<span class="type">int</span> d)</span> &#123;</span><br><span class="line">	<span class="type">double</span> sum = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; d; ++i) &#123;</span><br><span class="line">		sum *= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (d &lt; <span class="number">0</span>) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; -d; ++i) &#123;</span><br><span class="line">			sum *= <span class="number">0.1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> <span class="title function_">chartodbl</span><span class="params">(<span class="type">char</span>* a)</span> &#123;</span><br><span class="line">	<span class="type">int</span> dit = <span class="built_in">strlen</span>(a),sum=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a); i++) &#123;</span><br><span class="line">		sum += (a[i] - <span class="string">&#x27;0&#x27;</span>) * Mi(dit);</span><br><span class="line">		dit--;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> <span class="title function_">strtodbl</span><span class="params">(<span class="type">char</span> *a)</span> &#123;</span><br><span class="line">	<span class="type">int</span> dit = <span class="number">0</span>,flag=<span class="number">0</span>;	<span class="comment">//0表示在E之前的数字</span></span><br><span class="line">	<span class="type">char</span> num[<span class="number">50</span>] = &#123; <span class="string">&#x27; &#x27;</span> &#125;, mi[<span class="number">50</span>] = &#123;<span class="string">&#x27; &#x27;</span>&#125;;</span><br><span class="line">	<span class="type">int</span> index = <span class="number">0</span>,num2=<span class="number">0</span>;</span><br><span class="line">	<span class="type">double</span> num1 = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a); i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">			<span class="keyword">if</span> (a[i] &gt; <span class="string">&#x27;0&#x27;</span> &amp;&amp; a[i] &lt; <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">				num[i] = a[i];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (a[i] == <span class="string">&#x27;E&#x27;</span>) &#123;</span><br><span class="line">			flag = <span class="number">1</span>;</span><br><span class="line">			num1 = chartodbl(num);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">			<span class="keyword">if</span> (a[i] &gt; <span class="string">&#x27;0&#x27;</span> &amp;&amp; a[i] &lt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">				mi[index] = a[i];</span><br><span class="line">				index++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	num2 = chartodbl(mi);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;=num2; ++i) &#123;</span><br><span class="line">		num1 *= <span class="number">0.1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> num1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用来判断是不是科学计数法</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">judge</span><span class="params">(<span class="type">char</span>* a)</span> &#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a); ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (a[i] == <span class="string">&#x27;E&#x27;</span>)	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> <span class="title function_">nor</span><span class="params">(<span class="type">char</span>* a)</span> &#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a); ++i) &#123;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">double</span> sum=<span class="number">0</span>, n = <span class="number">0</span>, t = <span class="number">1</span>,i=<span class="number">1</span>;</span><br><span class="line">	<span class="type">char</span> str[<span class="number">100</span>] = &#123; <span class="string">&#x27; &#x27;</span> &#125;;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line">	<span class="keyword">if</span> (!judge(str)) &#123;</span><br><span class="line">		n = strtodbl(str);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		n = atof(str);</span><br><span class="line">	<span class="keyword">if</span> (n &gt;= <span class="number">1</span>)	sum = <span class="number">1</span>;</span><br><span class="line">	<span class="comment">//printf(&quot;%lf\n&quot;, n);</span></span><br><span class="line">	<span class="keyword">while</span> (t - n &gt;<span class="number">0</span>) &#123;</span><br><span class="line">		t = <span class="number">1.0</span> / (<span class="number">3</span> * i - <span class="number">2</span>);</span><br><span class="line">		<span class="keyword">if</span> ((<span class="type">int</span>)i % <span class="number">2</span> == <span class="number">0</span>)	t *= <span class="number">-1</span>;</span><br><span class="line">		<span class="comment">//printf(&quot;i is %lf   t is %lf\n&quot;, i, t);</span></span><br><span class="line">		sum += t;</span><br><span class="line">		i++;</span><br><span class="line">		<span class="keyword">if</span> (t &lt; <span class="number">0</span>)	t = -t;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//printf(&quot;t is %.8lf\n&quot;, t);</span></span><br><span class="line">	<span class="comment">//t = 1.0 / (3 * i - 2);</span></span><br><span class="line">	<span class="comment">//if ((int)i % 2 == 0)	t *= -1;</span></span><br><span class="line">	<span class="comment">//sum += t;</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;sum = %.6lf&quot;</span>, sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>找找柳神的代码，怎么样。</p>
<p>我是傻逼，这个是可以读取科学计数法的，我真的是日了狗了</p>
<p>我是傻逼，scanf是可以读取double类型下的科学计数法的</p>
<p>还有就是float和double，能用double，就用double，因为这两个float可能会损失精度</p>
<h2 id="别人的代码-1"><a href="#别人的代码-1" class="headerlink" title="别人的代码"></a>别人的代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> eps;</span><br><span class="line">    <span class="type">double</span> flag, denominator, item, sum;</span><br><span class="line">    scanf_s(<span class="string">&quot;%lf&quot;</span>, &amp;eps);</span><br><span class="line">    flag = <span class="number">1</span>;</span><br><span class="line">    denominator = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        item的初值比eps大</span></span><br><span class="line"><span class="comment">        可以保证进入循环程序</span></span><br><span class="line"><span class="comment">        可以满足eps比1大的情况下，sum能加到第一项</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    item = eps + <span class="number">1</span>;</span><br><span class="line">    sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">fabs</span>(item) &gt; eps)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/*不满足while判断表达式后的第一项，此时的item为下一项*/</span></span><br><span class="line">        item = flag / denominator;</span><br><span class="line">        sum = sum + item;</span><br><span class="line">        flag = -flag;</span><br><span class="line">        denominator = denominator + <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum = %.6f\n&quot;</span>, sum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-59-打印菱形图案"><a href="#7-59-打印菱形图案" class="headerlink" title="7-59 打印菱形图案"></a><strong>7-59 打印菱形图案</strong></h1><p>本题要求编写程序，打印一个高度为<em>n</em>的、由“*”组成的正菱形图案。</p>
<h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出一个正的奇数<em>n</em>。</p>
<h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>输出由<em>n</em>行星号“*”组成的菱形，如样例所示。每个星号后跟一个空格。</p>
<h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure>
<h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">      * </span><br><span class="line">    * * * </span><br><span class="line">  * * * * * </span><br><span class="line">* * * * * * * </span><br><span class="line">  * * * * * </span><br><span class="line">    * * * </span><br><span class="line">      * </span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<h2 id="错误原因-4"><a href="#错误原因-4" class="headerlink" title="错误原因"></a>错误原因</h2><p>也没有什么错误原因，就是不会写，我也是有点低能的</p>
<p>我真是傻逼了，不管怎么样，先输出5个空格在说呗，为什么要管呢</p>
<p>然后在输出一个*</p>
<h2 id="正确代码-1"><a href="#正确代码-1" class="headerlink" title="正确代码"></a>正确代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n / <span class="number">2</span> + <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= n + <span class="number">1</span> - <span class="number">2</span> * i; j++)        <span class="comment">//  不管怎么样，先输出5个空格</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= <span class="number">2</span> * i - <span class="number">1</span>; j++)            <span class="comment">// 然后在输出对应的*</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;* &quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n / <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= <span class="number">2</span> * i; j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">2</span> * (n / <span class="number">2</span>) - <span class="number">1</span> - <span class="number">2</span> * (i - <span class="number">1</span>); j &gt;= <span class="number">1</span>; j--)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;* &quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-79-N个数求和"><a href="#7-79-N个数求和" class="headerlink" title="7-79 N个数求和"></a><strong>7-79 N个数求和</strong></h1><p>本题的要求很简单，就是求<code>N</code>个数字的和。麻烦的是，这些数字是以有理数<code>分子/分母</code>的形式给出的，你输出的和也必须是有理数的形式。</p>
<h3 id="输入格式：-1"><a href="#输入格式：-1" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出一个正整数<code>N</code>（≤100）。随后一行按格式<code>a1/b1 a2/b2 ...</code>给出<code>N</code>个有理数。题目保证所有分子和分母都在长整型范围内。另外，负数的符号一定出现在分子前面。</p>
<h3 id="输出格式：-1"><a href="#输出格式：-1" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出上述数字和的最简形式 —— 即将结果写成<code>整数部分 分数部分</code>，其中分数部分写成<code>分子/分母</code>，要求分子小于分母，且它们没有公因子。如果结果的整数部分为0，则只输出分数部分。</p>
<h3 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">2/5 4/15 1/30 -2/60 8/3</span><br></pre></td></tr></table></figure>
<h3 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 1/3</span><br></pre></td></tr></table></figure>
<h3 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">2</span></span><br><span class="line"><span class="attribute">4</span>/<span class="number">3</span> <span class="number">2</span>/<span class="number">3</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>
<h3 id="输入样例3："><a href="#输入样例3：" class="headerlink" title="输入样例3："></a>输入样例3：</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">3</span></span><br><span class="line"><span class="attribute">1</span>/<span class="number">3</span> -<span class="number">1</span>/<span class="number">6</span> <span class="number">1</span>/<span class="number">8</span></span><br></pre></td></tr></table></figure>
<h3 id="输出样例3："><a href="#输出样例3：" class="headerlink" title="输出样例3："></a>输出样例3：</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">7</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<p>错误原因，已经超时了</p>
<h2 id="错误代码-1"><a href="#错误代码-1" class="headerlink" title="错误代码"></a>错误代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//求最大公约数</span></span><br><span class="line"><span class="type">long</span> <span class="title function_">lcd</span><span class="params">(<span class="type">long</span> a, <span class="type">long</span> b)</span> &#123;</span><br><span class="line">    <span class="type">long</span> m = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b) m = a;</span><br><span class="line">    <span class="keyword">else</span> m = b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">long</span> i = m; i &lt;= a * b; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i % a == <span class="number">0</span> &amp;&amp; i % b == <span class="number">0</span>)   <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">long</span> <span class="title function_">gcd</span><span class="params">(<span class="type">long</span> a, <span class="type">long</span> b)</span> &#123;</span><br><span class="line">    <span class="type">long</span> m = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (b &lt; <span class="number">0</span>) b = -b;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; b) m = a;</span><br><span class="line">    <span class="keyword">else</span> m = b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = m; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a % i == <span class="number">0</span> &amp;&amp; b % i == <span class="number">0</span>)  <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">long</span> *n,<span class="type">long</span> *a, <span class="type">long</span> *b, <span class="type">long</span> *a1, <span class="type">long</span> *b1)</span> &#123;</span><br><span class="line">    <span class="type">long</span> blcd = lcd(*b, *b1);</span><br><span class="line">    <span class="type">long</span> alcd = (blcd / *b) * (*a) + (blcd / *b1) * (*a1)+(*n)*blcd;</span><br><span class="line">    <span class="type">long</span> tgcd = gcd(blcd, alcd);</span><br><span class="line">    *a = alcd / tgcd;</span><br><span class="line">    *b = blcd / tgcd;</span><br><span class="line">    *n = *a / (*b);</span><br><span class="line">    *a = *a - (*n) * (*b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">put</span><span class="params">(<span class="type">long</span> num, <span class="type">long</span> a, <span class="type">long</span> b)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (a != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (num != <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%ld %ld/%ld&quot;</span>, num, a, b);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%ld/%ld&quot;</span>, a, b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%ld&quot;</span>, num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">long</span> a[<span class="number">101</span>] = &#123; <span class="number">0</span> &#125;, b[<span class="number">101</span>] = &#123; <span class="number">0</span> &#125;,num=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%ld/%ld&quot;</span>, &amp;a[<span class="number">1</span>], &amp;b[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%ld/%ld&quot;</span>, &amp;a[i],&amp;b[i]);</span><br><span class="line">        add(&amp;num,&amp;a[<span class="number">1</span>], &amp;b[<span class="number">1</span>], &amp;a[i], &amp;b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    put(num,a[<span class="number">1</span>], b[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="自己写的正确代码"><a href="#自己写的正确代码" class="headerlink" title="自己写的正确代码"></a>自己写的正确代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//求最大公倍数数</span></span><br><span class="line"><span class="type">long</span> <span class="title function_">lcd</span><span class="params">(<span class="type">long</span> a, <span class="type">long</span> b)</span> &#123;</span><br><span class="line">    <span class="type">long</span> m = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b) m = a;</span><br><span class="line">    <span class="keyword">else</span> m = b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">long</span> i = m; i &lt;= a * b; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i % a == <span class="number">0</span> &amp;&amp; i % b == <span class="number">0</span>)   <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//最小公约数</span></span><br><span class="line"><span class="type">long</span> <span class="title function_">gcd</span><span class="params">(<span class="type">long</span> a, <span class="type">long</span> b)</span> &#123;</span><br><span class="line">    <span class="type">long</span> m = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; <span class="number">0</span>)  a = -a;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; b) m = a;</span><br><span class="line">    <span class="keyword">else</span> m = b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">long</span> i = m; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a % i == <span class="number">0</span> &amp;&amp; b % i == <span class="number">0</span>)  <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//化简</span></span><br><span class="line"><span class="type">long</span> <span class="title function_">gcdmyself</span><span class="params">(<span class="type">long</span>* a, <span class="type">long</span>* b)</span> &#123;</span><br><span class="line">    <span class="type">long</span> mlcd = gcd(*a, *b);</span><br><span class="line">    <span class="comment">//printf(&quot;mcld is %ld\n&quot;, mlcd);</span></span><br><span class="line">    *a = *a / mlcd;</span><br><span class="line">    *b = *b / mlcd;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//相加的函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">long</span>* n, <span class="type">long</span>* a, <span class="type">long</span>* b, <span class="type">long</span>* a1, <span class="type">long</span>* b1)</span> &#123;</span><br><span class="line">    <span class="type">long</span> blcd = lcd(*b, *b1);</span><br><span class="line">    <span class="type">long</span> alcd = (blcd / *b) * (*a) + (blcd / *b1) * (*a1) + (*n) * blcd;</span><br><span class="line">    <span class="type">long</span> tgcd = gcd(alcd,blcd);</span><br><span class="line">    <span class="keyword">if</span> (alcd != <span class="number">0</span>) &#123;</span><br><span class="line">        *a = alcd / tgcd;</span><br><span class="line">        *b = blcd / tgcd;</span><br><span class="line">        *n = *a / (*b);</span><br><span class="line">        *a = *a - (*n) * (*b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        *n = <span class="number">0</span>;</span><br><span class="line">        *a = <span class="number">0</span>;</span><br><span class="line">        *b = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">put</span><span class="params">(<span class="type">long</span> num, <span class="type">long</span> a, <span class="type">long</span> b)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="number">0</span> &amp;&amp; num == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (num != <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%ld %ld/%ld&quot;</span>, num, a, b);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%ld/%ld&quot;</span>, a, b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%ld&quot;</span>, num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">long</span> a[<span class="number">101</span>] = &#123; <span class="number">0</span> &#125;, b[<span class="number">101</span>] = &#123; <span class="number">0</span> &#125;, num = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%ld/%ld&quot;</span>, &amp;a[<span class="number">1</span>], &amp;b[<span class="number">1</span>]);</span><br><span class="line">    gcdmyself(&amp;a[<span class="number">1</span>], &amp;b[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%ld/%ld&quot;</span>, &amp;a[i], &amp;b[i]);</span><br><span class="line">        gcdmyself(&amp;a[i], &amp;b[i]);    </span><br><span class="line">        add(&amp;num, &amp;a[<span class="number">1</span>], &amp;b[<span class="number">1</span>], &amp;a[i], &amp;b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    put(num, a[<span class="number">1</span>], b[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>柳神的好代码</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="title function_">gcd</span><span class="params">(<span class="type">long</span> <span class="type">long</span> a, <span class="type">long</span> <span class="type">long</span> b)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> b == <span class="number">0</span> ? a : gcd(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> n, a, b, suma = <span class="number">0</span>, sumb = <span class="number">1</span>, gcdvalue;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld/%lld&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        gcdvalue = (suma == <span class="number">0</span> || sumb == <span class="number">0</span>) ? <span class="number">1</span> : gcd(<span class="built_in">abs</span>(suma), <span class="built_in">abs</span>(sumb));</span><br><span class="line">        sumb = sumb / gcdvalue;</span><br><span class="line">        suma = suma / gcdvalue;</span><br><span class="line">        gcdvalue = (a == <span class="number">0</span> || b == <span class="number">0</span>) ? <span class="number">1</span> : gcd(<span class="built_in">abs</span>(a), <span class="built_in">abs</span>(b));</span><br><span class="line">        a = a / gcdvalue;</span><br><span class="line">        b = b / gcdvalue;</span><br><span class="line">        suma = a * sumb + suma * b;</span><br><span class="line">        sumb = b * sumb;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> integer = suma / sumb;</span><br><span class="line">    suma = suma - (sumb * integer);</span><br><span class="line">    gcdvalue = (suma == <span class="number">0</span> || sumb == <span class="number">0</span>) ? <span class="number">1</span> : gcd(<span class="built_in">abs</span>(suma), <span class="built_in">abs</span>(sumb));</span><br><span class="line">    suma = suma / gcdvalue;</span><br><span class="line">    sumb = sumb / gcdvalue;</span><br><span class="line">    <span class="keyword">if</span> (integer != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, integer);</span><br><span class="line">        <span class="keyword">if</span> (suma != <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (suma != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld/%lld&quot;</span>, suma, sumb);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (integer == <span class="number">0</span> &amp;&amp; suma == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PTA</category>
        <category>C</category>
      </categories>
      <tags>
        <tag>PTA</tag>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>程序设计入门——C语言</title>
    <url>/2020/10/08/C%E8%AF%AD%E8%A8%80%E7%BD%91%E8%AF%BE%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="程序设计入门——C语言"><a href="#程序设计入门——C语言" class="headerlink" title="程序设计入门——C语言"></a>程序设计入门——C语言</h1><p>第一周 程序设计与C语言</p>
<p> 程序的执行</p>
<p>解释：借助一个程序，那个程序能试图理解你的程序，然后按照你的要求执行</p>
<p>编译：借助一个程序，就像一个翻译，把你的程序翻译成计算机真正能懂的语言———机器语言——写的程序，然后，这个机器语言写的程序就能执行了</p>
<p>一：语言本无编译/解释之分</p>
<p>二：常用的执行方式而已</p>
<p>三：解释语言有特殊的计算能力</p>
<p>四：编译型语言有确定的运算性能</p>
<p>现代的编程语言在语法上差异很小，几乎都是C-Like语言</p>
<p>语言的能力/适用领域主要是由</p>
<p>库</p>
<p>传统所决定的</p>
<h1 id="C语言的发展"><a href="#C语言的发展" class="headerlink" title="C语言的发展"></a>C语言的发展</h1><p>1989年ANSI发布了一个标准-ANSI-C</p>
<p>1990年ISO接受了ANSI的标准-C89</p>
<p>C的标桩在1995年和1999年两次更新-C95和C99</p>
<h1 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h1><p>一个表达式是一系列运算符和算子的组合，用来计算一个值</p>
<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h2 id="运算符-1"><a href="#运算符-1" class="headerlink" title="运算符"></a>运算符</h2><p>（operator)是指进行运算的动作，比如加法运算符”+”，减肥运算符“-”</p>
<h2 id="算子"><a href="#算子" class="headerlink" title="算子"></a>算子</h2><p>算子，是指参与运算的值，这个值可能是常数，也可能是变量，还可能是一个方法的返回值</p>
<p>举例：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">a=b+c</span><br></pre></td></tr></table></figure>
<p>这里面的a,b,c,就是算子，=号和+号就是运算符</p>
<p>这个运算符也是有一个优先级的</p>
<p>下面有一张，运算符的优先级</p>
<p>我也会写一下相对应的代码公式</p>
<p>C语言常见运算符优先级</p>
<p>这里a都等于2，b都等于3</p>
<p>测试代码如下：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>优先级</th>
<th>运算符</th>
<th>运算</th>
<th>结合关系</th>
<th>举例</th>
<th>结果</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>+</td>
<td>单目不变</td>
<td>自右向左</td>
<td>a*+b</td>
<td>6</td>
</tr>
<tr>
<td>-9</td>
<td>-</td>
<td>单目取负</td>
<td>自右向左</td>
<td>a*-b</td>
<td>-6</td>
</tr>
<tr>
<td>2</td>
<td>*</td>
<td>乘</td>
<td>自左向右</td>
<td>a*b</td>
<td>6</td>
</tr>
<tr>
<td>2</td>
<td>/</td>
<td>除</td>
<td>自左向右</td>
<td>a/b</td>
<td>0</td>
</tr>
<tr>
<td>2</td>
<td>%</td>
<td>取余</td>
<td>自左向右</td>
<td>a%b</td>
<td>2</td>
</tr>
<tr>
<td>3</td>
<td>+</td>
<td>加</td>
<td>自左向右</td>
<td>a+b</td>
<td>5</td>
</tr>
<tr>
<td>3</td>
<td>-</td>
<td>减</td>
<td>自左向右</td>
<td>a-b</td>
<td>-1</td>
</tr>
<tr>
<td>4</td>
<td>=</td>
<td>赋值</td>
<td>自右向左</td>
<td>a=b</td>
<td>3</td>
</tr>
</tbody>
</table>
</div>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">2</span>, b = <span class="number">3</span>;</span><br><span class="line">	<span class="type">int</span> c = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;a * +b =%d\n&quot;</span>, a * +b);<span class="comment">//a*+b=a*(+b)=a*b</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;a * -b =%d\n&quot;</span>, a * -b);<span class="comment">//a*-b=a*(-b)</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;a * b =%d\n&quot;</span>, a * b);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;a / b =%d\n&quot;</span>, a / b);	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;a % b =%d\n&quot;</span>, a % b);	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot; a + b =%d\n&quot;</span>, a + b);	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;a - b =%d\n&quot;</span>, a - b);	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;a=b =%d\n&quot;</span>, a=b);	<span class="comment">//a=b,a=3</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>赋值也是一个运算符，这个和其他的语言不同</p>
<h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><p>赋值也是运算，也有结果</p>
<p>a=6的结果是a被赋予的值，也就是6</p>
<p>a=b=6-&gt;a=(b=6)</p>
]]></content>
      <categories>
        <category>C</category>
        <category>Mooc</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言-翁恺-PTA-81-120课后练习题-03</title>
    <url>/2024/04/05/C%E8%AF%AD%E8%A8%80-%E7%BF%81%E6%81%BA-PTA-81-120%E8%AF%BE%E5%90%8E%E7%BB%83%E4%B9%A0%E9%A2%98-03/</url>
    <content><![CDATA[<h1 id="7-84-连续因子"><a href="#7-84-连续因子" class="headerlink" title="7-84 连续因子"></a><strong>7-84 连续因子</strong></h1><p>80-以后的题目感觉都不是很好做</p>
<p>一个正整数 <em>N</em> 的因子中可能存在若干连续的数字。例如 630 可以分解为 3×5×6×7，其中 5、6、7 就是 3 个连续的数字。给定任一正整数 <em>N</em>，要求编写程序求出最长连续因子的个数，并输出最小的连续因子序列。</p>
<h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个正整数 <em>N</em>（1&lt;<em>N</em>&lt;231）。</p>
<h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>首先在第 1 行输出最长连续因子的个数；然后在第 2 行中按 <code>因子1*因子2*……*因子k</code> 的格式输出最小的连续因子序列，其中因子按递增顺序输出，1 不算在内。</p>
<h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">630</span><br></pre></td></tr></table></figure>
<h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">5*6*7</span><br></pre></td></tr></table></figure>
<p><strong>鸣谢用户 漏穿雪 补充数据！</strong></p>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<h2 id="错误代码"><a href="#错误代码" class="headerlink" title="错误代码"></a>错误代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">long</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>,beg=<span class="number">0</span>,sum=<span class="number">0</span>,sumt=<span class="number">0</span>,begt=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> num[<span class="number">1000</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n / <span class="number">2</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n % i == <span class="number">0</span>) &#123;</span><br><span class="line">            num[t++] = i;</span><br><span class="line">            <span class="comment">//printf(&quot;%d &quot;, i);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//printf(&quot;\nt is %d\nt[22] is %d\n&quot;, t,num[t-1]);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;t; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (num[i] == num[i - <span class="number">1</span>]+<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == t - <span class="number">1</span>) &#123;</span><br><span class="line">                sumt = i - begt+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (sumt &gt; sum) &#123;</span><br><span class="line">                    beg = begt;</span><br><span class="line">                    sum = sumt;</span><br><span class="line">                &#125;</span><br><span class="line">                begt = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            sumt = i - begt;</span><br><span class="line">            <span class="keyword">if</span> (sumt &gt; sum) &#123;</span><br><span class="line">                beg = begt;</span><br><span class="line">                sum = sumt;</span><br><span class="line">            &#125;</span><br><span class="line">            begt = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = beg; i &lt; beg + sum; ++i) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, num[i]);</span><br><span class="line">        <span class="keyword">if</span> (i != beg + sum - <span class="number">1</span>)    <span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="柳神的代码"><a href="#柳神的代码" class="headerlink" title="柳神的代码"></a>柳神的代码</h2><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p><strong>不用算连续因子最多不会超过12个，也不需要三重循环，两重循环即可，直接去计算当前部分乘积能不能整除N<br>**</strong>分析：1、如果只有一个因子，那么这个数只能为1或者质数。因此我们主要去计算两个及以上因数的情况。<br>2、在有两个及以上的数连乘中，因数的最大上限为sqrt(N) + 1<br>3、因此思路就是，不断构造连乘，看连乘的积是否是N的因数，如果是，则看这部分连乘的数的个数是否比已记录的多。<br>4、用变量first记录连乘的第一个数字，这里我把它赋初值为0，如果在寻找N的因数过程中，first没有改变，那么就表明N是1或者是一个质数～**</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="type">int</span> num, temp;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>, &amp;num);</span><br><span class="line">    <span class="type">int</span> first = <span class="number">0</span>, len = <span class="number">0</span>, maxn = <span class="built_in">sqrt</span>(num) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= maxn; i++) &#123;</span><br><span class="line">        <span class="type">int</span> j;</span><br><span class="line">        temp = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (j = i; j &lt;= maxn; j++) &#123;</span><br><span class="line">            temp *= j;</span><br><span class="line">            <span class="keyword">if</span> (num % temp != <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (j - i &gt; len) &#123;</span><br><span class="line">            len = j - i;</span><br><span class="line">            first = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (first == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1\n%ld&quot;</span>, num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, len);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, first + i);</span><br><span class="line">            <span class="keyword">if</span> (i != len - <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="7-93-水仙花数"><a href="#7-93-水仙花数" class="headerlink" title="7-93 水仙花数"></a><strong>7-93 水仙花数</strong></h2><p>水仙花数是指一个<em>N</em>位正整数（<em>N</em>≥3），它的每个位上的数字的<em>N</em>次幂之和等于它本身。例如：153=13+53+33。 本题要求编写程序,计算所有<em>N</em>位水仙花数。</p>
<h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>输入在一行中给出一个正整数<em>N</em>（3≤<em>N</em>≤7）。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>按递增顺序输出所有<em>N</em>位水仙花数，每个数字占一行。</p>
<h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>
<h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">153</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">407</span><br></pre></td></tr></table></figure>
<h2 id="错误原因"><a href="#错误原因" class="headerlink" title="错误原因"></a>错误原因</h2><p>运行超市，无法通过最后一个检测</p>
<p>抽象的点来了，Pow函数的效率还不如自己写的，自己写一个幂函数即可</p>
<h2 id="错误代码-1"><a href="#错误代码-1" class="headerlink" title="错误代码"></a>错误代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">judge</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> mi)</span> &#123;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>, t = n;</span><br><span class="line">	<span class="keyword">while</span> (n) &#123;</span><br><span class="line">		sum += <span class="built_in">pow</span>(n % <span class="number">10</span>, mi);</span><br><span class="line">		<span class="keyword">if</span> (sum &gt; t)	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		n /= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (t == sum)	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="built_in">pow</span>(<span class="number">10</span>, n - <span class="number">1</span>); i &lt; <span class="built_in">pow</span>(<span class="number">10</span>, n); ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (judge(i,n))	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//if (judge(153))	printf(&quot;153\n&quot;);</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>正确代码：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">mypow</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= b; ++i) &#123;</span><br><span class="line">		sum *= a;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">judge</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> mi)</span> &#123;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>, t = n;</span><br><span class="line">	<span class="keyword">while</span> (n) &#123;</span><br><span class="line">		sum += mypow(n % <span class="number">10</span>, mi);</span><br><span class="line">		<span class="keyword">if</span> (sum &gt; t)	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		n /= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (t == sum)	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = mypow(<span class="number">10</span>, n - <span class="number">1</span>); i &lt; mypow(<span class="number">10</span>, n); ++i) &#123;</span><br><span class="line">		<span class="keyword">if</span> (judge(i,n))	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//if (judge(153))	printf(&quot;153\n&quot;);</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="7-110-求符合给定条件的整数集"><a href="#7-110-求符合给定条件的整数集" class="headerlink" title="7-110 求符合给定条件的整数集"></a><strong>7-110 求符合给定条件的整数集</strong></h1><p>给定不超过6的正整数A，考虑从A开始的连续4个数字。请输出所有由它们组成的无重复数字的3位数。</p>
<h3 id="输入格式：-1"><a href="#输入格式：-1" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出A。</p>
<h3 id="输出格式：-1"><a href="#输出格式：-1" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出满足条件的的3位数，要求从小到大，每行6个整数。整数间以空格分隔，但行末不能有多余空格。</p>
<h3 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>
<h3 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">234 235 243 245 253 254</span><br><span class="line">324 325 342 345 352 354</span><br><span class="line">423 425 432 435 452 453</span><br><span class="line">523 524 532 534 542 543</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<h2 id="错误原因-1"><a href="#错误原因-1" class="headerlink" title="错误原因"></a>错误原因</h2><p>没啥好的思路，不太会写</p>
<p>柳神没有写这题，所以我找了一个代码量少的，暴力算法</p>
<h2 id="正确代码"><a href="#正确代码" class="headerlink" title="正确代码"></a>正确代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> i, j, k;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (i = n; i &lt;= n + <span class="number">3</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = n; j &lt;= n + <span class="number">3</span>; j++)</span><br><span class="line">			<span class="keyword">for</span> (k = n; k &lt;= n + <span class="number">3</span>; k++)</span><br><span class="line">				<span class="keyword">if</span> (i != j &amp;&amp; j != k &amp;&amp; i != k)</span><br><span class="line">				&#123;</span><br><span class="line">					count++;</span><br><span class="line">					<span class="keyword">if</span> (count % <span class="number">6</span> == <span class="number">0</span>)</span><br><span class="line">						<span class="built_in">printf</span>(<span class="string">&quot;%d%d%d\n&quot;</span>, i, j, k);</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						<span class="built_in">printf</span>(<span class="string">&quot;%d%d%d &quot;</span>, i, j, k);</span><br><span class="line">				&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="7-117-整数的分类处理"><a href="#7-117-整数的分类处理" class="headerlink" title="7-117 整数的分类处理"></a><strong>7-117 整数的分类处理</strong></h1><p>这题我看不懂题目的意思，什么叫</p>
<p>存在整数 K 使之可以表示为 3K+1 的整数的个数、</p>
<p>还有什么叫做</p>
<p>存在整数 K 使之可以表示为 3K+2 的所有整数的平均值（精确到小数点后 1 位）</p>
<p>给定 N 个正整数，要求你从中得到下列三种计算结果：</p>
<ul>
<li>A1 = 能被 3 整除的最大整数</li>
<li>A2 = 存在整数 K 使之可以表示为 3K+1 的整数的个数</li>
<li>A3 = 存在整数 K 使之可以表示为 3K+2 的所有整数的平均值（精确到小数点后 1 位）</li>
</ul>
<h3 id="输入格式：-2"><a href="#输入格式：-2" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入首先在第一行给出一个正整数 N，随后一行给出 N 个正整数。所有数字都不超过 100，同行数字以空格分隔。</p>
<h3 id="输出格式：-2"><a href="#输出格式：-2" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中顺序输出 A1、A2、A3的值，其间以 1 个空格分隔。如果某个数字不存在，则对应输出<code>NONE</code>。</p>
<h3 id="输入样例-1："><a href="#输入样例-1：" class="headerlink" title="输入样例 1："></a>输入样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">5 8 7 6 9 1 3 10</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-1："><a href="#输出样例-1：" class="headerlink" title="输出样例 1："></a>输出样例 1：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9 3 6.5</span><br></pre></td></tr></table></figure>
<h3 id="输入样例-2："><a href="#输入样例-2：" class="headerlink" title="输入样例 2："></a>输入样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">15 18 7 6 9 1 3 10</span><br></pre></td></tr></table></figure>
<h3 id="输出样例-2："><a href="#输出样例-2：" class="headerlink" title="输出样例 2："></a>输出样例 2：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">18 3 NONE</span><br></pre></td></tr></table></figure>
<p>代码长度限制</p>
<p>16 KB</p>
<p>时间限制</p>
<p>400 ms</p>
<p>内存限制</p>
<h2 id="错误原因-2"><a href="#错误原因-2" class="headerlink" title="错误原因"></a>错误原因</h2><p>看不懂题目</p>
<p>后来看了别人的代码才看懂了题目</p>
<p>中译中如下：</p>
<ul>
<li><p>A2 = 存在整数 K 使之可以表示为 3K+1 的整数的个数</p>
<p>这个的意思，就是算，这个数列中除以3取余为1的个数</p>
</li>
</ul>
<ul>
<li><p>A3 = 存在整数 K 使之可以表示为 3K+2 的所有整数的平均值（精确到小数点后 1 位）</p>
<p>这个的意思，就是算，这个数列中除以3取余为2 的所有数的平均值</p>
</li>
</ul>
<h2 id="正确代码如下："><a href="#正确代码如下：" class="headerlink" title="正确代码如下："></a>正确代码如下：</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;	</span><br><span class="line">	<span class="type">double</span> a3 = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>, a1 = INT_MIN, a2 = <span class="number">0</span>,p=<span class="number">0</span>,t=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p);</span><br><span class="line">		<span class="keyword">if</span> (p % <span class="number">3</span> == <span class="number">0</span> &amp;&amp; p &gt; a1)	a1 = p;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (p % <span class="number">3</span> == <span class="number">1</span>)	a2++;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(p%<span class="number">3</span>==<span class="number">2</span>)&#123;</span><br><span class="line">			a3 += p;</span><br><span class="line">			t++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(t!=<span class="number">0</span>)	a3 = a3 * <span class="number">1.0</span> / t;</span><br><span class="line">	<span class="comment">//printf(&quot;t is %d\na3 is %lf\n&quot;, t,a3);</span></span><br><span class="line">	<span class="keyword">if</span> (a1 == INT_MIN)<span class="built_in">printf</span>(<span class="string">&quot;NONE &quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a1);</span><br><span class="line">	<span class="keyword">if</span> (a2 == <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;NONE &quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a2);</span><br><span class="line">	<span class="keyword">if</span> (a3 == <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">&quot;NONE&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%.01lf&quot;</span>, a3);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PTA</category>
      </categories>
      <tags>
        <tag>PTA</tag>
        <tag>C语言</tag>
      </tags>
  </entry>
</search>
